import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PapControlDirective } from '../../directive';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatInputModule } from '@angular/material/input';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatRadioModule } from '@angular/material/radio';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/material/form-field";
import * as i5 from "@angular/material/checkbox";
import * as i6 from "@angular/material/radio";
export class InputComponent {
    constructor() {
        /**
         * Type of Input checkbox text
         */
        this.typeInput = 'text';
        /**
         * Placeholder for input
         */
        this.placeholderInput = '';
        /**
         * Label for input
         */
        this.labelInput = 'Complete label';
        /**
         * When input is radio button
         */
        this.toggleData = [{ value: false, description: 'default' }];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: InputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.1", type: InputComponent, isStandalone: true, selector: "ngx-input-component", inputs: { typeInput: "typeInput", placeholderInput: "placeholderInput", labelInput: "labelInput", toggleData: "toggleData", control: "control" }, ngImport: i0, template: "<div class=\"flex flex-col\">\n  <ng-container [ngSwitch]=\"typeInput\">\n    <mat-checkbox\n      *ngSwitchCase=\"'boolean'\"\n      [formControl]=\"control.control\"\n      class=\"border-0 flex ng-dirty ng-touched ng-valid placeholder:text-gray-400 py-1.5 ring-inset rounded-md shadow-sm sm:leading-6 sm:text-sm text-gray-900\"\n    />\n    <ng-container *ngSwitchCase=\"'toggle'\">\n      <mat-radio-group [formControl]=\"control.control\" class=\"flex gap-5\">\n        <div *ngFor=\"let radio of toggleData\" class=\"flex items-center gap-3\">\n          <mat-radio-button [value]=\"radio.value\" />\n          <p class=\"!m-0\">{{ radio.description }}</p>\n        </div>\n      </mat-radio-group>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'area'\">\n      <mat-form-field appearance=\"outline\" class=\"rotate-180 -scale-[0.8]\">\n        <mat-label>{{ labelInput }}</mat-label>\n        <textarea\n          matInput\n          [placeholder]=\"placeholderInput ?? ''\"\n          [formControl]=\"control.control\"\n          class=\"font-semibold !text-xl\"\n        ></textarea>\n      </mat-form-field>\n    </ng-container>\n    <mat-form-field\n      appearance=\"outline\"\n      *ngSwitchDefault\n      class=\"rotate-180 -scale-[0.8]\"\n    >\n      <mat-label>{{ labelInput }}</mat-label>\n      <input\n        matInput\n        [placeholder]=\"placeholderInput ?? ''\"\n        [formControl]=\"control.control\"\n        class=\"font-semibold !text-xl\"\n      />\n    </mat-form-field>\n  </ng-container>\n  <div *ngIf=\"control?.control?.errors?.error\" class=\"pl-3 py-2 text-red-500\">\n    {{ control.control?.errors?.error }}\n  </div>\n</div>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i1.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i4.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i4.MatLabel, selector: "mat-label" }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i5.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "ngmodule", type: MatRadioModule }, { kind: "directive", type: i6.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { kind: "component", type: i6.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: InputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-input-component', standalone: true, imports: [
                        CommonModule,
                        PapControlDirective,
                        FormsModule,
                        ReactiveFormsModule,
                        MatInputModule,
                        MatCheckboxModule,
                        MatRadioModule,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"flex flex-col\">\n  <ng-container [ngSwitch]=\"typeInput\">\n    <mat-checkbox\n      *ngSwitchCase=\"'boolean'\"\n      [formControl]=\"control.control\"\n      class=\"border-0 flex ng-dirty ng-touched ng-valid placeholder:text-gray-400 py-1.5 ring-inset rounded-md shadow-sm sm:leading-6 sm:text-sm text-gray-900\"\n    />\n    <ng-container *ngSwitchCase=\"'toggle'\">\n      <mat-radio-group [formControl]=\"control.control\" class=\"flex gap-5\">\n        <div *ngFor=\"let radio of toggleData\" class=\"flex items-center gap-3\">\n          <mat-radio-button [value]=\"radio.value\" />\n          <p class=\"!m-0\">{{ radio.description }}</p>\n        </div>\n      </mat-radio-group>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'area'\">\n      <mat-form-field appearance=\"outline\" class=\"rotate-180 -scale-[0.8]\">\n        <mat-label>{{ labelInput }}</mat-label>\n        <textarea\n          matInput\n          [placeholder]=\"placeholderInput ?? ''\"\n          [formControl]=\"control.control\"\n          class=\"font-semibold !text-xl\"\n        ></textarea>\n      </mat-form-field>\n    </ng-container>\n    <mat-form-field\n      appearance=\"outline\"\n      *ngSwitchDefault\n      class=\"rotate-180 -scale-[0.8]\"\n    >\n      <mat-label>{{ labelInput }}</mat-label>\n      <input\n        matInput\n        [placeholder]=\"placeholderInput ?? ''\"\n        [formControl]=\"control.control\"\n        class=\"font-semibold !text-xl\"\n      />\n    </mat-form-field>\n  </ng-container>\n  <div *ngIf=\"control?.control?.errors?.error\" class=\"pl-3 py-2 text-red-500\">\n    {{ control.control?.errors?.error }}\n  </div>\n</div>\n" }]
        }], propDecorators: { typeInput: [{
                type: Input
            }], placeholderInput: [{
                type: Input
            }], labelInput: [{
                type: Input
            }], toggleData: [{
                type: Input
            }], control: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWZ0eC1mb3Jtcy9zcmMvbGliL2Z0eC1mb3Jtcy9zaGFyZWQvaW5wdXQvaW5wdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWZ0eC1mb3Jtcy9zcmMvbGliL2Z0eC1mb3Jtcy9zaGFyZWQvaW5wdXQvaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQWEsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7OztBQWtCekQsTUFBTSxPQUFPLGNBQWM7SUFoQjNCO1FBaUJFOztXQUVHO1FBQ00sY0FBUyxHQUFJLE1BQU0sQ0FBQztRQUM3Qjs7V0FFRztRQUNNLHFCQUFnQixHQUFJLEVBQUUsQ0FBQztRQUNoQzs7V0FFRztRQUNNLGVBQVUsR0FBSSxnQkFBZ0IsQ0FBQztRQUN4Qzs7V0FFRztRQUNNLGVBQVUsR0FBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztLQUduRTs4R0FuQlksY0FBYztrR0FBZCxjQUFjLGlPQ3hCM0IscXBEQTRDQSx5RERoQ0ksWUFBWSwyZ0JBRVosV0FBVyxzWkFDWCxtQkFBbUIsaU5BQ25CLGNBQWMsc25CQUNkLGlCQUFpQixnTEFDakIsY0FBYzs7MkZBTUwsY0FBYztrQkFoQjFCLFNBQVM7K0JBQ0UscUJBQXFCLGNBQ25CLElBQUksV0FDUDt3QkFDUCxZQUFZO3dCQUNaLG1CQUFtQjt3QkFDbkIsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGNBQWM7d0JBQ2QsaUJBQWlCO3dCQUNqQixjQUFjO3FCQUNmLG1CQUdnQix1QkFBdUIsQ0FBQyxNQUFNOzhCQU10QyxTQUFTO3NCQUFqQixLQUFLO2dCQUlHLGdCQUFnQjtzQkFBeEIsS0FBSztnQkFJRyxVQUFVO3NCQUFsQixLQUFLO2dCQUlHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBRU4sT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBQYXBDb250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBOZ0NvbnRyb2wsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNYXRJbnB1dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0JztcbmltcG9ydCB7IE1hdENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2hlY2tib3gnO1xuaW1wb3J0IHsgTWF0UmFkaW9Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9yYWRpbyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC1pbnB1dC1jb21wb25lbnQnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFBhcENvbnRyb2xEaXJlY3RpdmUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBNYXRJbnB1dE1vZHVsZSxcbiAgICBNYXRDaGVja2JveE1vZHVsZSxcbiAgICBNYXRSYWRpb01vZHVsZSxcbiAgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIElucHV0Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFR5cGUgb2YgSW5wdXQgY2hlY2tib3ggdGV4dFxuICAgKi9cbiAgQElucHV0KCkgdHlwZUlucHV0PyA9ICd0ZXh0JztcbiAgLyoqXG4gICAqIFBsYWNlaG9sZGVyIGZvciBpbnB1dFxuICAgKi9cbiAgQElucHV0KCkgcGxhY2Vob2xkZXJJbnB1dD8gPSAnJztcbiAgLyoqXG4gICAqIExhYmVsIGZvciBpbnB1dFxuICAgKi9cbiAgQElucHV0KCkgbGFiZWxJbnB1dD8gPSAnQ29tcGxldGUgbGFiZWwnO1xuICAvKipcbiAgICogV2hlbiBpbnB1dCBpcyByYWRpbyBidXR0b25cbiAgICovXG4gIEBJbnB1dCgpIHRvZ2dsZURhdGE/ID0gW3sgdmFsdWU6IGZhbHNlLCBkZXNjcmlwdGlvbjogJ2RlZmF1bHQnIH1dO1xuICBASW5wdXQoKVxuICBjb250cm9sPzogTmdDb250cm9sIHwgYW55IHwgdW5rbm93bjsgLy9lc2xpbnQtZGlzYWJsZS1saW5lXG59XG4iLCI8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbFwiPlxuICA8bmctY29udGFpbmVyIFtuZ1N3aXRjaF09XCJ0eXBlSW5wdXRcIj5cbiAgICA8bWF0LWNoZWNrYm94XG4gICAgICAqbmdTd2l0Y2hDYXNlPVwiJ2Jvb2xlYW4nXCJcbiAgICAgIFtmb3JtQ29udHJvbF09XCJjb250cm9sLmNvbnRyb2xcIlxuICAgICAgY2xhc3M9XCJib3JkZXItMCBmbGV4IG5nLWRpcnR5IG5nLXRvdWNoZWQgbmctdmFsaWQgcGxhY2Vob2xkZXI6dGV4dC1ncmF5LTQwMCBweS0xLjUgcmluZy1pbnNldCByb3VuZGVkLW1kIHNoYWRvdy1zbSBzbTpsZWFkaW5nLTYgc206dGV4dC1zbSB0ZXh0LWdyYXktOTAwXCJcbiAgICAvPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIid0b2dnbGUnXCI+XG4gICAgICA8bWF0LXJhZGlvLWdyb3VwIFtmb3JtQ29udHJvbF09XCJjb250cm9sLmNvbnRyb2xcIiBjbGFzcz1cImZsZXggZ2FwLTVcIj5cbiAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgcmFkaW8gb2YgdG9nZ2xlRGF0YVwiIGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTNcIj5cbiAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiBbdmFsdWVdPVwicmFkaW8udmFsdWVcIiAvPlxuICAgICAgICAgIDxwIGNsYXNzPVwiIW0tMFwiPnt7IHJhZGlvLmRlc2NyaXB0aW9uIH19PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbWF0LXJhZGlvLWdyb3VwPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIidhcmVhJ1wiPlxuICAgICAgPG1hdC1mb3JtLWZpZWxkIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCIgY2xhc3M9XCJyb3RhdGUtMTgwIC1zY2FsZS1bMC44XVwiPlxuICAgICAgICA8bWF0LWxhYmVsPnt7IGxhYmVsSW5wdXQgfX08L21hdC1sYWJlbD5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgbWF0SW5wdXRcbiAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJJbnB1dCA/PyAnJ1wiXG4gICAgICAgICAgW2Zvcm1Db250cm9sXT1cImNvbnRyb2wuY29udHJvbFwiXG4gICAgICAgICAgY2xhc3M9XCJmb250LXNlbWlib2xkICF0ZXh0LXhsXCJcbiAgICAgICAgPjwvdGV4dGFyZWE+XG4gICAgICA8L21hdC1mb3JtLWZpZWxkPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxtYXQtZm9ybS1maWVsZFxuICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxuICAgICAgKm5nU3dpdGNoRGVmYXVsdFxuICAgICAgY2xhc3M9XCJyb3RhdGUtMTgwIC1zY2FsZS1bMC44XVwiXG4gICAgPlxuICAgICAgPG1hdC1sYWJlbD57eyBsYWJlbElucHV0IH19PC9tYXQtbGFiZWw+XG4gICAgICA8aW5wdXRcbiAgICAgICAgbWF0SW5wdXRcbiAgICAgICAgW3BsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVySW5wdXQgPz8gJydcIlxuICAgICAgICBbZm9ybUNvbnRyb2xdPVwiY29udHJvbC5jb250cm9sXCJcbiAgICAgICAgY2xhc3M9XCJmb250LXNlbWlib2xkICF0ZXh0LXhsXCJcbiAgICAgIC8+XG4gICAgPC9tYXQtZm9ybS1maWVsZD5cbiAgPC9uZy1jb250YWluZXI+XG4gIDxkaXYgKm5nSWY9XCJjb250cm9sPy5jb250cm9sPy5lcnJvcnM/LmVycm9yXCIgY2xhc3M9XCJwbC0zIHB5LTIgdGV4dC1yZWQtNTAwXCI+XG4gICAge3sgY29udHJvbC5jb250cm9sPy5lcnJvcnM/LmVycm9yIH19XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=