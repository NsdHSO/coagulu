{"version":3,"file":"685.9a17346cee3c0d4d.js","mappings":"yTASMA,MAAA,SACEA,MAAA,gBAOFA,6BALIA,MAAA,GAAAA,MAAA,UAAAC,EAAAC,gCARNF,MAAA,cAKEA,MAAA,EAAAG,EAAA,aASFH,4CAXEA,MAAA,aAAAI,EAAAC,OAEML,MAAA,GAAAA,MAAA,OAAAM,EAAAC,GAAAH,EAAAC,8BAURL,MAAA,WCeG,IAAMQ,EAAqB,UAAAC,EAA5B,MAAOD,EAfbE,cAgBmBC,KAAAC,WAAUC,OAAOC,MACjBH,KAAAI,YAAc,IAAIC,IAClBL,KAAAM,UAASJ,OAAOK,MACxBP,KAAAQ,kBAAiBN,OAAOO,KACjCT,KAAAU,OAASV,KAAKM,OAAOK,OAAOC,MAClBZ,KAAAa,KAAQ,IAAIC,MAGtBC,QAAQC,GACN,OAAOA,CACT,CAEAC,UACE,OAAOjB,KAAKU,OACTQ,QACCC,KAAWC,MACTC,MAAG,CACDL,MAAOI,EAAKE,UACTC,GAAMA,EAAE7B,QAAUM,KAAKQ,eAAegB,SAAS9B,OAElD0B,WACA,EAEJK,KAAKF,GAAMA,EAAEH,KAAKG,EAAEP,OAASO,EAAEH,KAAKM,OAAS,EAAI,EAAIH,EAAEP,MAAQ,KAAE,EACjEW,KAAKjC,GAAUM,KAAKC,QAAQ2B,SAAS,CAAClC,EAAMA,UAAO,EACnDmC,KAAU7B,KAAKI,cAEhB0B,WACL,CAEAC,cACE/B,KAAKI,YAAY4B,MAAK,GACtBhC,KAAKI,YAAY6B,UACnB,WAlCWpC,yCAAqB,0BAArBA,EAAqBqC,UAAA,oBAAAC,OAAA,CAAAvC,GAAA,MAAAwC,QAAA,CAAAvB,KAAA,QAAAwB,YAAA,EAAAC,SAAA,CAAAjD,OAAAkD,MAAA,EAAAC,KAAA,EAAAC,OAAA,+0BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDlClCtD,MAAA,UAAAA,CAEC,WAEGA,MAAA,EAAAwD,EAAA,gBAeAxD,MAAA,EAAAyD,EAAA,aAIFzD,QACAA,MAAA,QAAAA,CAAK,4BAIDA,MAAA,2BAAUuD,EAAA3B,SAAS,oBAClB5B,MAAA,eACHA,mBAzBkBA,MAAA,GAAAA,MAAA,gBAAAuD,EAAAhD,GAAA,KAAAgD,EAAAhD,GAAAmD,MAAA1D,CAAc,eAAAuD,EAAA7B,SAe7B1B,MAAA,GAAAA,MAAA,cAAAuD,EAAAhD,GAAA,KAAAgD,EAAAhD,GAAAmD,MAAArB,QAAA,GAMDrC,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAuD,EAAApC,eAAAwC,iCCHFC,KAAYC,eACZC,KAAaC,KACbC,KACAC,KACAC,KACAC,KAAeC,MAAAC,OAAA,iCAAAC,gBAAA,IAMN9D,CAAqB,wCCvB9BR,MAAA,0BAAyCA,MAAA,aCatC,IAAMuE,EAAgB,UAAA9D,EAAvB,MAAO8D,EAfb7D,cAgBmBC,KAAA6D,mBAAkB3D,OAAOO,KAC1CT,KAAA8D,IAAM9D,KAAK6D,gBAAgBE,YAC3B/D,KAAAgE,KAAOhE,KAAK6D,gBAAgBI,sBAHjBL,yCAAgB,0BAAhBA,EAAgB1B,UAAA,mBAAAG,YAAA,EAAAC,SAAA,CAAAjD,OAAAkD,MAAA,EAAAC,KAAA,EAAAC,OAAA,yXAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDxB7BtD,MAAA,UAAAA,CAEC,WAIGA,MAAA,mBACFA,QACAA,MAAA,WAGEA,MAAA,EAAA6E,EAAA,wCACF7E,iBADkBA,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAuD,EAAAkB,sBCChBb,KAAYC,UACZiB,KACAhB,KACAtD,EAEAuE,KACAC,MAAWV,gBAAA,IAMFC,CAAgB","names":["i0","element_r4","icon","StepperStepsComponent_button_2_div_1_Template","elm_r2","value","ctx_r0","vm","StepperStepsComponent","_class","constructor","this","_router","inject","Router","_destroyed$","Subject","_store","Store","stepperService","StepperService","steps$","select","selectStepsEntities","ivan","EventEmitter","trackBy","index","nextTab","pipe","switchMap","step","of","findIndex","v","flagUrl$","map","length","tap","navigate","takeUntil","subscribe","ngOnDestroy","next","complete","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","rf","ctx","StepperStepsComponent_button_2_Template","StepperStepsComponent_div_3_Template","steps","buttonDisable$","CommonModule","i1","MatIconModule","i2","RouterLink","ButtonComponent","RouterLinkActive","MatRippleModule","i3","styles","changeDetection","StepperComponent","_stepperService","vm$","formValues$","form","stepperForm","StepperComponent_stepper_steps_4_Template","RouterOutlet","ReactiveFormsModule","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/components/stepper-steps/stepper-steps.component.html","./src/app/components/stepper-steps/stepper-steps.component.ts","./src/app/components/stepper/stepper.component.html","./src/app/components/stepper/stepper.component.ts"],"sourcesContent":["<div\n  class=\"flex justify-between w-full animate-fade animate-once animate-duration-1000 animate-ease-in-out\"\n>\n  <div class=\"relative flex gap-5\">\n    <button\n      *ngFor=\"let elm of vm?.steps; trackBy: trackBy\"\n      class=\"bg-white\"\n      [routerLink]=\"elm.value\"\n    >\n      <div *ngIf=\"vm[elm.value] as element\">\n        <mat-icon\n          mat-ripple\n          [svgIcon]=\"element.icon\"\n          class=\"transition-all mx-1 border-2 border-solid border-gray-200 rounded-full p-2 !w-9 !h-9 hover:border-gray-300 hover:bg-slate-50animate-fade animate-once animate-duration-1000 animate-ease-in-out\"\n          routerLinkActive=\"border-blue-500 bg-blue-50 text-blue-500\"\n        >\n        </mat-icon>\n      </div>\n    </button>\n    <div\n      *ngIf=\"vm?.steps.length > 1\"\n      class=\"absolute bg-gray-200 w-full h-[1px] border-s bottom-1/2 border-solid border-gray-800 -z-10\"\n    ></div>\n  </div>\n  <div>\n    <ngx-button-component\n      [disable]=\"stepperService.buttonDisable$ | async\"\n      roundedFull=\"rounded-md\"\n      (marian)=\"nextTab()\"\n      >Continue\n    </ngx-button-component>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { MatRippleModule } from '@angular/material/core';\nimport { Store } from '@ngrx/store';\nimport { map, of, Subject, switchMap, takeUntil, tap } from 'rxjs';\nimport { StepperService } from '../services/stepper.service';\nimport { ButtonComponent } from '@ngx-ftx-forms';\nimport { FormStepper, selectStepsEntities, Step } from '../../+state';\n\n@Component({\n  selector: 'stepper-steps',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    RouterLink,\n    ButtonComponent,\n    RouterLinkActive,\n    MatRippleModule,\n  ],\n  templateUrl: './stepper-steps.component.html',\n  styleUrls: ['./stepper-steps.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepperStepsComponent implements OnDestroy {\n  private readonly _router = inject(Router);\n  private readonly _destroyed$ = new Subject();\n  private readonly _store = inject(Store);\n  readonly stepperService = inject(StepperService);\n  steps$ = this._store.select(selectStepsEntities);\n  @Output() ivan? = new EventEmitter();\n  @Input() vm: FormStepper | any; //eslint-disable-line\n\n  trackBy(index: number) {\n    return index;\n  }\n\n  nextTab() {\n    return this.steps$\n      .pipe(\n        switchMap((step: Step[]) =>\n          of({\n            index: step.findIndex(\n              (v) => v.value === this.stepperService.flagUrl$.value\n            ),\n            step,\n          })\n        ),\n        map((v) => v.step[v.index >= v.step.length - 1 ? 0 : v.index + 1]),\n        tap((value) => this._router.navigate([value.value])),\n        takeUntil(this._destroyed$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n}\n","<div\n  class=\"stepper-container-wrapper animate-fade transition-all animate-once animate-duration-1000 animate-ease-in-out\"\n>\n  <div\n    class=\"stepper-container-wrapper-outlet h-[calc(100vh-73px-0.65rem)] overflow-x-auto\"\n  >\n    <router-outlet></router-outlet>\n  </div>\n  <div\n    class=\"stepper-container-wrapper__content flex py-4 px-3 bottom-0 w-full my-2 border-t-2 border-solid border-gray-200\"\n  >\n    <stepper-steps *ngIf=\"vm$ | async as vm\" [vm]=\"vm\"></stepper-steps>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { StepperStepsComponent } from '../stepper-steps/stepper-steps.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StepperService } from '../services/stepper.service';\nimport { PatchFormGroupValueDirective } from '@ngx-ftx-forms';\n\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    MatIconModule,\n    StepperStepsComponent,\n    PatchFormGroupValueDirective,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepperComponent {\n  private readonly _stepperService = inject(StepperService);\n  vm$ = this._stepperService.formValues$;\n  form = this._stepperService.stepperForm;\n}\n"],"x_google_ignoreList":[]}