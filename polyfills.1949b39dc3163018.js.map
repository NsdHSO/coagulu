{"version":3,"file":"polyfills.1949b39dc3163018.js","mappings":"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","names":["global","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","Error","assertZonePatched","Promise","patches","ZoneAwarePromise","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","this","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","_class","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","any","values","Symbol","iterator","promises","finished","errors","race","res","rej","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","constructorName","targetSource","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"sourceRoot":"webpack:///","sources":["./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n});\n"],"x_google_ignoreList":[0]}