(self.webpackChunk_coagulu_source=self.webpackChunk_coagulu_source||[]).push([[324],{"./ftx-sivan-shared/src/lib/components/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>ButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var button_componentngResource=__webpack_require__("./ftx-sivan-shared/src/lib/components/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),fesm2022_core=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs");let ButtonComponent=class ButtonComponent{constructor(){this.marian=new core.EventEmitter,this.disable=!0,this.roundedFull="",this.typeButton=""}static#_=this.propDecorators={marian:[{type:core.Output}],disable:[{type:core.Input}],roundedFull:[{type:core.Input}],typeButton:[{type:core.Input}]}};ButtonComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sivan-button-component",standalone:!0,imports:[common.CommonModule,fesm2022_button.ot,fesm2022_core.si],template:'<button\n  [type]="typeButton"\n  [disabled]="!disable"\n  [ngClass]="{\n    \'bg-blue-500 cursor-pointer\': disable,\n    \'bg-blue-700 cursor-not-allowed\': !disable\n  }"\n  class="p-2 bg-blue-500 text-white"\n  [class]="roundedFull"\n  [attr.aria-label]="roundedFull"\n  (click)="marian.emit()"\n  mat-ripple\n>\n  <ng-content></ng-content>\n</button>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[button_componentngResource_default()]})],ButtonComponent)},"./ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>ftx_forms_component_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var ConstantsEnum,TypeConstantEnum,TypePattern,ftx_forms_componentngResource=__webpack_require__("./ftx-forms/src/lib/ftx-forms/ftx-forms.component.scss?ngResource"),ftx_forms_componentngResource_default=__webpack_require__.n(ftx_forms_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),form_control_entity_component=__webpack_require__("./ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts");!function(ConstantsEnum){ConstantsEnum[ConstantsEnum.ZERO=0]="ZERO"}(ConstantsEnum||(ConstantsEnum={})),function(TypeConstantEnum){TypeConstantEnum.EMAIL="email",TypeConstantEnum.MAX="max",TypeConstantEnum.MIN="min",TypeConstantEnum.NUMBER="number",TypeConstantEnum.PATTERN="pattern",TypeConstantEnum.REQUIRED="required",TypeConstantEnum.STRING="string",TypeConstantEnum.MIN_CHAR="minChar",TypeConstantEnum.ONLY_CHAR="only_char"}(TypeConstantEnum||(TypeConstantEnum={})),function(TypePattern){TypePattern.ONLY_NUMBER="^[0-9]+$",TypePattern.ONLY_CHAR="^[a-zA-Z\\s]*$"}(TypePattern||(TypePattern={}));let ValidatorService=class ValidatorService{requiredValidator(control,errorMsg){return control.value?null:{error:errorMsg||"This field Is must"}}minValidator(control,option,errorMsg){return control.value>=option?null:{error:errorMsg??!0}}minCharValidator(control,option,errorMsg){return String(control.value).length>=option||0===String(control.value).length?null:{error:errorMsg??!0}}patternValidator(control,optionRegex,errorMsg){const pattern=new RegExp(optionRegex);return pattern instanceof RegExp?pattern.test(control.value)?null:{error:errorMsg??!0}:null}emailValidator(control,errorMsg){if(!control.value)return null;return/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(control.value)?null:{error:errorMsg??!0}}validatorGenerators(){return{[TypeConstantEnum.REQUIRED]:(control,_,errorMsg)=>this.requiredValidator(control,errorMsg),[TypeConstantEnum.MIN]:(control,option,errorMsg)=>{if("number"==typeof option)return this.minValidator(control,option,errorMsg);throw new Error("Invalid option for this validator")},[TypeConstantEnum.MIN_CHAR]:(control,option,errorMsg)=>{if("number"==typeof option)return this.minCharValidator(control,option,errorMsg);throw new Error("Invalid option for this validator")},[TypeConstantEnum.PATTERN]:(control,option,errorMsg)=>{if("string"==typeof option||option instanceof RegExp)return this.patternValidator(control,option,errorMsg);throw new Error("Invalid option for this validator")},[TypeConstantEnum.EMAIL]:(control,_,errorMsg)=>this.emailValidator(control,errorMsg)}}};ValidatorService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ValidatorService);let GenerateFormBuilderService=class GenerateFormBuilderService{constructor(){this._fb=(0,core.inject)(fesm2022_forms.qu),this._validatorService=(0,core.inject)(ValidatorService)}buildFormFromJson(jsonData){return console.log(this.buildFormGenerate(jsonData)),this.buildFormGenerate(jsonData)}extractValidator(item){let validators=[];return item.validators&&item.validators.length>0&&(validators=item.validators.map((validatorConfig=>this.getValidator(validatorConfig)))),validators}getValidator(validatorConfig){const{type,option,errorMsg}=validatorConfig,validatorGenerator=this._validatorService.validatorGenerators();if(type in validatorGenerator)return control=>validatorGenerator[type](control,option,errorMsg??"");throw new Error("Please Implement this Validator")}buildFormGenerate(data){if(data.values){const group={};return data.values.forEach((item=>{const label=item.label?.toLowerCase();if(item.values)group[label??""]=this.buildFormGenerate(item);else if(item.bulkValues)group[label??""]=this._fb.array(item.bulkValues.map((subItem=>this.buildFormGenerate(subItem))));else{const validators=this.extractValidator(item);group[label??""]=this.setFormControl(item,validators)}})),this._fb.group(group)}if(data.bulkValues)return this._fb.array(data.bulkValues.map((subItem=>this.buildFormGenerate(subItem))));{const validators=this.extractValidator(data);return this.setFormControl(data,validators)}}setFormControl(data,validators){return this._fb.control(data.value||null,{validators,updateOn:data.updateOn})}getCustomFromControlType(control){return(0,fesm2022_forms.em)(control)?"FormArray":(0,fesm2022_forms.Yb)(control)?"FormGroup":"FormControl"}};GenerateFormBuilderService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],GenerateFormBuilderService);var generative_service=__webpack_require__("./ftx-sivan-shared/src/lib/service/generative.service.ts"),button_component=__webpack_require__("./ftx-sivan-shared/src/lib/components/button/button.component.ts");let FtxFormsComponent=class FtxFormsComponent{constructor(){this.dynamicForm={},this.submitEvent=new core.EventEmitter,this.generativeService=(0,core.inject)(generative_service.y),this.generateFormBuilderService=(0,core.inject)(GenerateFormBuilderService),this.controlMapping=[],this._jsonData={}}get jsonData(){return this._jsonData}set jsonData(jsonData){if(this._jsonData=jsonData,jsonData.values)for(const item of jsonData.values){const label=item.label?.toLowerCase();item?.label&&(this.controlMapping[label??""]=item);[...item.values??[],...item.bulkValues??[]].forEach((values=>{values.bulkValues&&values.bulkValues.forEach((c=>{this.controlMapping[c.label??""]=c}));const label=values.label?.toLowerCase();this.controlMapping[label??""]=values}))}}static#_=this.propDecorators={dynamicForm:[{type:core.Input}],submitEvent:[{type:core.Output}],jsonData:[{type:core.Input}]}};FtxFormsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"ngx-ftx-forms",standalone:!0,imports:[common.CommonModule,fesm2022_forms.UX,form_control_entity_component.e,button_component.r],template:'<form\n  [formGroup]="dynamicForm"\n  (ngSubmit)="submitEvent.emit(true)"\n  class="p-3 flex flex-col gap-0.5 bg-slate-200 ngx-forms-form-wrapper rounded-br-lg rounded-bl-lg"\n>\n  <ng-container\n    *ngTemplateOutlet="\n      renderControlRecursive;\n      context: {\n        control: dynamicForm,\n        controlKey: null,\n        is: false\n      }\n    "\n  />\n\n  <sivan-button-component\n    class="bg-white p-2"\n    [disable]="dynamicForm.pristine || dynamicForm.invalid"\n    roundedFull="rounded-md"\n    >Submit\n  </sivan-button-component>\n</form>\n\n<ng-template\n  #renderControlRecursive\n  let-control="control"\n  let-controlKey="controlKey"\n  let-isArray="isArray"\n>\n  <ng-container\n    [ngSwitch]="generateFormBuilderService.getCustomFromControlType(control)"\n  >\n    \x3c!-- Render FormArray --\x3e\n    <ng-container *ngSwitchCase="\'FormArray\'">\n      <div\n        class="flex"\n        [ngClass]="{ \'flex-col gap-0.5\': control.controls[1].length }"\n      >\n        <ng-container\n          *ngFor="\n            let arrayControl of control.controls;\n            trackBy: generativeService.trackBy;\n            let index = index\n          "\n        >\n          <ng-container\n            *ngTemplateOutlet="\n              renderControlRecursive;\n              context: {\n                control: arrayControl,\n                controlKey: controlKey,\n                isArray: index\n              }\n            "\n          />\n        </ng-container>\n      </div>\n    </ng-container>\n    \x3c!-- Render FormGroup --\x3e\n    <ng-container *ngSwitchCase="\'FormGroup\'">\n      <ng-container\n        *ngFor="\n          let groupControl of control.controls | keyvalue;\n          trackBy: generativeService.trackBy\n        "\n      >\n        <ng-container\n          *ngTemplateOutlet="\n            renderControlRecursive;\n            context: {\n              control: groupControl.value,\n              controlKey: groupControl.key,\n            }\n          "\n        />\n      </ng-container>\n    </ng-container>\n    \x3c!-- Render FormControl --\x3e\n    <ng-container *ngSwitchDefault>\n      <div class="w-full bg-white">\n        <ngx-form-control-entity\n          [isFormArray]="isArray"\n          [formControl]="control"\n          [labelInput]="controlMapping[controlKey]?.labelHint"\n          [label]="controlKey"\n          [placeholderInput]="controlMapping[controlKey]?.placeholder"\n          [toggleData]="controlMapping[controlKey]?.valueToggleShow"\n          [typeInput]="controlMapping[controlKey]?.typeInput"\n        />\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-template>\n<ng-template #element>tete</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[ftx_forms_componentngResource_default()]})],FtxFormsComponent);const ftx_forms_component_stories={title:"FtxFormsComponent",component:FtxFormsComponent},Primary={render:args=>({props:args}),args:{dynamicForm:{},jsonData:""}}},"./ftx-forms/src/lib/ftx-forms/ftx-forms.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"form.ngx-forms-form-wrapper > div:first-child {\n    border-top-left-radius: 0.5rem;\n    border-top-right-radius: 0.5rem\n}\nform.ngx-forms-form-wrapper > :last-child {\n    border-bottom-left-radius: 0.5rem;\n    border-bottom-right-radius: 0.5rem\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./ftx-sivan-shared/src/lib/components/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);