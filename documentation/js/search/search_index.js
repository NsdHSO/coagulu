var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionBadge.html",[0,0.087,1,2.382]],["body/interfaces/ActionBadge.html",[0,0.112,1,4.39,2,0.909,3,0.156,4,0.224,5,0.201,6,0.833,7,1.432,8,3.543,9,3.873,10,0.178,11,0.432,12,3.862,13,1.947,14,1.543,15,5.233,16,3.253,17,1.654,18,0.436,19,0.016,20,0.854,21,5.554,22,1.074,23,2.203,24,1.091,25,1.921,26,2.216,27,1.032,28,2.406,29,1.839,30,5.299,31,2.873,32,4.109,33,3.28,34,2.873,35,3.873,36,0.251,37,2.432,38,1.491,39,1.761,40,1.534,41,5.405,42,1.491,43,0.597,44,1.761,45,1.839,46,4.314,47,1.839,48,4.314,49,2.203,50,2.203,51,1.076,52,1.619,53,4.314,54,1.921,55,4.314,56,3.543,57,2.312,58,3.543,59,3.873,60,4.314,61,0.037,62,0.037]],["title/components/AppComponent.html",[24,0.678,63,1.314]],["body/components/AppComponent.html",[3,0.189,4,0.212,5,0.19,6,1.113,10,0.169,11,0.418,18,0.28,19,0.016,20,0.538,22,0.881,23,2.091,24,1.163,26,1.537,27,0.98,36,0.19,38,2.416,39,2.619,40,1.498,42,1.808,43,0.724,44,2.135,45,2.229,47,2.229,49,2.67,50,2.67,51,1.021,52,1.537,61,0.036,62,0.036,63,2.376,64,2.229,65,1.603,66,1.745,67,1.672,68,1.823,69,4.095,70,1.475,71,2.352,72,3.483,73,6.657,74,6.657,75,6.042,76,6.657,77,1.359,78,0.482,79,2.455,80,1.253,81,4.731,82,3.363,83,1.823,84,2.229,85,2.047,86,1.155,87,2.702,88,1.823,89,0.738,90,1.823,91,1.603,92,1.823,93,2.328,94,1.823,95,1.603,96,1.359,97,1.823,98,1.603,99,1.823,100,1.537,101,1.823,102,1.672,103,1.672,104,1.823,105,1.537,106,1.823,107,1.603,108,1.823,109,1.603,110,1.603,111,1.823,112,1.603,113,0.567,114,1.823,115,1.603,116,0.94,117,1.823,118,1.603,119,1.603,120,1.415,121,0.791,122,1.415,123,1.603,124,1.823,125,1.603,126,1.823,127,1.603,128,1.823,129,1.603,130,1.745,131,1.603,132,1.745,133,1.823]],["title/interfaces/BookDetail.html",[0,0.087,134,2.382]],["body/interfaces/BookDetail.html",[0,0.154,2,0.802,3,0.137,4,0.197,5,0.177,10,0.157,11,0.399,13,1.796,14,1.529,18,0.43,19,0.016,20,0.926,36,0.275,61,0.034,62,0.034,78,0.655,89,0.695,113,0.527,121,0.735,134,3.946,135,2.892,136,2.126,137,2.286,138,4.849,139,4.095,140,2.144,141,2.699,142,1.262,143,2.182,144,1.292,145,1.736,146,1.418,147,0.873,148,1.212,149,1.315,150,1.409,151,1.212,152,1.262,153,1.724,154,1.315,155,1.315,156,1.212,157,1.212,158,1.315,159,2.892,160,1.589,161,1.315,162,1.262,163,1.315,164,1.724,165,1.315,166,1.315,167,1.315,168,1.212,169,1.212,170,1.315,171,1.37,172,2.699,173,3.125,174,3.125]],["title/components/ButtonComponent.html",[24,0.678,91,1.314]],["body/components/ButtonComponent.html",[3,0.177,4,0.192,5,0.172,6,1.249,7,2.017,10,0.153,18,0.4,19,0.016,20,0.644,22,0.925,23,1.893,24,1.227,26,2.281,27,0.887,28,2.445,29,1.58,36,0.172,38,2.397,39,2.64,40,1.428,42,1.695,43,0.679,44,2.001,45,2.089,47,2.089,49,2.503,50,2.503,51,0.925,52,1.392,61,0.034,62,0.034,63,1.451,64,2.089,65,1.451,66,1.58,67,1.514,68,1.65,70,1.335,71,1.514,77,1.627,78,0.577,79,1.58,80,1.788,83,1.65,84,2.089,85,1.919,86,1.046,87,2.602,88,1.65,89,0.715,90,1.65,91,2.287,92,2.445,93,2.182,94,1.65,95,1.451,96,1.23,97,1.65,98,1.451,99,1.65,100,1.392,101,1.65,102,1.514,103,1.514,104,1.65,105,1.392,106,1.65,107,1.451,108,1.65,109,1.451,110,1.451,111,1.65,112,1.451,113,0.513,114,1.65,115,1.451,116,0.851,117,1.65,118,1.451,119,1.451,120,1.281,121,0.716,122,1.281,123,1.451,124,1.65,125,1.451,126,1.65,127,1.451,128,1.65,129,1.451,130,1.58,131,1.451,132,1.58,133,1.65,144,0.947,147,1.125,175,3.707,176,6.346,177,6.346,178,5.664,179,2.627,180,2.15,181,5.493,182,6.346,183,4.401,184,6.346,185,3.078,186,4.283,187,4.283,188,4.283,189,4.931,190,4.283,191,4.401,192,4.283,193,1.987,194,4.176,195,4.902]],["title/interfaces/CategorySpendMoney.html",[0,0.087,156,1.07]],["body/interfaces/CategorySpendMoney.html",[0,0.169,2,0.556,3,0.202,4,0.137,5,0.123,10,0.109,11,0.309,14,1.338,17,1.182,18,0.345,19,0.016,20,0.893,36,0.305,43,0.822,61,0.027,62,0.027,78,0.78,89,0.538,113,0.697,116,0.605,121,0.746,136,1.931,137,2.307,142,1.671,143,2.177,144,0.973,145,1.568,146,1.417,147,0.887,148,2.032,149,1.335,150,1.356,151,1.605,152,1.282,153,1.854,154,1.335,155,1.335,156,1.709,157,1.962,158,1.335,160,1.605,161,1.741,162,1.671,163,1.741,164,1.741,165,1.335,166,1.335,167,1.335,168,1.605,169,1.845,170,1.335,171,1.931,196,1.031,197,0.657,198,0.989,199,2.665,200,1.123,201,1.031,202,0.714,203,1.123,204,1.391,205,1.076,206,1.513,207,1.391,208,1.123,209,1.123,210,1.123,211,1.123,212,1.031,213,1.123,214,1.123,215,1.123,216,1.646,217,1.123,218,1.123,219,1.123,220,1.123,221,1.123,222,1.123,223,1.076,224,1.123,225,1.076,226,1.123,227,1.123,228,1.123,229,1.577,230,1.123,231,1.949,232,1.123,233,1.646,234,1.123,235,2.147,236,1.123,237,1.577,238,1.949,239,1.123,240,1.123,241,1.123,242,1.031,243,1.123,244,1.123,245,1.031,246,1.076,247,1.717,248,1.45,249,1.173,250,1.076,251,1.173,252,1.173,253,1.173,254,0.605,255,1.173,256,1.076,257,1.577,258,1.577,259,1.577,260,1.577]],["title/interfaces/DataFormBuilder.html",[0,0.087,261,1.892]],["body/interfaces/DataFormBuilder.html",[0,0.158,2,0.864,3,0.148,4,0.213,5,0.191,6,0.792,7,1.361,10,0.169,11,0.419,13,2.51,14,1.023,16,2.094,18,0.463,19,0.016,20,0.897,22,0.691,31,2.731,36,0.292,37,2.311,40,1.066,61,0.036,62,0.036,78,0.738,144,1.011,145,1.645,146,1.28,150,0.864,261,3.722,262,2.909,263,2.909,264,4.309,265,3.057,266,4.618,267,4.045,268,3.722,269,4.309,270,4.618,271,4.045,272,4.045,273,4.309,274,3.486,275,3.713,276,2.731,277,2.731,278,2.909,279,2.909,280,3.117,281,3.117,282,3.979,283,3.117]],["title/interfaces/DescriptionEntity.html",[0,0.087,271,2.236]],["body/interfaces/DescriptionEntity.html",[0,0.164,2,0.959,3,0.164,4,0.236,5,0.212,6,0.879,7,1.51,10,0.188,11,0.447,13,2.012,14,1.573,16,3.219,18,0.431,19,0.016,20,0.902,22,0.767,31,3.031,36,0.301,37,2.565,40,1.183,61,0.038,62,0.038,78,0.658,144,1.079,145,1.233,146,0.959,150,0.959,261,3.408,262,3.229,263,3.229,264,3.229,265,2.722,266,3.46,267,3.031,268,3.408,269,3.229,270,3.46,271,4.026,272,3.721,273,3.964,274,3.721,275,3.964,276,3.031,277,3.031,278,3.229,279,3.229,280,3.46,281,3.46,282,4.248,283,3.46]],["title/directives/FadeInOutDirective.html",[86,0.947,123,1.314]],["body/directives/FadeInOutDirective.html",[3,0.121,4,0.173,5,0.155,6,1.198,7,2.058,10,0.138,11,0.366,13,1.204,18,0.357,19,0.016,22,0.771,25,1.489,26,2.371,27,0.8,36,0.155,38,1.581,40,1.189,42,1.581,43,0.633,51,0.834,54,2.697,61,0.031,62,0.031,70,1.204,77,1.518,78,0.73,80,1.854,85,2.297,86,1.655,89,0.394,96,2.15,122,1.156,123,1.79,144,0.883,179,2.451,185,2.872,197,1.141,202,1.239,265,2.228,284,6.203,285,3.344,286,5.284,287,7.167,288,7.167,289,6.64,290,5.284,291,5.284,292,6.78,293,2.451,294,7.001,295,5.284,296,3.367,297,6.023,298,6.023,299,7.001,300,2.335,301,6.475,302,3.756,303,5.284,304,5.604,305,5.284,306,6.023,307,5.213,308,3.863,309,5.284,310,2.036,311,2.938,312,5.284,313,3.863,314,6.023,315,4.679,316,5.284,317,4.106,318,4.574,319,4.106,320,3.863,321,4.679,322,5.284,323,3.863,324,5.284,325,5.284,326,5.284,327,5.284,328,5.284,329,4.106,330,3.863,331,1.885,332,5.284,333,5.284,334,3.344,335,4.574,336,3.002,337,3.863,338,3.344,339,3.863,340,1.986,341,3.863,342,3.863,343,3.863,344,3.863,345,3.863,346,3.002,347,3.002,348,3.863,349,3.863,350,3.344,351,3.863,352,3.863,353,3.863,354,3.863,355,5.284,356,3.863,357,3.863,358,3.863,359,3.863]],["title/components/FormBadgeComponent.html",[24,0.678,52,1.26]],["body/components/FormBadgeComponent.html",[0,0.086,1,4.276,3,0.163,4,0.17,5,0.153,6,1.193,7,1.846,8,4.569,9,2.951,10,0.136,11,0.362,12,3.465,14,1.128,15,4.243,16,2.638,18,0.381,19,0.016,20,0.594,21,4.058,22,0.983,23,1.678,24,1.043,25,1.463,26,2.088,27,0.787,28,2.3,29,1.401,30,5.411,31,2.189,32,3.928,33,2.499,34,2.189,35,2.951,36,0.21,37,1.853,38,2.371,39,2.568,40,1.679,41,5.833,42,1.562,43,0.626,44,1.845,45,1.926,46,4.52,47,1.926,48,5.166,49,2.308,50,2.308,51,0.82,52,2.088,53,5.166,54,2.3,55,5.166,56,3.712,57,2.423,58,3.712,59,4.058,60,4.52,61,0.031,62,0.031,63,1.286,64,1.926,65,1.286,66,1.401,67,1.342,68,1.463,70,1.184,71,1.342,77,1.714,78,0.608,79,1.401,80,1.581,83,1.463,84,1.926,85,1.769,86,0.927,87,2.477,88,1.463,89,0.686,90,1.463,91,1.286,92,1.463,93,2.012,94,1.463,95,1.286,96,1.091,97,1.463,98,1.286,99,1.463,100,1.234,101,1.463,102,1.342,103,1.342,104,1.463,105,1.234,106,1.463,107,1.286,108,1.463,109,1.286,110,1.286,111,1.463,112,1.286,113,0.455,114,1.463,115,1.286,116,0.754,117,1.463,118,1.286,119,1.286,120,1.136,121,0.635,122,1.136,123,1.286,124,1.463,125,1.286,126,1.463,127,1.286,128,1.463,129,1.286,130,1.401,131,1.286,132,1.401,133,1.463,179,2.423,201,1.286,207,1.184,223,1.342,289,5.166,360,3.798,361,3.798,362,3.798,363,5.222,364,3.287,365,3.712,366,3.798,367,3.798,368,3.798,369,3.798,370,3.287,371,3.798,372,3.287,373,3.287,374,2.699,375,3.287,376,3.287,377,3.798,378,3.798,379,3.798,380,3.798,381,3.287,382,2.951,383,4.52,384,3.287,385,3.798,386,3.798]],["title/components/FormControlEntityComponent.html",[24,0.678,95,1.314]],["body/components/FormControlEntityComponent.html",[3,0.147,4,0.147,5,0.132,6,1.224,7,2.01,10,0.117,11,0.326,13,1.021,16,2.661,17,0.867,18,0.422,19,0.016,20,0.725,22,0.998,23,1.447,24,0.962,25,1.262,26,2.5,27,0.678,28,2.122,29,1.208,36,0.132,38,2.336,39,2.473,40,1.648,42,1.408,43,0.721,44,1.663,45,1.735,47,1.735,49,2.079,50,2.079,51,0.707,52,1.064,61,0.028,62,0.028,63,1.109,64,1.735,65,1.109,66,1.208,67,1.157,68,1.262,70,1.021,71,1.157,77,2.047,78,0.726,79,1.208,80,1.811,83,1.262,84,1.735,85,1.594,86,1.149,87,2.32,88,1.262,89,0.676,90,1.262,91,1.109,92,2.122,93,1.813,94,1.262,95,2.039,96,2.188,97,1.262,98,2.039,99,1.262,100,1.064,101,1.262,102,1.157,103,1.157,104,1.262,105,1.064,106,1.262,107,1.109,108,1.262,109,2.039,110,1.109,111,1.262,112,1.109,113,0.392,114,1.262,115,1.109,116,0.65,117,1.262,118,1.109,119,1.109,120,0.98,121,0.547,122,0.98,123,2.039,124,1.262,125,2.039,126,1.262,127,1.109,128,1.262,129,1.109,130,1.208,131,1.109,132,1.208,133,1.262,144,0.547,146,1.301,179,2.183,185,2.557,193,2.183,197,0.707,206,1.47,254,0.65,265,1.984,267,2.712,268,2.687,315,2.544,384,2.834,387,4.976,388,2.544,389,4.705,390,4.073,391,4.279,392,3.382,393,4.767,394,5.508,395,4.705,396,6.406,397,3.915,398,4.533,399,4.279,400,4.279,401,3.274,402,3.274,403,3.345,404,3.274,405,3.274,406,3.274,407,4.073,408,3.274,409,3.656,410,6.021,411,6.021,412,6.021,413,4.279,414,3.274,415,1.447,416,2.327,417,2.834,418,2.834,419,2.834,420,3.274,421,3.274,422,3.274,423,3.274,424,3.656,425,3.274,426,3.274,427,4.279,428,3.274,429,3.274]],["title/components/FormLabelComponent.html",[24,0.678,98,1.314]],["body/components/FormLabelComponent.html",[1,4.184,2,0.646,3,0.155,4,0.159,5,0.143,6,1.244,7,2.052,10,0.126,11,0.344,12,2.558,14,1.074,15,3.536,16,2.756,18,0.423,19,0.016,20,0.709,22,0.994,23,1.565,24,1.005,26,2.525,27,0.733,28,2.216,29,1.306,32,3.784,33,2.33,36,0.143,38,2.355,39,2.566,40,1.689,42,1.488,43,0.596,44,1.758,45,1.835,47,1.835,49,2.198,50,2.198,51,0.764,52,2.026,61,0.03,62,0.03,63,1.199,64,1.835,65,1.199,66,1.306,67,1.251,68,1.364,70,1.104,71,1.251,77,1.887,78,0.669,79,1.306,80,1.853,83,1.364,84,1.835,85,1.685,86,0.864,87,2.403,88,1.364,89,0.669,90,1.364,91,1.199,92,1.364,93,1.917,94,1.364,95,1.199,96,1.017,97,1.364,98,2.113,99,1.364,100,1.15,101,1.364,102,1.251,103,1.251,104,1.364,105,1.15,106,1.364,107,1.199,108,1.364,109,1.199,110,1.199,111,1.364,112,1.199,113,0.424,114,1.364,115,1.199,116,0.703,117,1.364,118,1.199,119,1.199,120,1.059,121,0.592,122,1.059,123,1.199,124,1.364,125,1.199,126,1.364,127,1.199,128,1.364,129,2.113,130,1.306,131,1.199,132,1.306,133,1.364,141,3.054,144,0.961,146,1.38,179,2.307,185,2.703,206,1.214,265,2.097,268,2.805,271,3.927,397,4.087,398,4.087,403,3.536,409,3.865,430,5.55,431,3.065,432,5.75,433,4.974,434,5.75,435,3.541,436,3.541,437,4.974,438,3.784,439,3.541,440,3.541,441,3.541,442,3.541,443,4.974,444,3.054,445,4.974,446,3.541,447,3.541,448,3.541,449,3.065,450,6.813,451,4.974,452,4.974]],["title/interfaces/FormStepper.html",[0,0.087,248,1.26]],["body/interfaces/FormStepper.html",[0,0.169,2,0.552,3,0.202,4,0.136,5,0.122,10,0.108,11,0.308,14,1.334,17,1.176,18,0.366,19,0.016,20,0.883,36,0.305,43,0.821,61,0.026,62,0.026,78,0.767,89,0.536,113,0.695,116,0.601,121,1.033,136,1.926,137,2.299,142,1.918,143,2.175,144,0.97,145,1.565,146,1.401,147,0.883,148,2.147,149,1.329,150,1.33,151,1.6,152,1.276,153,2.049,154,1.329,155,1.329,156,1.6,157,1.704,158,1.329,160,1.6,161,1.998,162,1.666,163,1.736,164,1.736,165,1.329,166,1.329,167,1.329,168,1.6,169,1.841,170,1.329,171,1.926,196,1.025,197,0.653,198,0.983,199,2.664,200,1.116,201,1.025,202,0.709,203,1.116,204,1.385,205,1.069,206,1.509,207,1.385,208,1.116,209,1.116,210,1.116,211,1.116,212,1.025,213,1.116,214,1.116,215,1.116,216,1.639,217,1.116,218,1.116,219,1.116,220,1.116,221,1.116,222,1.116,223,1.069,224,1.116,225,1.069,226,1.116,227,1.116,228,1.116,229,1.57,230,1.116,231,1.942,232,1.116,233,1.639,234,1.116,235,2.14,236,1.116,237,1.57,238,1.942,239,1.116,240,1.116,241,1.116,242,1.025,243,1.116,244,1.116,245,1.025,246,1.069,247,2.008,248,1.711,249,1.166,250,1.069,251,1.166,252,1.166,253,1.166,254,0.601,255,1.166,256,1.069,257,1.57,258,1.57,259,1.57,260,1.57]],["title/components/FtxFormsComponent.html",[24,0.678,100,1.26]],["body/components/FtxFormsComponent.html",[2,0.606,3,0.148,4,0.149,5,0.134,6,1.299,7,2.084,10,0.119,11,0.329,13,1.035,18,0.38,19,0.016,22,1.002,23,1.467,24,0.97,25,1.279,26,1.968,27,0.688,28,2.138,29,1.224,34,3.492,35,2.579,36,0.134,38,2.339,39,2.482,40,1.363,42,1.422,43,0.569,44,1.679,45,1.753,47,1.753,49,2.1,50,2.1,51,0.717,52,1.078,56,3.378,61,0.028,62,0.028,63,1.124,64,2.047,65,1.124,66,1.224,67,1.173,68,1.279,70,1.035,71,1.173,77,1.842,78,0.653,79,1.224,80,1.894,83,1.279,84,1.753,85,1.61,86,0.81,87,2.335,88,1.279,89,0.679,90,1.279,91,2.052,92,1.279,93,1.831,94,1.279,95,2.052,96,0.953,97,1.279,98,1.124,99,1.279,100,1.968,101,1.279,102,1.173,103,1.173,104,1.279,105,1.078,106,1.279,107,1.124,108,1.279,109,1.124,110,1.124,111,1.279,112,1.124,113,0.398,114,1.279,115,1.124,116,0.659,117,1.279,118,1.124,119,1.124,120,0.993,121,0.555,122,0.993,123,1.124,124,1.279,125,1.124,126,1.279,127,1.124,128,1.279,129,1.124,130,1.224,131,1.124,132,1.224,133,1.279,143,0.953,145,1.114,146,0.867,179,2.204,180,1.61,183,3.692,189,4.312,191,3.692,193,1.54,195,4.113,197,1.308,205,1.679,254,0.659,261,3.351,264,2.038,296,2.453,302,3.378,310,1.279,311,1.619,331,1.619,340,1.707,365,3.378,375,2.873,392,3.408,415,1.467,416,2.36,453,5.638,454,2.873,455,3.408,456,5.55,457,4.752,458,5.55,459,5.55,460,3.987,461,3.945,462,4.52,463,5.55,464,3.408,465,4.312,466,4.804,467,3.32,468,4.752,469,3.32,470,3.32,471,3.32,472,4.752,473,3.32,474,3.32,475,3.32,476,3.32,477,3.32,478,1.679,479,2.184,480,1.679,481,4.752,482,3.32,483,4.752,484,4.113,485,2.873,486,3.32,487,4.752,488,3.32,489,3.32,490,3.32,491,2.873,492,2.873,493,3.32,494,3.32,495,3.32,496,3.32,497,2.873,498,3.32,499,4.752,500,3.32,501,3.32,502,5.244,503,3.32,504,6.059,505,3.32,506,2.184,507,3.32,508,3.32]],["title/components/FtxSivanSharedComponent.html",[24,0.678,102,1.371]],["body/components/FtxSivanSharedComponent.html",[3,0.187,4,0.21,5,0.188,6,1.318,19,0.015,22,0.875,23,2.067,24,1.157,26,1.52,27,0.969,28,2.551,29,1.726,36,0.188,38,2.414,39,2.611,40,1.49,42,1.795,43,0.719,44,2.12,45,2.213,47,2.213,49,2.651,50,2.651,51,1.01,52,1.52,61,0.036,62,0.036,63,1.585,64,2.213,65,1.585,66,1.726,67,1.653,68,1.803,70,1.458,71,1.653,79,2.442,83,1.803,84,2.213,85,2.032,86,1.142,87,2.691,88,1.803,89,0.736,90,1.803,91,1.585,92,1.803,93,2.311,94,1.803,95,1.585,96,1.344,97,1.803,98,1.585,99,1.803,100,1.52,101,1.803,102,2.468,103,2.785,104,1.803,105,1.52,106,1.803,107,1.585,108,1.803,109,1.585,110,1.585,111,1.803,112,1.585,113,0.56,114,1.803,115,1.585,116,0.929,117,1.803,118,1.585,119,1.585,120,1.4,121,0.782,122,1.4,123,1.585,124,1.803,125,1.585,126,1.803,127,1.585,128,1.803,129,1.585,130,1.726,131,1.585,132,1.726,133,1.803,416,4.965,509,4.049,510,4.049,511,4.049,512,6.622,513,5.999,514,4.661]],["title/components/FtxTooltipComponent.html",[24,0.678,105,1.26]],["body/components/FtxTooltipComponent.html",[3,0.163,4,0.17,5,0.152,6,1.293,10,0.135,11,0.361,16,2.975,18,0.353,19,0.016,20,0.43,22,0.76,23,1.673,24,1.041,26,2.085,27,0.784,28,2.296,29,1.396,36,0.152,38,2.37,39,2.458,40,1.341,42,1.559,43,0.624,44,1.841,45,1.922,47,1.922,49,2.303,50,2.303,51,0.817,52,1.23,63,1.282,64,1.922,65,1.282,66,1.396,67,1.337,68,1.458,70,1.18,71,1.337,77,1.087,78,0.386,79,1.396,80,1.578,83,1.458,84,1.922,85,1.765,86,0.924,87,2.473,88,1.458,89,0.686,90,1.458,91,1.282,92,1.458,93,2.008,94,1.458,95,1.282,96,1.087,97,1.458,98,1.282,99,1.458,100,1.23,101,1.458,102,1.337,103,1.337,104,1.458,105,2.085,106,1.458,107,1.282,108,1.458,109,1.282,110,1.282,111,1.458,112,1.282,113,0.453,114,1.458,115,1.282,116,0.752,117,1.458,118,1.282,119,1.282,120,1.132,121,0.633,122,1.132,123,1.282,124,1.458,125,1.282,126,1.458,127,1.282,128,1.458,129,1.282,130,1.396,131,1.282,132,1.396,133,1.458,179,2.417,180,1.765,194,2.49,202,1.748,207,1.18,242,1.765,347,2.941,364,3.276,374,2.69,376,4.51,382,4.048,383,5.556,438,4.224,444,4.133,478,1.841,480,1.841,515,4.224,516,4.987,517,3.276,518,5.21,519,5.21,520,5.958,521,5.21,522,6.022,523,5.958,524,3.785,525,3.785,526,2.941,527,5.21,528,3.785,529,3.785,530,3.785,531,5.21,532,3.785,533,3.785,534,3.785,535,4.235,536,2.941,537,3.704,538,3.785,539,3.785,540,5.157,541,5.21,542,2.941,543,4.51,544,3.785,545,5.21,546,4.51,547,3.428,548,6.419,549,4.51,550,6.419,551,5.958,552,5.21,553,3.785,554,3.785,555,3.785,556,3.785,557,3.785,558,5.21,559,3.785,560,3.785,561,3.785,562,3.276,563,3.785,564,3.785,565,3.785,566,3.785,567,3.785,568,3.785,569,3.785,570,3.785,571,3.785,572,3.785,573,3.785,574,2.941,575,5.21,576,3.785,577,3.785,578,3.785,579,3.785]],["title/injectables/GenerateFormBuilderService.html",[460,2.553,580,1.495]],["body/injectables/GenerateFormBuilderService.html",[2,0.658,3,0.113,4,0.162,5,0.145,6,1.2,7,2.061,10,0.129,11,0.349,13,2.062,17,0.955,18,0.417,19,0.016,20,0.66,22,0.917,25,1.389,27,0.747,36,0.145,37,1.759,40,1.614,51,0.778,54,2.64,61,0.03,62,0.03,72,2.078,77,1.447,78,0.513,80,1.862,89,0.674,96,1.668,146,0.658,147,1.001,180,1.221,193,1.672,197,1.48,202,0.845,250,2.576,254,1.448,261,3.602,269,4.406,272,3.95,276,2.904,277,2.904,296,3.028,300,2.226,310,2.549,331,3.227,397,2.563,415,1.593,424,2.801,460,3.315,462,3.315,464,4.208,465,5.465,466,5.931,478,1.274,479,2.372,480,1.274,484,3.121,485,3.121,491,3.121,492,3.121,580,1.941,581,1.959,582,6.211,583,3.121,584,5.026,585,5.807,586,5.807,587,5.807,588,5.038,589,5.038,590,5.038,591,3.605,592,3.605,593,3.605,594,3.605,595,3.315,596,5.038,597,3.605,598,6.853,599,5.038,600,6.287,601,3.605,602,5.038,603,3.605,604,4.36,605,3.605,606,5.038,607,3.605,608,3.121,609,3.605,610,2.563,611,3.605,612,2.372,613,3.605,614,3.605,615,3.605,616,3.605,617,3.605,618,3.605,619,3.605,620,3.121,621,3.914,622,3.605,623,3.605,624,3.605,625,3.605,626,3.121,627,3.605,628,2.563,629,3.121,630,3.605,631,5.807,632,3.605,633,4.36,634,3.605,635,5.038,636,3.605,637,3.605,638,3.605,639,3.605,640,3.605,641,3.605,642,3.605,643,3.605,644,3.605]],["title/injectables/GenerativeService.html",[34,2.236,580,1.495]],["body/injectables/GenerativeService.html",[3,0.176,4,0.253,5,0.227,6,1.125,7,1.932,10,0.257,13,1.755,18,0.398,19,0.016,22,0.821,27,1.166,34,3.878,36,0.227,51,1.216,61,0.04,62,0.04,72,3.245,80,1.491,89,0.573,150,1.36,180,1.907,225,1.989,254,1.118,300,2.973,304,6.453,310,2.169,331,3.282,390,6.228,478,1.989,479,3.704,480,1.989,580,2.592,581,3.059,612,3.704,645,4.873,646,6.728,647,6.728,648,5.63,649,5.63,650,5.63,651,5.63]],["title/interfaces/Graph.html",[0,0.087,160,1.07]],["body/interfaces/Graph.html",[0,0.169,2,0.559,3,0.203,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.889,36,0.305,43,0.824,61,0.027,62,0.027,78,0.768,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.308,142,1.677,143,2.179,144,0.976,145,1.671,146,1.404,147,0.891,148,2.035,149,1.342,150,1.357,151,1.61,152,1.288,153,1.858,154,1.342,155,1.342,156,1.61,157,1.713,158,1.342,160,1.713,161,1.746,162,1.677,163,1.746,164,2.006,165,1.342,166,1.342,167,1.342,168,1.61,169,1.849,170,1.342,171,1.936,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.723,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,2.063]],["title/interfaces/GraphValue.html",[0,0.087,260,1.371]],["body/interfaces/GraphValue.html",[0,0.169,2,0.556,3,0.202,4,0.137,5,0.123,10,0.109,11,0.309,14,1.338,17,1.182,18,0.345,19,0.016,20,0.893,36,0.305,43,0.822,61,0.027,62,0.027,78,0.768,89,0.538,113,0.697,116,0.605,121,0.746,136,1.931,137,2.307,142,1.671,143,2.177,144,0.973,145,1.568,146,1.417,147,0.887,148,2.032,149,1.335,150,1.375,151,1.605,152,1.282,153,1.854,154,1.335,155,1.335,156,1.605,157,1.709,158,1.335,160,1.605,161,1.741,162,1.922,163,2.002,164,1.741,165,1.335,166,1.335,167,1.335,168,1.605,169,1.845,170,1.335,171,1.931,196,1.031,197,0.657,198,0.989,199,2.665,200,1.123,201,1.031,202,0.714,203,1.123,204,1.391,205,1.076,206,1.513,207,1.391,208,1.123,209,1.123,210,1.123,211,1.123,212,1.031,213,1.123,214,1.123,215,1.123,216,1.646,217,1.123,218,1.123,219,1.123,220,1.123,221,1.123,222,1.123,223,1.076,224,1.123,225,1.076,226,1.123,227,1.123,228,1.123,229,1.577,230,1.123,231,1.949,232,1.123,233,1.646,234,1.123,235,2.147,236,1.123,237,1.577,238,1.949,239,1.123,240,1.123,241,1.123,242,1.031,243,1.123,244,1.123,245,1.031,246,1.076,247,1.717,248,1.45,249,1.173,250,1.076,251,1.173,252,1.173,253,1.173,254,0.605,255,1.173,256,1.076,257,1.577,258,1.577,259,1.577,260,1.867]],["title/interfaces/Info.html",[0,0.087,3,0.121]],["body/interfaces/Info.html",[0,0.169,2,0.559,3,0.209,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.884,36,0.305,43,0.824,61,0.027,62,0.027,78,0.768,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.301,142,1.677,143,2.179,144,0.976,145,1.571,146,1.404,147,0.891,148,2.035,149,1.858,150,1.376,151,1.934,152,1.784,153,1.858,154,1.342,155,1.342,156,1.61,157,1.713,158,1.342,160,1.61,161,1.746,162,1.677,163,1.746,164,1.746,165,1.342,166,1.342,167,1.342,168,1.61,169,1.849,170,1.342,171,1.936,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.723,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,1.585]],["title/interfaces/InfoUser.html",[0,0.087,148,1.07]],["body/interfaces/InfoUser.html",[0,0.168,2,0.545,3,0.224,4,0.134,5,0.12,10,0.107,11,0.305,13,2.005,14,1.474,17,1.166,18,0.364,19,0.016,20,0.891,36,0.304,43,0.818,61,0.026,62,0.026,78,0.765,89,0.532,113,0.691,116,0.594,121,0.736,136,1.916,137,2.304,142,1.656,143,2.203,144,1.075,145,1.661,146,1.399,147,1.146,148,2.043,149,1.317,150,1.326,151,1.59,152,1.264,153,1.839,154,1.317,155,1.317,156,1.59,157,1.695,158,1.317,160,1.59,161,1.725,162,1.656,163,1.725,164,1.725,165,1.317,166,1.317,167,1.317,168,1.59,169,1.834,170,1.317,171,1.916,196,1.012,197,0.645,198,0.971,199,2.66,200,1.102,201,1.012,202,0.7,203,1.102,204,1.372,205,1.056,206,1.501,207,1.372,208,1.102,209,1.102,210,1.102,211,1.102,212,1.012,213,1.102,214,1.102,215,1.102,216,1.624,217,1.102,218,1.102,219,1.102,220,1.102,221,1.102,222,1.102,223,1.056,224,1.102,225,1.056,226,1.102,227,1.102,228,1.102,229,1.556,230,1.102,231,1.928,232,1.102,233,1.624,234,1.102,235,2.127,236,1.102,237,1.556,238,1.928,239,1.102,240,1.102,241,1.102,242,1.012,243,1.102,244,1.102,245,1.012,246,1.056,247,1.698,248,1.43,249,1.151,250,1.056,251,1.151,252,1.151,253,1.151,254,0.594,255,1.151,256,1.056,257,2.038,258,1.556,259,2.038,260,1.556]],["title/components/InfoUserComponent.html",[24,0.678,107,1.314]],["body/components/InfoUserComponent.html",[3,0.234,4,0.185,5,0.166,6,1.112,10,0.147,11,0.383,18,0.244,19,0.016,22,1.063,24,1.088,25,1.589,26,1.34,27,0.854,28,2.4,29,1.521,36,0.166,38,2.389,39,2.576,40,1.606,42,1.653,43,0.662,44,1.952,45,2.037,47,2.037,51,0.891,52,1.34,61,0.033,62,0.033,63,1.397,64,2.037,65,1.397,66,1.521,67,1.458,68,1.589,70,1.286,71,1.458,77,1.789,78,0.634,79,1.521,80,1.761,83,1.589,84,2.037,85,1.871,86,1.007,87,2.563,88,1.589,89,0.706,90,1.589,91,2.253,92,1.589,93,2.128,94,1.589,95,2.253,96,1.185,97,1.589,98,1.397,99,1.589,100,1.34,101,1.589,102,1.458,103,1.458,104,1.589,105,1.34,106,1.589,107,2.253,108,1.589,109,2.253,110,1.397,111,1.589,112,1.397,113,0.494,114,1.589,115,1.397,116,0.819,117,1.589,118,1.397,119,1.397,120,1.234,121,0.69,122,1.234,123,1.397,124,1.589,125,1.397,126,1.589,127,2.253,128,1.589,129,1.397,130,1.521,131,1.397,132,1.521,133,1.589,180,1.397,193,2.562,194,4.098,245,1.871,296,2.752,300,2.441,310,1.589,311,2.012,392,3.824,415,1.823,455,2.533,478,1.458,480,1.458,652,5.388,653,3.57,654,6.228,655,5.524,656,4.839,657,4.839,658,6.652,659,4.125,660,3.635,661,4.125,662,5.524,663,4.125,664,4.839,665,5.524,666,4.125,667,2.242,668,2.932,669,2.242,670,3.57,671,2.378,672,4.125,673,5.757,674,5.524,675,4.781]],["title/components/InputComponent.html",[24,0.678,109,1.314]],["body/components/InputComponent.html",[3,0.152,4,0.155,5,0.139,6,1.206,7,1.94,10,0.123,16,2.723,18,0.411,19,0.016,20,0.644,22,1.067,23,1.523,24,1.136,26,2.505,27,0.714,28,2.183,29,1.271,36,0.139,37,1.681,38,2.348,39,2.507,40,1.275,42,1.46,43,0.585,44,1.724,45,1.8,47,1.8,49,2.157,50,2.157,51,0.744,52,1.12,61,0.029,62,0.029,63,1.167,64,1.8,65,1.167,66,1.271,67,1.218,68,1.328,70,1.074,71,1.218,77,1.94,78,0.688,79,1.271,80,1.722,83,1.328,84,1.8,85,1.653,86,1.191,87,2.374,88,1.328,89,0.662,90,1.328,91,1.167,92,2.183,93,1.88,94,1.328,95,1.167,96,1.77,97,1.328,98,1.167,99,1.328,100,1.12,101,1.328,102,1.218,103,1.218,104,1.328,105,1.12,106,1.328,107,1.167,108,1.328,109,2.087,110,1.167,111,1.328,112,1.167,113,0.413,114,1.328,115,1.167,116,0.685,117,1.328,118,1.167,119,1.167,120,1.031,121,0.576,122,1.031,123,2.087,124,1.328,125,2.087,126,1.328,127,1.167,128,1.328,129,1.167,130,1.271,131,1.167,132,1.271,133,1.328,146,1.124,179,2.264,180,1.167,202,1.144,204,1.074,206,1.191,265,2.058,267,2.813,268,2.764,293,2.264,307,2.983,318,2.983,334,2.983,335,4.904,336,2.677,346,3.792,347,3.792,350,2.983,370,2.983,373,2.983,391,4.402,392,3.479,393,4.904,396,4.904,398,4.936,399,4.402,400,4.402,403,3.469,407,4.224,409,3.792,415,1.523,417,2.983,418,2.983,419,2.983,478,1.218,480,1.218,542,2.677,676,2.983,677,3.792,678,4.224,679,5.666,680,4.88,681,4.88,682,4.88,683,5.666,684,5.666,685,5.666,686,4.88,687,3.446,688,3.446,689,3.446,690,3.446,691,3.446,692,3.446,693,3.446,694,3.446,695,2.677,696,3.446,697,2.677,698,3.446,699,3.446,700,3.446,701,3.446,702,3.446,703,4.88,704,3.446,705,3.446]],["title/components/IntroComponent.html",[24,0.678,110,1.314]],["body/components/IntroComponent.html",[3,0.193,4,0.219,5,0.197,6,1.13,19,0.016,22,0.9,24,1.181,26,1.589,27,1.013,28,2.605,29,1.804,36,0.197,38,2.423,39,2.641,40,1.521,42,1.846,43,0.739,44,2.18,45,2.276,47,2.276,51,1.056,52,1.589,61,0.037,62,0.037,63,1.656,64,2.276,65,1.656,66,1.804,67,1.728,68,1.884,70,1.524,71,1.728,79,1.804,83,1.884,84,2.276,85,2.09,86,1.194,87,2.735,88,1.884,89,0.746,90,1.884,91,1.656,92,1.884,93,2.377,94,1.884,95,1.656,96,1.404,97,1.884,98,1.656,99,1.884,100,1.589,101,1.884,102,1.728,103,1.728,104,1.884,105,1.589,106,1.884,107,1.656,108,1.884,109,1.656,110,2.405,111,1.884,112,1.656,113,0.586,114,1.884,115,1.656,116,0.971,117,1.884,118,1.656,119,1.656,120,1.463,121,0.818,122,1.463,123,1.656,124,1.884,125,1.656,126,1.884,127,1.656,128,1.884,129,1.656,130,1.804,131,1.656,132,1.804,133,1.884,142,2.039,514,4.794,706,4.232,707,6.76,708,6.17]],["title/interfaces/Label.html",[0,0.087,146,0.708]],["body/interfaces/Label.html",[0,0.155,2,0.814,3,0.139,4,0.2,5,0.18,10,0.159,11,0.403,14,1.536,18,0.383,19,0.016,20,0.926,36,0.276,61,0.035,62,0.035,78,0.743,89,0.454,113,0.534,121,0.746,134,3.572,135,2.935,136,1.39,137,2.289,138,3.17,140,2.176,141,2.739,142,1.281,143,2.188,144,1.294,145,1.742,146,1.429,147,0.886,148,1.23,149,1.334,150,1.429,151,1.23,152,1.281,153,1.74,154,1.334,155,1.334,156,1.23,157,1.23,158,1.334,159,2.935,160,1.604,161,1.334,162,1.281,163,1.334,164,1.74,165,1.334,166,1.334,167,1.334,168,1.23,169,1.23,170,1.334,171,2.138,172,2.739,173,3.17,174,3.17]],["title/interfaces/Modals.html",[0,0.087,168,1.07]],["body/interfaces/Modals.html",[0,0.169,2,0.563,3,0.203,4,0.138,5,0.124,10,0.11,11,0.312,14,1.345,17,1.193,18,0.267,19,0.016,20,0.884,36,0.306,43,0.825,61,0.027,62,0.027,78,0.769,89,0.542,113,0.702,116,0.613,121,0.753,136,1.941,137,2.302,142,1.682,143,2.181,144,0.979,145,1.574,146,1.405,147,0.895,148,2.037,149,1.348,150,1.335,151,1.615,152,1.294,153,1.863,154,1.348,155,1.348,156,1.615,157,1.718,158,1.348,160,1.615,161,1.752,162,1.682,163,1.752,164,1.752,165,1.348,166,1.348,167,1.348,168,1.718,169,2.054,170,1.863,171,1.941,196,1.045,197,0.666,198,1.002,199,2.668,200,1.138,201,1.045,202,0.723,203,1.138,204,1.404,205,1.09,206,1.521,207,1.404,208,1.138,209,1.138,210,1.138,211,1.138,212,1.045,213,1.138,214,1.138,215,1.138,216,1.662,217,1.138,218,1.138,219,1.138,220,1.138,221,1.138,222,1.138,223,1.09,224,1.138,225,1.09,226,1.138,227,1.138,228,1.138,229,1.592,230,1.138,231,1.964,232,1.138,233,1.662,234,1.138,235,2.16,236,1.138,237,1.592,238,1.964,239,1.138,240,1.138,241,1.138,242,1.045,243,1.138,244,1.138,245,1.045,246,1.09,247,1.73,248,1.464,249,1.188,250,1.09,251,1.188,252,1.188,253,1.188,254,0.613,255,1.188,256,1.09,257,1.592,258,1.592,259,1.592,260,1.592]],["title/directives/PapControlDirective.html",[86,0.947,125,1.314]],["body/directives/PapControlDirective.html",[3,0.164,4,0.236,5,0.211,6,1.217,7,2.091,10,0.187,19,0.016,22,0.94,27,1.088,36,0.211,38,1.929,42,1.929,43,0.872,51,1.134,61,0.038,62,0.038,70,1.637,80,1.848,86,1.575,122,1.571,125,2.466,300,2.85,310,2.69,311,3.711,415,2.32,677,5.011,678,5.582,709,6.302,710,4.544,711,4.584,712,6.981,713,6.981,714,6.449,715,6.449,716,6.449,717,7.281,718,7.281,719,7.281,720,5.25,721,5.25,722,5.25]],["title/directives/PatchFormGroupValueDirective.html",[86,0.947,127,1.314]],["body/directives/PatchFormGroupValueDirective.html",[3,0.165,4,0.237,5,0.212,6,1.219,7,2.095,10,0.188,13,1.644,18,0.312,19,0.016,22,0.943,26,2.273,27,1.093,36,0.212,37,2.573,38,1.935,40,1.641,42,1.935,43,0.775,51,1.139,61,0.039,62,0.039,70,1.644,77,1.515,78,0.537,80,1.852,86,1.579,89,0.537,122,1.578,127,2.191,179,3,206,1.288,254,1.048,302,4.598,310,2.032,311,2.573,331,2.573,340,2.712,415,2.331,464,4.783,628,5.184,723,6.312,724,4.566,725,7.616,726,5.275,727,6.468,728,5.275,729,6.468,730,5.275,731,5.275,732,5.275]],["title/interfaces/Recommendation.html",[0,0.087,258,1.371]],["body/interfaces/Recommendation.html",[0,0.169,2,0.563,3,0.203,4,0.138,5,0.124,10,0.11,11,0.312,14,1.345,17,1.193,18,0.267,19,0.016,20,0.889,36,0.306,43,0.825,61,0.027,62,0.027,78,0.769,89,0.542,113,0.702,116,0.613,121,0.753,136,1.941,137,2.302,142,1.682,143,2.211,144,1.087,145,1.574,146,1.419,147,0.895,148,2.037,149,1.348,150,1.335,151,1.615,152,1.294,153,1.863,154,1.348,155,1.348,156,1.615,157,1.718,158,1.348,160,1.615,161,1.752,162,1.682,163,1.752,164,1.752,165,1.348,166,1.348,167,1.348,168,1.615,169,1.852,170,1.348,171,1.941,196,1.045,197,0.666,198,1.002,199,2.668,200,1.138,201,1.045,202,0.723,203,1.138,204,1.404,205,1.09,206,1.521,207,1.404,208,1.138,209,1.138,210,1.138,211,1.138,212,1.045,213,1.138,214,1.138,215,1.138,216,1.662,217,1.138,218,1.138,219,1.138,220,1.138,221,1.138,222,1.138,223,1.09,224,1.138,225,1.09,226,1.138,227,1.138,228,1.138,229,1.592,230,1.138,231,1.964,232,1.138,233,1.662,234,1.138,235,2.16,236,1.138,237,1.592,238,1.964,239,1.138,240,1.138,241,1.138,242,1.045,243,1.138,244,1.138,245,1.045,246,1.09,247,1.73,248,1.464,249,1.188,250,1.09,251,1.188,252,1.188,253,1.188,254,0.613,255,1.188,256,1.09,257,1.592,258,1.881,259,1.592,260,1.592]],["title/directives/RenderYouDirective.html",[86,0.947,129,1.314]],["body/directives/RenderYouDirective.html",[3,0.116,4,0.166,5,0.149,6,1.274,10,0.132,11,0.355,13,1.152,18,0.376,19,0.016,20,0.583,22,0.858,24,0.646,25,1.424,26,1.912,27,0.766,36,0.149,38,1.534,42,1.534,43,0.614,51,0.798,54,2.914,61,0.031,62,0.031,70,1.152,71,1.306,72,3.392,77,1.825,78,0.647,80,1.986,85,2.446,86,1.252,89,0.377,105,1.665,122,1.106,129,1.737,130,1.891,147,0.734,179,2.378,180,1.737,193,1.715,197,1.559,296,3.407,300,2.266,310,1.975,311,2.501,319,3.983,321,4.938,331,1.803,340,2.636,438,3.373,444,2.27,478,1.811,480,1.811,515,4.977,526,3.983,535,3.644,536,3.983,547,2.433,733,6.547,734,3.2,735,6.355,736,6.907,737,4.938,738,6.355,739,5.126,740,6.355,741,5.885,742,4.437,743,5.126,744,5.126,745,3.697,746,3.697,747,3.2,748,4.938,749,5.126,750,5.126,751,5.126,752,5.885,753,5.126,754,5.126,755,5.126,756,3.697,757,3.697,758,3.697,759,4.437,760,3.697,761,5.126,762,3.697,763,3.2,764,3.697,765,3.644,766,3.697,767,3.697,768,3.2,769,5.126,770,3.2,771,3.983,772,3.697,773,3.2,774,3.697,775,3.697,776,5.885,777,3.697,778,3.697,779,3.697,780,3.697,781,3.697,782,3.697,783,5.885,784,3.697,785,5.885,786,3.697,787,3.697,788,5.126,789,3.697,790,5.126,791,3.697,792,3.697,793,3.697,794,3.697,795,5.126,796,3.697,797,3.697,798,5.126,799,3.697,800,3.697,801,3.2,802,3.697,803,3.2,804,3.983,805,5.126,806,3.697,807,3.2,808,3.697,809,3.697,810,3.697]],["title/interfaces/Reserve.html",[0,0.087,113,0.465]],["body/interfaces/Reserve.html",[0,0.169,2,0.556,3,0.202,4,0.137,5,0.123,10,0.109,11,0.309,14,1.338,17,1.182,18,0.345,19,0.016,20,0.888,36,0.305,43,0.822,61,0.027,62,0.027,78,0.768,89,0.538,113,0.742,116,0.605,121,0.746,136,1.931,137,2.307,142,1.671,143,2.177,144,0.973,145,1.568,146,1.403,147,0.887,148,2.032,149,1.335,150,1.356,151,1.605,152,1.282,153,1.854,154,1.335,155,1.335,156,1.605,157,1.709,158,1.335,160,1.605,161,1.741,162,1.671,163,1.741,164,2.002,165,1.854,166,1.854,167,1.335,168,1.605,169,1.989,170,1.335,171,1.931,196,1.031,197,0.657,198,0.989,199,2.665,200,1.123,201,1.031,202,0.714,203,1.123,204,1.391,205,1.076,206,1.513,207,1.391,208,1.123,209,1.123,210,1.123,211,1.123,212,1.031,213,1.123,214,1.123,215,1.123,216,1.646,217,1.123,218,1.123,219,1.123,220,1.123,221,1.123,222,1.123,223,1.076,224,1.123,225,1.076,226,1.123,227,1.123,228,1.123,229,1.577,230,1.123,231,1.949,232,1.123,233,1.646,234,1.123,235,2.147,236,1.123,237,1.577,238,1.949,239,1.123,240,1.123,241,1.123,242,1.031,243,1.123,244,1.123,245,1.031,246,1.076,247,1.717,248,1.45,249,1.173,250,1.076,251,1.173,252,1.173,253,1.173,254,0.605,255,1.173,256,1.076,257,1.577,258,1.577,259,1.577,260,1.577]],["title/components/ReserveBookComponent.html",[24,0.678,112,1.314]],["body/components/ReserveBookComponent.html",[3,0.088,4,0.076,5,0.068,6,0.705,10,0.061,11,0.195,16,2.478,18,0.455,19,0.016,22,0.818,24,0.633,25,1.395,26,0.551,27,0.352,28,1.395,29,0.626,36,0.068,38,2.122,39,1.893,40,1.262,42,0.844,43,0.672,44,0.997,45,1.041,47,1.041,51,0.367,52,0.551,54,1.947,61,0.017,62,0.017,63,0.575,64,1.041,65,0.575,66,0.626,67,0.6,68,0.654,70,0.529,71,0.6,77,1.345,78,0.798,79,0.626,80,1.485,83,0.654,84,1.041,85,0.956,86,0.414,87,1.626,88,0.654,89,0.654,90,0.654,91,1.429,92,0.654,93,1.087,94,0.654,95,1.429,96,0.488,97,0.654,98,0.575,99,0.654,100,1.371,101,0.654,102,0.6,103,0.6,104,0.654,105,0.551,106,0.654,107,0.575,108,0.654,109,1.429,110,0.575,111,0.654,112,1.429,113,0.672,114,0.654,115,0.575,116,0.337,117,0.654,118,0.575,119,0.575,120,0.508,121,0.284,122,0.508,123,0.575,124,0.654,125,0.575,126,0.654,127,1.429,128,0.654,129,0.575,130,0.626,131,0.575,132,0.626,133,0.654,144,0.472,145,1.185,146,1.431,147,1.004,150,1.191,152,1.875,180,0.575,204,1.315,206,0.689,207,1.315,237,0.997,245,1.712,261,2.285,264,4.009,265,2.656,266,5.1,267,3.63,268,2.465,269,4.459,270,1.857,274,0.978,275,1.042,276,3.763,277,3.869,278,1.733,279,2.591,293,0.787,296,2.233,300,1.247,310,1.087,311,1.377,317,3.278,329,2.814,392,2.224,415,0.75,455,1.042,460,3.69,461,2.574,462,2.383,478,0.6,480,0.6,595,2.776,656,2.814,660,1.857,667,0.923,668,1.207,669,0.923,695,3.278,711,2.006,811,4.523,812,1.469,813,3.622,814,3.622,815,2.822,816,3.135,817,3.135,818,4.219,819,4.219,820,1.698,821,1.698,822,1.698,823,2.193,824,1.698,825,1.698,826,2.822,827,1.857,828,2.443,829,2.822,830,2.822,831,3.329,832,2.822,833,3.622,834,2.822,835,1.857,836,2.822,837,2.443,838,1.698,839,1.698,840,4.374,841,6.218,842,2.822,843,2.822,844,3.652,845,2.822,846,2.443,847,5.054,848,2.822,849,2.822,850,5.196,851,2.822,852,2.822,853,4.219,854,5.054,855,4.219,856,2.443,857,2.822,858,4.219,859,4.219,860,4.219,861,4.219,862,4.219,863,5.608,864,2.822,865,2.822,866,2.822,867,6.003,868,2.822,869,2.822,870,2.822,871,2.443,872,2.822,873,2.822,874,5.073,875,5.608,876,6.003,877,2.822,878,2.822,879,4.219,880,2.822,881,2.822,882,4.219,883,2.443,884,2.822,885,2.443,886,2.822,887,4.219,888,2.822,889,2.822,890,4.219,891,2.822,892,2.822,893,2.822,894,5.608,895,2.822,896,5.608,897,2.822,898,6.862,899,5.054,900,2.822,901,2.822,902,1.698,903,1.469,904,1.469,905,1.207,906,0.923,907,1.319,908,1.319,909,1.698,910,1.698,911,1.698,912,1.698,913,1.698,914,1.698]],["title/injectables/ReserveEffects.html",[580,1.495,915,3.014]],["body/injectables/ReserveEffects.html",[3,0.166,4,0.238,5,0.213,10,0.189,11,0.449,19,0.016,22,1.065,25,2.042,27,1.098,36,0.213,51,1.144,57,3.388,61,0.039,62,0.039,77,1.863,78,0.661,80,1.718,113,0.777,254,1.289,296,3.098,580,2.499,581,2.88,669,2.88,915,5.04,916,4.587,917,6.322,918,5.447,919,5.615,920,5.3,921,6.067,922,5.615,923,6.487,924,4.983,925,6.487,926,5.615,927,5.615,928,6.487,929,5.3,930,4.587,931,4.118,932,4.587,933,4.118,934,4.118]],["title/interfaces/ReserveEntity.html",[0,0.087,935,2.553]],["body/interfaces/ReserveEntity.html",[0,0.155,2,1.068,3,0.183,4,0.263,5,0.236,10,0.209,11,0.477,18,0.408,19,0.016,20,0.887,36,0.236,61,0.041,62,0.041,89,0.769,113,0.702,137,2.212,150,1.335,265,2.469,595,3.853,935,4.532,936,5.069,937,4.55]],["title/interfaces/ReservePartialState.html",[0,0.087,938,2.757]],["body/interfaces/ReservePartialState.html",[0,0.136,2,0.864,3,0.148,4,0.213,5,0.191,10,0.169,11,0.461,12,3.608,17,1.255,18,0.358,19,0.016,20,0.688,22,1.023,36,0.298,43,0.568,54,1.825,57,3.363,61,0.036,62,0.036,113,0.841,144,0.792,147,1.201,150,0.864,180,2.048,185,2.575,197,1.515,206,1.476,254,0.941,293,3.574,340,2.436,478,2.137,480,2.137,506,3.117,671,2.731,906,2.575,933,3.681,934,3.681,935,3.117,938,4.299,939,3.117,940,5.154,941,4.879,942,3.979,943,3.979,944,4.299,945,3.979,946,4.101,947,3.368,948,3.117,949,3.368,950,3.368,951,4.771,952,3.368,953,3.368,954,3.368,955,4.299,956,3.681,957,3.117,958,2.909,959,2.909,960,3.681,961,3.681,962,3.681,963,3.681,964,3.681,965,3.979,966,3.117,967,3.117,968,3.368,969,3.368]],["title/interfaces/ReserveState.html",[0,0.087,941,2.553]],["body/interfaces/ReserveState.html",[0,0.133,2,0.831,3,0.142,4,0.204,5,0.183,10,0.163,11,0.453,12,3.556,13,2.156,17,1.207,18,0.41,19,0.016,20,0.834,22,1.009,36,0.295,43,0.546,54,1.756,57,3.511,61,0.035,62,0.035,113,0.829,144,1.093,147,1.374,150,1.193,180,1.998,185,2.477,197,1.493,206,1.44,254,0.905,293,3.548,340,2.343,478,2.084,480,2.084,506,2.999,671,2.627,906,2.477,933,3.541,934,3.541,935,2.999,938,3.239,939,2.999,940,4.193,941,4.714,942,3.881,943,3.881,944,4.649,945,3.881,946,3.944,947,4.193,948,4.551,949,3.239,950,3.239,951,4.981,952,3.239,953,3.239,954,3.239,955,4.193,956,3.541,957,2.999,958,2.798,959,2.798,960,3.541,961,3.541,962,3.541,963,3.541,964,3.541,965,3.881,966,2.999,967,2.999,968,3.239,969,3.239]],["title/interfaces/RoleOfMember.html",[0,0.087,151,1.07]],["body/interfaces/RoleOfMember.html",[0,0.169,2,0.559,3,0.203,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.889,36,0.305,43,0.824,61,0.027,62,0.027,78,0.78,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.308,142,1.677,143,2.21,144,1.085,145,1.571,146,1.404,147,0.891,148,2.035,149,1.342,150,1.357,151,1.713,152,1.288,153,1.858,154,1.342,155,1.342,156,1.61,157,1.713,158,1.342,160,1.61,161,1.746,162,1.677,163,1.746,164,1.746,165,1.342,166,1.342,167,1.342,168,1.61,169,1.849,170,1.342,171,1.936,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.723,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,1.585]],["title/interfaces/Scope.html",[0,0.087,157,1.07]],["body/interfaces/Scope.html",[0,0.169,2,0.559,3,0.203,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.893,36,0.305,43,0.824,61,0.027,62,0.027,78,0.768,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.308,142,1.677,143,2.21,144,1.085,145,1.571,146,1.418,147,0.891,148,2.035,149,1.342,150,1.333,151,1.61,152,1.288,153,1.858,154,1.342,155,1.342,156,1.61,157,1.79,158,1.342,160,1.61,161,1.746,162,1.677,163,1.746,164,1.746,165,1.342,166,1.342,167,1.342,168,1.61,169,1.849,170,1.342,171,1.936,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.723,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,1.585]],["title/directives/ScrollHintDirective.html",[86,0.947,131,1.314]],["body/directives/ScrollHintDirective.html",[3,0.108,4,0.156,5,0.14,6,1.208,10,0.175,11,0.34,13,1.529,18,0.29,19,0.016,22,0.715,25,1.337,27,0.719,36,0.14,38,1.467,42,1.467,43,0.588,51,0.749,54,2.608,61,0.029,62,0.029,66,1.28,67,2.184,70,1.082,77,1.776,78,0.664,80,1.882,85,2.293,86,1.509,89,0.5,103,2.554,122,1.038,131,1.661,132,1.809,147,1.228,180,1.176,193,2.275,197,1.408,202,1.449,204,1.082,212,1.176,256,1.226,265,2.399,296,3.377,300,2.168,310,1.89,311,2.775,317,3.811,319,3.811,321,5.522,331,2.393,338,3.004,346,5.616,365,2.467,374,3.487,444,2.131,478,1.226,479,2.284,480,1.226,522,3.004,526,2.697,535,3.487,536,2.697,537,3.487,540,3.004,542,4.42,543,3.004,547,3.228,669,1.886,711,3.487,737,5.26,742,4.245,747,3.004,748,5.997,759,4.245,763,3.004,768,3.004,770,3.004,771,4.42,827,2.284,831,2.467,835,2.284,970,6.256,971,3.004,972,7.481,973,4.905,974,4.905,975,5.688,976,4.924,977,5.688,978,5.688,979,5.351,980,4.905,981,4.924,982,4.905,983,4.905,984,5.688,985,3.471,986,4.905,987,4.905,988,5.067,989,7.107,990,6.182,991,3.471,992,4.905,993,3.471,994,3.471,995,4.905,996,3.471,997,3.004,998,3.004,999,6.77,1000,3.471,1001,3.471,1002,5.688,1003,3.471,1004,3.471,1005,3.471,1006,3.471,1007,4.905,1008,4.905,1009,3.471,1010,4.905,1011,3.471,1012,6.182,1013,4.905,1014,3.471,1015,3.471,1016,3.471,1017,4.905,1018,4.905,1019,3.471,1020,6.182,1021,3.004,1022,3.471,1023,5.351,1024,3.471,1025,3.471,1026,3.471,1027,3.471,1028,3.471,1029,3.471,1030,3.471,1031,3.471,1032,3.471,1033,3.471,1034,3.004,1035,3.471,1036,3.471,1037,3.471]],["title/interfaces/SetBookType.html",[0,0.087,169,1.07]],["body/interfaces/SetBookType.html",[0,0.169,2,0.559,3,0.203,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.893,36,0.305,43,0.824,61,0.027,62,0.027,78,0.78,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.308,142,1.677,143,2.179,144,0.976,145,1.571,146,1.404,147,0.891,148,2.035,149,1.342,150,1.357,151,1.61,152,1.288,153,1.858,154,1.342,155,1.342,156,1.61,157,1.713,158,1.342,160,1.61,161,1.746,162,1.677,163,1.746,164,1.746,165,1.342,166,1.342,167,1.342,168,1.61,169,1.896,170,1.342,171,2.143,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.723,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,1.585]],["title/components/SpendMoneyComponent.html",[24,0.678,115,1.314]],["body/components/SpendMoneyComponent.html",[3,0.191,4,0.216,5,0.194,6,1.123,19,0.016,22,0.892,24,1.173,26,1.566,27,0.998,28,2.587,29,1.778,36,0.194,38,2.42,39,2.631,40,1.511,42,1.829,43,0.732,44,2.16,45,2.255,47,2.255,51,1.041,52,1.566,61,0.036,62,0.036,63,1.633,64,2.255,65,1.633,66,1.778,67,1.703,68,1.857,70,1.502,71,1.703,79,1.778,83,1.857,84,2.255,85,2.071,86,1.177,87,2.721,88,1.857,89,0.742,90,1.857,91,1.633,92,1.857,93,2.356,94,1.857,95,1.633,96,1.384,97,1.857,98,1.633,99,1.857,100,1.566,101,1.857,102,1.703,103,1.703,104,1.857,105,1.566,106,1.857,107,1.633,108,1.857,109,1.633,110,1.633,111,1.857,112,1.633,113,0.577,114,1.857,115,2.392,116,1.547,117,1.857,118,1.633,119,1.633,120,1.442,121,0.806,122,1.442,123,1.633,124,1.857,125,1.633,126,1.857,127,1.633,128,1.857,129,1.633,130,1.778,131,1.633,132,1.778,133,1.857,246,2.495,514,4.75,1038,3.745,1039,4.172,1040,6.715,1041,6.114]],["title/interfaces/Step.html",[0,0.087,247,1.26]],["body/interfaces/Step.html",[0,0.169,2,0.559,3,0.203,4,0.137,5,0.123,10,0.109,11,0.311,14,1.341,17,1.188,18,0.314,19,0.016,20,0.897,36,0.305,43,0.824,61,0.027,62,0.027,78,0.78,89,0.54,113,0.699,116,0.609,121,0.75,136,1.936,137,2.308,142,1.677,143,2.179,144,0.976,145,1.571,146,1.418,147,0.891,148,2.035,149,1.342,150,1.333,151,1.61,152,1.288,153,1.858,154,1.342,155,1.342,156,1.61,157,1.713,158,1.342,160,1.61,161,1.746,162,1.677,163,1.746,164,1.746,165,1.342,166,1.342,167,1.342,168,1.61,169,1.849,170,1.342,171,1.936,196,1.038,197,0.662,198,0.996,199,2.667,200,1.13,201,1.038,202,0.718,203,1.13,204,1.398,205,1.083,206,1.517,207,1.398,208,1.13,209,1.13,210,1.13,211,1.13,212,1.038,213,1.13,214,1.13,215,1.13,216,1.654,217,1.13,218,1.13,219,1.13,220,1.13,221,1.13,222,1.13,223,1.083,224,1.13,225,1.083,226,1.13,227,1.13,228,1.13,229,1.585,230,1.13,231,1.956,232,1.13,233,1.654,234,1.13,235,2.153,236,1.13,237,1.585,238,1.956,239,1.13,240,1.13,241,1.13,242,1.038,243,1.13,244,1.13,245,1.038,246,1.083,247,1.896,248,1.457,249,1.181,250,1.083,251,1.181,252,1.181,253,1.181,254,0.609,255,1.181,256,1.083,257,1.585,258,1.585,259,1.585,260,1.585]],["title/components/StepperComponent.html",[24,0.678,118,1.314]],["body/components/StepperComponent.html",[3,0.18,4,0.197,5,0.176,6,1.183,10,0.157,11,0.398,19,0.016,22,1.107,23,1.937,24,1.121,25,1.689,26,1.424,27,0.908,28,2.473,29,1.617,32,4.224,33,2.885,36,0.176,38,2.392,39,2.653,40,1.444,42,1.721,43,0.689,44,2.032,45,2.121,47,2.121,49,2.542,50,2.542,51,0.947,52,1.424,54,2.473,61,0.034,62,0.034,63,1.485,64,2.121,65,1.485,66,1.617,67,1.549,68,1.689,70,1.367,71,1.549,77,1.259,78,0.447,79,1.617,80,1.161,82,3.116,83,1.689,84,2.121,85,1.948,86,1.07,87,2.626,88,1.689,89,0.721,90,1.689,91,1.485,92,1.689,93,2.216,94,1.689,95,1.485,96,1.259,97,1.689,98,1.485,99,1.689,100,1.424,101,1.689,102,1.549,103,1.549,104,1.689,105,1.424,106,1.689,107,1.485,108,1.689,109,1.485,110,1.485,111,1.689,112,1.485,113,0.525,114,1.689,115,1.485,116,0.871,117,1.689,118,2.308,119,2.308,120,1.721,121,0.733,122,1.312,123,1.485,124,1.689,125,1.485,126,1.689,127,2.308,128,1.689,129,1.485,130,1.617,131,2.308,132,1.617,133,1.689,194,4.224,391,4.987,392,3.941,415,1.937,416,3.116,455,2.692,656,4.987,660,3.785,667,2.383,668,3.116,1042,3.795,1043,6.419,1044,6.419,1045,5.752,1046,4.384,1047,3.116,1048,4.384]],["title/injectables/StepperEffects.html",[580,1.495,1049,3.014]],["body/injectables/StepperEffects.html",[3,0.166,4,0.238,5,0.213,10,0.189,11,0.449,19,0.016,22,1.065,25,2.042,27,1.098,36,0.213,51,1.144,57,3.388,61,0.039,62,0.039,77,1.863,78,0.661,80,1.718,120,1.941,254,1.289,296,3.098,580,2.499,581,2.88,669,2.88,917,6.322,918,5.447,919,5.615,921,6.067,922,5.615,924,4.983,926,5.615,927,5.615,930,4.587,931,4.118,932,4.587,1049,5.04,1050,4.587,1051,5.3,1052,6.487,1053,6.487,1054,6.487,1055,5.3,1056,4.118,1057,4.118]],["title/interfaces/StepperEntity.html",[0,0.087,140,1.892]],["body/interfaces/StepperEntity.html",[0,0.159,2,0.786,3,0.135,4,0.193,5,0.173,10,0.154,11,0.394,14,1.519,18,0.462,19,0.016,20,0.92,36,0.272,61,0.034,62,0.034,78,0.648,89,0.439,113,0.516,120,1.29,121,1.132,134,3.493,135,2.837,136,1.344,137,2.259,138,3.064,139,5.317,140,2.775,141,3.909,142,1.944,143,2.174,144,1.287,145,1.727,146,1.414,147,0.856,148,1.867,149,1.29,150,1.405,151,1.189,152,1.238,153,2.105,154,1.29,155,1.29,156,1.189,157,1.189,158,1.29,159,2.837,160,1.569,161,2.025,162,1.238,163,1.29,164,1.702,165,1.29,166,1.29,167,1.29,168,1.189,169,1.189,170,1.29,171,1.344,172,2.647,173,3.064,174,3.064,265,1.818,595,2.837]],["title/interfaces/StepperPartialState.html",[0,0.087,1058,2.757]],["body/interfaces/StepperPartialState.html",[0,0.135,2,0.855,3,0.146,4,0.21,5,0.189,10,0.167,11,0.459,12,3.593,17,1.24,18,0.356,19,0.016,20,0.683,22,1.078,36,0.298,43,0.561,54,1.805,57,3.352,61,0.036,62,0.036,120,2.091,140,2.285,144,0.783,147,1.193,150,0.855,180,2.034,197,1.509,198,1.951,206,1.466,254,0.931,293,3.531,340,2.409,478,2.122,480,2.122,506,3.083,671,2.7,906,2.546,942,3.951,943,3.951,944,4.268,945,3.951,947,3.33,948,3.083,949,3.33,950,3.33,951,4.754,952,3.33,953,3.33,957,3.083,958,2.877,959,2.877,965,3.951,966,3.951,967,3.083,969,3.33,1056,3.64,1057,4.665,1058,4.268,1059,3.083,1060,5.136,1061,4.539,1062,3.951,1063,4.055,1064,4.055,1065,3.33,1066,4.268,1067,3.64,1068,3.64,1069,3.64,1070,3.64,1071,3.64,1072,3.64]],["title/injectables/StepperService.html",[580,1.495,667,2.108]],["body/injectables/StepperService.html",[3,0.152,4,0.119,5,0.107,10,0.095,11,0.279,14,1.422,18,0.39,19,0.016,22,0.933,25,1.023,27,0.55,36,0.107,40,1.482,51,1.262,54,2.371,61,0.024,62,0.024,72,1.53,77,1.767,78,0.745,80,1.787,96,1.157,113,0.483,120,1.627,137,2.224,140,1.295,141,2.474,142,1.157,143,2.157,145,1.698,146,1.202,147,1.464,148,1.499,149,1.205,151,1.499,152,1.157,153,1.627,154,1.205,155,1.205,156,1.111,157,1.111,158,1.205,159,2.651,160,1.499,161,1.205,162,1.157,163,1.205,164,1.627,165,1.205,166,1.205,167,1.205,168,1.111,169,1.111,170,1.205,180,1.842,193,2.522,194,4.664,197,0.573,202,1.499,206,1.707,254,0.8,293,1.231,296,3.09,300,1.78,302,2.864,310,1.552,311,1.295,315,4.224,329,4.542,415,2.152,464,3.338,478,1.921,480,1.921,580,1.552,581,1.442,584,4.215,604,3.487,608,4.706,612,1.746,633,3.487,664,5.573,667,2.189,669,1.442,670,2.297,671,1.53,673,3.487,816,4.215,817,4.215,823,3.13,827,2.651,828,3.487,831,3.461,835,2.651,837,3.487,903,2.297,904,4.215,905,3.865,906,2.646,924,3.461,988,3.784,1062,1.746,1073,2.297,1074,4.87,1075,4.215,1076,4.87,1077,5.437,1078,4.87,1079,4.87,1080,2.654,1081,4.029,1082,2.654,1083,5.437,1084,2.654,1085,4.029,1086,4.029,1087,4.029,1088,4.029,1089,2.654,1090,4.029,1091,2.654,1092,5.437,1093,4.029,1094,4.029,1095,5.437,1096,4.029,1097,4.029,1098,4.029,1099,2.654,1100,4.029,1101,7.42,1102,6.154,1103,4.029,1104,4.029,1105,2.654,1106,4.029,1107,2.654,1108,2.654,1109,5.437,1110,2.654,1111,2.654,1112,2.297,1113,2.654,1114,2.062,1115,2.654,1116,2.654,1117,2.654,1118,4.029,1119,2.654]],["title/interfaces/StepperState.html",[0,0.087,1061,2.382]],["body/interfaces/StepperState.html",[0,0.132,2,0.822,3,0.141,4,0.202,5,0.181,10,0.161,11,0.451,12,3.541,13,2.147,17,1.194,18,0.408,19,0.016,20,0.832,22,1.067,36,0.294,43,0.54,54,1.737,57,3.503,61,0.035,62,0.035,120,2.061,140,2.199,144,1.088,147,1.368,150,1.187,180,1.984,197,1.487,198,1.903,206,1.43,254,0.896,293,3.503,340,2.318,478,2.07,480,2.07,506,2.966,671,2.598,906,2.45,942,3.854,943,3.854,944,4.625,945,3.854,947,4.163,948,4.532,949,3.205,950,3.205,951,4.969,952,3.205,953,3.205,957,2.966,958,2.768,959,2.768,965,3.854,966,3.854,967,2.966,969,3.205,1056,3.503,1057,4.551,1058,3.205,1059,2.966,1060,4.163,1061,4.384,1062,3.854,1063,3.902,1064,3.902,1065,3.205,1066,4.163,1067,3.503,1068,3.503,1069,3.503,1070,3.503,1071,3.503,1072,3.503]],["title/components/StepperStepsComponent.html",[24,0.678,119,1.314]],["body/components/StepperStepsComponent.html",[3,0.142,4,0.139,5,0.125,6,0.982,10,0.162,11,0.314,18,0.348,19,0.016,22,1.057,23,1.373,24,0.934,25,1.197,26,2.029,27,0.644,28,2.06,29,1.146,32,3.518,33,2.044,34,3.387,36,0.125,38,2.322,39,2.438,40,1.203,42,1.355,43,0.543,44,1.601,45,1.671,47,1.671,49,2.002,50,2.002,51,0.671,52,1.909,54,2.894,56,3.22,61,0.027,62,0.027,63,1.052,64,1.671,65,1.052,66,1.146,67,1.098,68,1.197,70,0.969,71,1.098,77,1.982,78,0.703,79,1.146,80,1.94,82,2.209,83,1.197,84,1.671,85,1.534,86,0.759,87,2.264,88,1.197,89,0.636,90,1.197,91,1.99,92,1.197,93,1.745,94,1.197,95,1.052,96,0.892,97,1.197,98,1.052,99,1.197,100,1.009,101,1.197,102,1.098,103,1.098,104,1.197,105,1.009,106,1.197,107,1.052,108,1.197,109,1.052,110,1.052,111,1.197,112,1.052,113,0.372,114,1.197,115,1.052,116,0.617,117,1.197,118,1.052,119,1.99,120,2.064,121,1.09,122,0.93,123,1.052,124,1.197,125,1.052,126,1.197,127,1.052,128,1.197,129,1.99,130,1.146,131,1.052,132,1.146,133,1.197,179,2.101,180,1.052,183,3.52,189,4.154,191,3.52,193,3.123,202,0.728,204,1.832,229,1.601,247,1.737,248,1.737,254,0.617,293,1.441,296,3.11,300,2.002,310,1.745,311,2.21,365,2.209,372,3.921,374,2.209,381,4.628,438,2.044,449,2.689,455,1.908,478,1.098,480,1.098,537,3.22,546,5.645,549,3.921,657,4.154,660,2.981,664,4.854,667,3.193,668,2.209,669,1.688,711,3.22,823,3.52,827,2.044,831,2.209,835,2.044,840,4.628,905,2.209,906,1.688,924,2.209,976,4.628,979,5.086,988,4.154,997,2.689,998,2.689,1021,3.921,1034,3.921,1047,5.258,1075,4.628,1112,5.407,1120,5.747,1121,2.689,1122,5.346,1123,5.346,1124,5.346,1125,5.346,1126,4.53,1127,5.346,1128,5.346,1129,5.346,1130,5.876,1131,5.346,1132,3.107,1133,3.107,1134,3.107,1135,3.107,1136,3.107,1137,3.107,1138,3.107,1139,3.921,1140,3.107,1141,3.107,1142,3.107,1143,3.107,1144,4.53,1145,3.107,1146,2.689,1147,3.107,1148,2.414,1149,3.107,1150,3.107,1151,3.107,1152,3.107,1153,3.107,1154,2.689,1155,3.107,1156,3.107,1157,3.107,1158,3.107,1159,3.107,1160,3.107,1161,3.107,1162,3.107,1163,4.53,1164,5.876,1165,4.628,1166,4.53,1167,4.53,1168,4.53,1169,4.53,1170,3.921,1171,4.53]],["title/interfaces/StepperValues.html",[0,0.087,172,2.382]],["body/interfaces/StepperValues.html",[0,0.154,2,0.806,3,0.138,4,0.198,5,0.178,10,0.158,11,0.4,14,1.624,18,0.405,19,0.016,20,0.927,36,0.275,61,0.034,62,0.034,78,0.656,89,0.45,113,0.529,121,0.739,134,3.55,135,2.908,136,1.377,137,2.287,138,3.141,140,2.156,141,2.713,142,1.269,143,2.235,144,1.308,145,1.799,146,1.419,147,0.878,148,1.219,149,1.322,150,1.411,151,1.219,152,1.269,153,1.73,154,1.322,155,1.322,156,1.219,157,1.219,158,1.322,159,2.908,160,1.594,161,1.322,162,1.269,163,1.322,164,1.73,165,1.322,166,1.322,167,1.322,168,1.219,169,1.219,170,1.322,171,1.377,172,3.55,173,3.141,174,3.141]],["title/interfaces/ValidatorConfig.html",[0,0.087,272,2.236]],["body/interfaces/ValidatorConfig.html",[0,0.163,2,0.94,3,0.161,4,0.231,5,0.207,6,0.862,7,1.48,10,0.184,11,0.442,13,2.255,14,1.113,16,2.277,18,0.459,19,0.016,20,0.889,22,0.751,31,2.97,36,0.299,37,2.514,40,1.159,61,0.038,62,0.038,78,0.649,144,1.066,145,1.208,146,0.94,150,1.263,261,3.377,262,3.164,263,3.164,264,3.164,265,2.688,266,3.391,267,2.97,268,3.377,269,3.164,270,3.391,271,3.675,272,3.99,273,3.915,274,4.169,275,4.442,276,4.169,277,4.169,278,3.164,279,3.164,280,3.391,281,3.391,282,4.195,283,3.391]],["title/injectables/ValidatorService.html",[580,1.495,610,2.757]],["body/injectables/ValidatorService.html",[3,0.106,4,0.152,5,0.136,6,1.155,7,1.985,10,0.121,13,2.015,18,0.409,19,0.016,20,0.896,22,0.819,27,0.702,31,1.954,36,0.136,37,2.353,43,0.774,51,0.732,57,3.382,61,0.029,62,0.029,72,1.954,80,1.779,89,0.658,96,2.139,139,2.41,144,1.081,147,1.373,150,1.289,180,1.148,185,3.052,193,2.838,197,1.042,202,0.795,254,1.465,274,1.954,276,4.517,277,4.6,300,2.132,310,2.588,331,3.153,415,1.498,424,4.363,427,3.748,465,6.005,478,1.198,480,1.198,580,1.859,581,1.842,610,3.429,612,2.231,620,5.295,621,3.748,626,5.295,629,2.934,675,2.934,695,2.634,841,2.934,846,2.934,850,2.934,856,5.595,871,2.934,883,2.934,1172,2.634,1173,4.824,1174,4.824,1175,4.824,1176,5.615,1177,4.824,1178,4.824,1179,3.39,1180,4.824,1181,3.39,1182,4.824,1183,3.39,1184,3.39,1185,5.615,1186,3.39,1187,4.824,1188,3.39,1189,3.39,1190,5.615,1191,4.824,1192,4.175,1193,3.39,1194,4.824,1195,3.39,1196,3.39,1197,4.86,1198,4.824,1199,3.39,1200,2.934,1201,3.39,1202,3.39,1203,4.824,1204,3.39,1205,5.615,1206,3.39,1207,5.615,1208,3.39,1209,3.39,1210,3.39,1211,3.39,1212,3.39,1213,3.39,1214,3.39]],["title/interfaces/ValueToggle.html",[0,0.087,273,2.382]],["body/interfaces/ValueToggle.html",[0,0.164,2,0.962,3,0.165,4,0.237,5,0.212,6,0.882,7,1.515,10,0.188,11,0.448,14,1.139,16,2.331,18,0.432,19,0.016,20,0.892,22,0.769,31,3.04,36,0.301,37,2.573,40,1.187,61,0.039,62,0.039,78,0.762,144,1.219,145,1.236,146,0.962,150,0.962,261,3.412,262,3.239,263,3.239,264,3.239,265,3.156,266,3.471,267,3.04,268,3.412,269,3.239,270,3.471,271,3.728,272,3.728,273,4.295,274,3.728,275,3.972,276,3.04,277,3.04,278,3.239,279,3.239,280,3.471,281,3.471,282,4.256,283,3.471]],["title/interfaces/ValuesClass.html",[0,0.087,257,1.371]],["body/interfaces/ValuesClass.html",[0,0.167,2,0.526,3,0.198,4,0.129,5,0.116,10,0.103,11,0.297,13,2.379,14,1.308,17,1.135,18,0.416,19,0.016,20,0.883,36,0.303,43,0.809,61,0.026,62,0.026,78,0.761,89,0.521,113,0.827,116,0.573,121,0.717,136,1.888,137,2.299,142,1.628,143,2.159,144,0.947,145,1.541,146,1.393,147,0.852,148,2.046,149,1.282,150,1.379,151,1.563,152,1.231,153,2.021,154,1.812,155,1.812,156,1.903,157,1.67,158,1.812,160,1.903,161,1.695,162,1.628,163,1.695,164,1.695,165,1.282,166,1.282,167,1.812,168,1.903,169,1.813,170,1.282,171,1.888,196,0.976,197,0.622,198,0.936,199,2.651,200,1.063,201,0.976,202,0.676,203,1.063,204,1.336,205,1.019,206,1.479,207,1.336,208,1.063,209,1.063,210,1.063,211,1.063,212,0.976,213,1.063,214,1.063,215,1.063,216,1.581,217,1.063,218,1.063,219,1.063,220,1.063,221,1.063,222,1.063,223,1.019,224,1.063,225,1.019,226,1.063,227,1.063,228,1.063,229,1.515,230,1.063,231,1.888,232,1.063,233,1.581,234,1.063,235,2.09,236,1.063,237,1.515,238,1.888,239,1.063,240,1.063,241,1.063,242,0.976,243,1.063,244,1.063,245,0.976,246,1.019,247,1.663,248,1.393,249,1.111,250,1.019,251,1.111,252,1.111,253,1.111,254,0.573,255,1.111,256,1.019,257,1.808,258,2.002,259,1.515,260,1.515]],["title/interfaces/ValuesValue.html",[0,0.087,259,1.371]],["body/interfaces/ValuesValue.html",[0,0.169,2,0.556,3,0.202,4,0.137,5,0.123,10,0.109,11,0.309,14,1.338,17,1.182,18,0.345,19,0.016,20,0.9,36,0.305,43,0.822,61,0.027,62,0.027,78,0.768,89,0.66,113,0.697,116,0.605,121,0.746,136,2.139,137,2.307,142,1.671,143,2.177,144,0.973,145,1.568,146,1.403,147,0.887,148,2.032,149,1.335,150,1.331,151,1.605,152,1.282,153,1.854,154,1.335,155,1.335,156,1.605,157,1.709,158,1.335,160,1.605,161,1.741,162,1.671,163,1.741,164,1.741,165,1.335,166,1.335,167,1.335,168,1.605,169,1.845,170,1.335,171,1.931,196,1.031,197,0.657,198,0.989,199,2.665,200,1.123,201,1.031,202,0.714,203,1.123,204,1.391,205,1.076,206,1.513,207,1.391,208,1.123,209,1.123,210,1.123,211,1.123,212,1.031,213,1.123,214,1.123,215,1.123,216,1.646,217,1.123,218,1.123,219,1.123,220,1.123,221,1.123,222,1.123,223,1.076,224,1.123,225,1.076,226,1.123,227,1.123,228,1.123,229,1.577,230,1.123,231,1.949,232,1.123,233,1.646,234,1.123,235,2.147,236,1.123,237,1.577,238,2.388,239,1.123,240,1.123,241,1.123,242,1.031,243,1.123,244,1.123,245,1.031,246,1.076,247,1.717,248,1.45,249,1.173,250,1.076,251,1.173,252,1.173,253,1.173,254,0.605,255,1.173,256,1.076,257,1.577,258,1.577,259,1.867,260,1.577]],["title/injectables/ZoneAxeService.html",[580,1.495,765,2.757]],["body/injectables/ZoneAxeService.html",[3,0.119,4,0.172,5,0.154,6,1.167,10,0.137,11,0.363,13,1.636,18,0.413,19,0.016,20,0.733,22,0.558,27,0.792,36,0.154,51,0.826,54,2.805,61,0.031,62,0.031,72,2.204,77,1.098,80,1.789,89,0.534,139,3.73,150,1.273,197,1.543,201,1.295,202,1.511,207,2.228,254,1.19,256,1.854,296,3.264,300,2.319,310,2.022,331,2.56,438,3.453,444,4.148,515,4.592,535,4.961,547,4.242,562,6.186,574,2.971,580,2.022,581,2.078,612,2.516,737,5.553,765,3.73,771,4.654,801,5.58,803,4.541,804,2.971,807,5.58,981,4.541,1023,3.31,1170,4.541,1215,6.041,1216,3.31,1217,6.756,1218,6.979,1219,5.99,1220,3.824,1221,5.99,1222,5.99,1223,5.247,1224,3.824,1225,3.824,1226,7.472,1227,7.545,1228,3.824,1229,3.824,1230,5.247,1231,3.824,1232,5.247,1233,3.824,1234,3.824,1235,5.247,1236,3.824,1237,6.756,1238,5.247,1239,5.99,1240,6.979,1241,5.247,1242,3.824,1243,6.447,1244,3.824,1245,7.147,1246,5.99,1247,5.99,1248,3.824,1249,3.824]],["title/coverage.html",[1250,4.587]],["body/coverage.html",[0,0.174,1,1.531,3,0.078,5,0.1,6,1.307,7,2.215,8,4.268,9,2.985,17,1.394,18,0.148,19,0.016,24,1.262,34,1.437,40,1.351,52,0.81,61,0.023,62,0.023,63,0.845,65,0.845,69,2.159,86,1.388,91,0.845,95,0.845,96,1.346,98,0.845,100,0.81,102,0.881,103,1.86,105,0.81,107,0.845,109,0.845,110,0.845,112,0.845,113,0.299,115,0.845,118,0.845,119,0.845,123,0.845,125,0.845,127,0.845,129,0.845,131,0.845,134,1.531,135,3.464,140,1.217,146,0.455,148,0.688,151,0.688,156,0.688,157,0.688,160,0.688,168,0.688,169,0.688,172,1.531,175,2.159,193,1.157,196,2.487,198,0.81,199,0.845,202,1.917,212,0.845,242,0.845,247,0.81,248,0.81,250,0.881,257,0.881,258,0.881,259,0.881,260,0.881,261,1.217,262,3.232,263,3.232,271,1.437,272,1.437,273,1.531,284,2.159,285,2.159,387,3.331,388,2.985,413,1.938,430,2.985,431,2.159,453,2.985,454,2.159,460,1.641,509,2.159,510,2.159,511,2.159,515,3.464,516,2.985,517,2.159,580,2.411,582,2.159,583,2.159,610,1.773,628,1.773,645,2.159,652,2.985,653,2.159,667,1.355,676,2.159,706,2.159,709,2.159,710,2.159,723,2.159,724,2.159,733,2.159,734,2.159,765,1.773,804,1.938,811,2.985,812,2.159,907,1.938,908,1.938,915,1.938,916,2.159,935,1.641,936,2.159,937,5.499,938,1.773,939,4.117,940,1.773,941,1.641,954,1.773,955,1.773,959,2.359,968,1.773,970,2.159,971,2.159,1038,2.985,1039,2.159,1042,2.159,1047,2.731,1049,1.938,1050,2.159,1058,1.773,1059,4.117,1060,1.773,1061,1.531,1062,1.641,1065,1.773,1066,1.773,1073,2.159,1114,1.938,1120,2.985,1121,2.159,1148,1.938,1172,1.938,1215,2.159,1216,2.159,1250,2.159,1251,2.494,1252,2.494,1253,2.494,1254,4.556,1255,8.016,1256,1.773,1257,8.053,1258,1.938,1259,2.159,1260,2.494,1261,6.627,1262,2.159,1263,2.494,1264,2.494,1265,2.159,1266,3.842,1267,3.842,1268,2.494,1269,6.989,1270,6.257,1271,2.159,1272,3.842,1273,3.842,1274,5.685,1275,2.494,1276,3.325,1277,2.159,1278,2.159,1279,3.842,1280,2.494,1281,2.494,1282,2.494,1283,2.159,1284,4.686,1285,4.92,1286,2.159,1287,2.159,1288,2.159,1289,3.325,1290,2.494,1291,2.494,1292,5.591,1293,2.159,1294,2.159,1295,2.159,1296,2.159,1297,2.159,1298,2.159,1299,5.198,1300,2.159,1301,2.159,1302,2.159,1303,2.159,1304,2.494,1305,2.159,1306,5.415,1307,2.159,1308,2.159,1309,2.159,1310,2.159,1311,2.159,1312,2.159,1313,2.159,1314,2.159,1315,2.159,1316,2.159,1317,2.159,1318,2.159,1319,2.494,1320,2.159,1321,2.159,1322,2.494,1323,2.159,1324,2.494,1325,2.494]],["title/dependencies.html",[1326,2.802,1327,3.626]],["body/dependencies.html",[14,1.193,19,0.016,27,1.145,29,2.039,39,1.953,61,0.04,62,0.04,67,1.953,82,3.929,336,4.295,415,2.443,669,3.004,671,3.186,697,4.295,905,4.73,906,3.004,931,4.295,1327,4.295,1328,7.855,1329,5.527,1330,6.654,1331,5.527,1332,5.527,1333,6.654,1334,5.76,1335,5.527,1336,7.582,1337,5.527,1338,5.527,1339,5.527,1340,5.527,1341,5.527,1342,6.654,1343,6.654,1344,5.527,1345,5.527,1346,5.527,1347,5.527,1348,5.527,1349,5.527,1350,5.527,1351,5.527]],["title/miscellaneous/enumerations.html",[1352,1.759,1353,4.039]],["body/miscellaneous/enumerations.html",[6,1.248,7,1.625,10,0.202,19,0.016,20,0.767,61,0.04,62,0.04,78,0.816,150,1.231,202,1.326,274,3.89,275,4.144,382,5.243,844,5.841,885,5.841,958,4.144,1192,5.841,1197,4.897,1200,4.897,1352,3.075,1353,4.897,1354,6.748,1355,7.211,1356,5.658,1357,5.658,1358,5.658,1359,5.658,1360,7.211,1361,5.658,1362,5.658]],["title/miscellaneous/functions.html",[1352,1.759,1363,4.039]],["body/miscellaneous/functions.html",[6,1.14,7,1.653,10,0.206,12,4.068,13,2.125,18,0.404,19,0.015,20,0.654,61,0.041,62,0.041,89,0.694,96,1.958,196,1.95,199,2.46,293,3.162,310,2.218,331,3.325,387,4.091,388,5.297,413,5.644,939,3.787,968,4.846,1059,3.787,1061,4.186,1072,4.472,1305,5.9,1352,3.128,1363,4.982,1364,4.982,1365,4.982,1366,4.982,1367,4.982,1368,5.755]],["title/index.html",[10,0.116,1369,3.237,1370,3.237]],["body/index.html",[0,0.122,6,0.905,11,0.375,19,0.016,22,0.958,24,1.148,27,1.121,36,0.218,40,1.592,44,1.912,51,1.168,61,0.039,62,0.039,65,1.833,71,1.912,79,1.996,84,1.996,100,2.134,162,2.032,261,3.205,455,3.323,461,3.847,462,4.323,464,3.323,595,3.561,628,3.847,697,4.205,874,4.205,1256,3.847,1327,4.205,1334,4.684,1371,5.411,1372,5.411,1373,7.074,1374,7.074,1375,5.411,1376,5.411,1377,5.411,1378,5.411,1379,5.411,1380,5.411,1381,5.411,1382,5.411,1383,5.411,1384,5.411,1385,5.411,1386,5.411,1387,5.411,1388,7.074,1389,7.537,1390,5.411,1391,5.411,1392,6.569,1393,5.411,1394,5.411,1395,7.074,1396,5.411,1397,5.411]],["title/modules.html",[1398,4.587]],["body/modules.html",[19,0.014,61,0.043,62,0.043,1398,5.491]],["title/overview.html",[1399,4.587]],["body/overview.html",[2,1.14,19,0.014,61,0.043,62,0.043,64,2.305,122,1.87,581,3.396,1399,5.409,1400,6.249,1401,6.249,1402,6.249,1403,6.249]],["title/properties.html",[11,0.323,1326,2.802]],["body/properties.html",[11,0.434,19,0.015,61,0.043,62,0.043,1404,6.273,1405,6.273,1406,6.273,1407,6.273]],["title/miscellaneous/typealiases.html",[1352,1.759,1408,4.667]],["body/miscellaneous/typealiases.html",[6,1.306,7,2.062,10,0.2,17,1.483,18,0.332,19,0.016,21,5.212,30,5.212,40,1.509,57,2.598,58,3.982,61,0.04,62,0.04,144,0.936,262,3.44,263,4.119,268,3.272,278,3.44,279,3.44,280,3.686,281,3.686,282,4.414,283,3.686,444,3.44,537,3.982,547,3.686,574,4.352,621,5.212,1172,4.352,1256,3.982,1258,4.352,1352,3.044,1409,5.601,1410,6.708,1411,7.18,1412,5.601,1413,5.601,1414,5.601,1415,5.601,1416,5.601,1417,5.601]],["title/miscellaneous/variables.html",[1352,1.759,1418,4.039]],["body/miscellaneous/variables.html",[1,1.002,3,0.085,6,1.137,7,1.423,8,1.16,10,0.058,11,0.189,12,0.839,14,1.07,15,1.16,16,1.556,18,0.429,19,0.016,20,0.468,22,0.398,40,0.614,43,0.728,52,0.53,57,2.298,58,1.16,59,1.268,61,0.016,62,0.016,63,0.553,65,1.394,77,2.239,78,0.806,89,0.278,91,0.925,95,0.553,96,0.784,98,0.553,100,0.53,105,0.53,107,0.553,109,0.553,110,0.553,112,0.553,113,0.594,115,0.553,116,0.324,118,0.553,119,0.553,120,1.482,121,0.588,136,1.283,137,2.119,140,0.796,142,1.584,143,1.823,144,0.273,145,1.074,146,1.264,147,0.699,148,1.45,149,0.488,151,0.45,152,0.469,153,1.231,154,0.488,155,0.488,156,0.45,157,0.753,158,0.488,160,0.45,161,1.37,162,1.011,163,1.053,164,0.817,165,0.488,166,0.488,167,0.488,168,0.45,169,0.45,170,0.488,171,1.283,180,1.868,181,2.363,185,0.887,196,0.553,197,0.589,198,1.144,199,2.456,200,1.298,201,0.553,202,0.382,203,0.602,204,1.097,205,0.576,206,1.576,207,1.097,208,0.602,209,0.602,210,0.602,211,0.602,212,0.553,213,0.602,214,0.602,215,0.602,216,1.007,217,0.602,218,0.602,219,0.602,220,0.602,221,0.602,222,0.602,223,0.576,224,0.602,225,0.576,226,0.602,227,0.602,228,0.602,229,0.965,230,0.602,231,1.298,232,0.602,233,1.007,234,0.602,235,1.518,236,0.602,237,0.965,238,1.007,239,0.602,240,0.602,241,0.602,242,0.553,243,0.602,244,0.602,245,0.553,246,0.576,247,0.53,248,0.53,254,0.324,265,1.151,268,1.717,293,3.346,340,1.404,387,1.16,397,1.941,398,1.941,399,2.121,400,2.121,403,1.941,427,1.268,430,1.268,453,1.268,461,1.16,462,1.073,464,1.002,478,1.75,479,1.073,480,1.75,497,3.047,502,2.363,515,1.073,516,1.268,652,1.268,657,1.268,660,1.073,667,0.887,677,1.268,748,1.268,773,1.412,811,1.268,827,1.073,835,1.073,874,2.121,907,2.121,908,2.735,918,2.121,937,5.605,939,1.073,940,1.941,941,3.26,942,1.796,943,1.796,945,1.796,948,1.796,951,3.26,954,1.941,955,2.502,956,1.268,957,1.796,958,1.676,959,2.527,960,1.268,961,1.268,962,1.268,963,1.268,964,1.268,965,2.708,966,3.014,967,1.796,1038,1.268,1047,1.16,1059,1.073,1060,1.941,1061,2.813,1062,2.316,1065,1.941,1066,2.502,1067,1.268,1068,1.268,1069,1.268,1070,1.268,1071,1.268,1114,2.121,1120,1.268,1139,1.412,1146,1.412,1148,2.121,1154,1.412,1165,1.412,1254,3.965,1256,1.941,1258,3.198,1259,2.363,1262,2.363,1265,2.363,1271,2.363,1276,1.412,1277,2.363,1278,1.412,1283,2.363,1285,1.412,1286,2.363,1287,2.363,1288,2.363,1289,4.553,1292,1.412,1293,2.363,1294,2.363,1295,2.363,1296,2.363,1297,4.553,1298,3.047,1299,1.412,1300,3.047,1301,2.363,1302,2.363,1303,2.363,1306,1.412,1307,2.363,1308,2.363,1309,2.363,1310,4.288,1311,1.412,1312,1.412,1313,2.363,1314,1.412,1315,2.363,1316,2.363,1317,1.412,1318,2.363,1320,2.363,1321,2.363,1323,1.412,1352,0.887,1364,1.412,1365,4.288,1366,3.562,1367,3.562,1418,1.412,1419,1.631,1420,1.631,1421,4.954,1422,4.581,1423,1.631,1424,1.631,1425,1.631,1426,1.631,1427,1.631,1428,1.631,1429,1.631,1430,1.631,1431,1.631,1432,2.73,1433,1.631,1434,5.515,1435,5.26,1436,1.631,1437,1.631,1438,1.631,1439,1.631,1440,1.631,1441,1.631,1442,1.631,1443,1.631,1444,1.631,1445,1.631,1446,1.631,1447,1.631,1448,1.631,1449,1.631,1450,1.631,1451,1.631,1452,5.26,1453,4.581,1454,1.631,1455,1.631,1456,1.631,1457,1.631,1458,1.631,1459,2.73,1460,1.631,1461,1.631,1462,1.631,1463,1.631,1464,1.631,1465,1.631,1466,1.631,1467,1.631,1468,1.631,1469,1.631,1470,1.631,1471,1.631,1472,1.631,1473,2.73,1474,1.631,1475,1.631,1476,1.631,1477,1.631,1478,2.73,1479,5.26,1480,2.73,1481,7.039,1482,1.631,1483,2.73,1484,2.73,1485,4.116,1486,2.73,1487,1.631,1488,2.73,1489,3.52,1490,1.631,1491,7.642,1492,6.457,1493,6.457,1494,2.73,1495,1.631,1496,1.631,1497,6.079,1498,2.73,1499,1.631,1500,2.73,1501,2.73,1502,2.73,1503,1.631,1504,1.631,1505,1.631,1506,1.631,1507,1.631,1508,1.631]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"directives/FadeInOutDirective.html":{},"interfaces/FormStepper.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InputComponent.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1405,"title":{},"body":{"properties.html":{}}}],["0.0.26",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.0625rem",{"_index":548,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.12",{"_index":551,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.125rem",{"_index":561,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.13.0",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":559,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.2",{"_index":354,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["0.24",{"_index":560,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.2rem",{"_index":577,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.4rem",{"_index":553,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.55",{"_index":353,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["0.5rem",{"_index":564,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["0.65rem",{"_index":1026,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["0/1",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":558,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["1",{"_index":204,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InputComponent.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["1.08",{"_index":369,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["1.25rem",{"_index":541,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["1/2",{"_index":1169,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["1/3",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1170,"title":{},"body":{"components/StepperStepsComponent.html":{},"injectables/ZoneAxeService.html":{}}}],["100",{"_index":212,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":231,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":1022,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["116",{"_index":1031,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["1200",{"_index":233,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["1231",{"_index":893,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["123141232311",{"_index":870,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["135deg",{"_index":578,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["139/var",{"_index":1032,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["15",{"_index":1400,"title":{},"body":{"overview.html":{}}}],["16",{"_index":804,"title":{},"body":{"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{}}}],["16.0.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["16.5.5",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["16}rem",{"_index":1249,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["18.2.0",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":1167,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["1rem",{"_index":563,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["2",{"_index":207,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":872,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["200",{"_index":372,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/StepperStepsComponent.html":{}}}],["2000",{"_index":211,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["201",{"_index":849,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["225deg",{"_index":569,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["2312",{"_index":888,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["232",{"_index":895,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["23222",{"_index":899,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["25",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":1403,"title":{},"body":{"overview.html":{}}}],["3",{"_index":234,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":243,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["3000",{"_index":210,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["315deg",{"_index":576,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["321",{"_index":889,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["33",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":570,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["4",{"_index":201,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/variables.html":{}}}],["4/6",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":256,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{}}}],["40px",{"_index":1013,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["444",{"_index":891,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["45",{"_index":573,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["45deg",{"_index":572,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["5",{"_index":1401,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":242,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":216,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":209,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["555",{"_index":886,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["5px",{"_index":349,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["6",{"_index":236,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["6/6",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1402,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":229,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1200,"title":{},"body":{"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{}}}],["9._",{"_index":1199,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["90",{"_index":367,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["95px",{"_index":1025,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["96",{"_index":579,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["98",{"_index":809,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["_",{"_index":1203,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["_animationbuilder",{"_index":297,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["_destroyed",{"_index":1127,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["_elementref",{"_index":298,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["_fb",{"_index":584,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/StepperService.html":{}}}],["_generativeservice",{"_index":55,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["_jsondata",{"_index":458,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["_router",{"_index":1128,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["_stepperservice",{"_index":656,"title":{},"body":{"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{}}}],["_stepperstore",{"_index":816,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["_store",{"_index":1129,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["_validatorservice",{"_index":585,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["absolute",{"_index":536,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["abstractcontrol",{"_index":600,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["accessors",{"_index":302,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"injectables/StepperService.html":{}}}],["action",{"_index":12,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["actionbadge",{"_index":1,"title":{"interfaces/ActionBadge.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":917,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["actual_component",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["add",{"_index":675,"title":{},"body":{"components/InfoUserComponent.html":{},"injectables/ValidatorService.html":{}}}],["address",{"_index":847,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["addrole",{"_index":658,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["addroleofmember",{"_index":1077,"title":{},"body":{"injectables/StepperService.html":{}}}],["adds",{"_index":1081,"title":{},"body":{"injectables/StepperService.html":{}}}],["adult",{"_index":855,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["age",{"_index":853,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["aliases",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":1395,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":336,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":29,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":415,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":192,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/material/checkbox",{"_index":692,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/material/core",{"_index":1147,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["angular/material/form",{"_index":694,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/material/icon",{"_index":33,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["angular/material/input",{"_index":417,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["angular/material/radio",{"_index":693,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/platform",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["angularpatterns",{"_index":882,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["animate",{"_index":334,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{}}}],["animate('300ms",{"_index":350,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{}}}],["animation",{"_index":289,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{}}}],["animationbuilder",{"_index":314,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["animationfactory",{"_index":344,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["animationfactory.create(element",{"_index":358,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["animationplayer",{"_index":299,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["animations",{"_index":318,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{}}}],["app",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":63,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":681,"title":{},"body":{"components/InputComponent.html":{}}}],["applicationconfig",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":322,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["applies",{"_index":286,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["apply",{"_index":365,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxFormsComponent.html":{},"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["approot",{"_index":783,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["approutes",{"_index":1315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":279,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["args",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":747,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["array",{"_index":141,"title":{},"body":{"interfaces/BookDetail.html":{},"components/FormLabelComponent.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{}}}],["arrowfct",{"_index":1235,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["arrowposition",{"_index":568,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["arrowposition($position",{"_index":532,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["arrowposition(41",{"_index":575,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["arrowposition(89",{"_index":571,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["author",{"_index":136,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":772,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["avramescu",{"_index":843,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["axe.service",{"_index":767,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["axe.service.ts",{"_index":1216,"title":{},"body":{"injectables/ZoneAxeService.html":{},"coverage.html":{}}}],["axe.service.ts:19",{"_index":1224,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["axe.service.ts:32",{"_index":1228,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["axe.service.ts:7",{"_index":1229,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["axe.service.ts:8",{"_index":1223,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["axes",{"_index":801,"title":{},"body":{"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["b",{"_index":240,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":543,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["badge",{"_index":41,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["badge'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["badge.component",{"_index":448,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["badge.component.html",{"_index":46,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["badge.component.scss",{"_index":48,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["badge.component.stories.ts",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["badge.component.ts",{"_index":9,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:27",{"_index":362,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["badge.component.ts:33",{"_index":361,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["badge.component.ts:39",{"_index":360,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["badge.text",{"_index":363,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["barot",{"_index":898,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["barto",{"_index":897,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["barto2",{"_index":900,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["bartos",{"_index":901,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["based",{"_index":290,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["behaviorsubject",{"_index":1112,"title":{},"body":{"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["behaviorsubject('info",{"_index":1090,"title":{},"body":{"injectables/StepperService.html":{}}}],["best",{"_index":860,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["bezier(0.55",{"_index":352,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["bg",{"_index":1034,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["binds",{"_index":306,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["bl",{"_index":507,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["book",{"_index":237,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["book'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["book.component",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book.component.html",{"_index":815,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.scss",{"_index":814,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.stories.ts",{"_index":1318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["book.component.ts",{"_index":812,"title":{},"body":{"components/ReserveBookComponent.html":{},"coverage.html":{}}}],["book.component.ts:307",{"_index":822,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:308",{"_index":838,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:329",{"_index":820,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:335",{"_index":821,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:36",{"_index":824,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:37",{"_index":839,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:40",{"_index":825,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["book.component.ts:41",{"_index":902,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["bookdetail",{"_index":134,"title":{"interfaces/BookDetail.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{},"coverage.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":546,"title":{},"body":{"components/FtxTooltipComponent.html":{},"components/StepperStepsComponent.html":{}}}],["bottom",{"_index":537,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["bottomheight",{"_index":1018,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["bottomheight}px",{"_index":1027,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["box",{"_index":556,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["br",{"_index":508,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["browser",{"_index":1334,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["builder",{"_index":861,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["builder.service.ts",{"_index":583,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"coverage.html":{}}}],["builder.service.ts:19",{"_index":605,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:20",{"_index":607,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:22",{"_index":592,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:29",{"_index":597,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:39",{"_index":603,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:57",{"_index":594,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.service.ts:87",{"_index":601,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["builder.ts",{"_index":263,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["buildformfromjson",{"_index":586,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["buildformfromjson(jsondata",{"_index":591,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["buildformgenerate",{"_index":587,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["buildformgenerate(data",{"_index":593,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["built",{"_index":328,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["bulkvalues",{"_index":264,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FtxFormsComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{}}}],["button",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["button.component.html",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":91,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttondisable",{"_index":1074,"title":{},"body":{"injectables/StepperService.html":{}}}],["buttondisabled",{"_index":1131,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["buttonrect",{"_index":1217,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.bottom",{"_index":1241,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.height",{"_index":1242,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.left",{"_index":1238,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.right",{"_index":1244,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.top",{"_index":1246,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["buttonrect.width",{"_index":1239,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["c",{"_index":497,"title":{},"body":{"components/FtxFormsComponent.html":{},"miscellaneous/variables.html":{}}}],["c.infousercomponent",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c.introcomponent",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c.reservebookcomponent",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c.spendmoneycomponent",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c.steppercomponent",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calc(100vh",{"_index":1024,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["calculate",{"_index":1012,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["calculatepositionrecursively",{"_index":1219,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["calculatepositionrecursively(buttonrect",{"_index":1225,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["cancel",{"_index":224,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["cases",{"_index":1212,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["catcherror",{"_index":932,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["catcherror((err",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror((error",{"_index":926,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["categoryspendmoney",{"_index":156,"title":{"interfaces/CategorySpendMoney.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":379,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["centerx",{"_index":1237,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["centery",{"_index":1240,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["change",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changedetection",{"_index":49,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["changedetectionstrategy",{"_index":23,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":50,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["changes",{"_index":1095,"title":{},"body":{"injectables/StepperService.html":{}}}],["char",{"_index":876,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["check",{"_index":143,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":409,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/InputComponent.html":{}}}],["child",{"_index":205,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["children",{"_index":773,"title":{},"body":{"directives/RenderYouDirective.html":{},"miscellaneous/variables.html":{}}}],["childrens",{"_index":152,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":51,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"index.html":{}}}],["class=\"absolute",{"_index":1163,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["cnp",{"_index":868,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["coagulu",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"index.html":{}}}],["coding",{"_index":1378,"title":{},"body":{"index.html":{}}}],["color",{"_index":544,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["column",{"_index":567,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["combinelatest",{"_index":1113,"title":{},"body":{"injectables/StepperService.html":{}}}],["combinelatest([this.formvalue",{"_index":1085,"title":{},"body":{"injectables/StepperService.html":{}}}],["commit",{"_index":1380,"title":{},"body":{"index.html":{}}}],["common",{"_index":1397,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":28,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["complete",{"_index":403,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":24,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":796,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["component'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["componentfactory",{"_index":774,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["componentfactoryresolver",{"_index":735,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["componentref",{"_index":736,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["components",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"overview.html":{}}}],["components/contentsteps/reservebook/reserve",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/contentsteps/spendmoney/spend",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concerts",{"_index":219,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1389,"title":{},"body":{"index.html":{}}}],["console.error('error",{"_index":927,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["console.log('ivan",{"_index":445,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["console.log('test",{"_index":59,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"miscellaneous/variables.html":{}}}],["console.log(this.buildformgenerate(jsondata",{"_index":613,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["console.log(this.dynamicform.getrawvalue",{"_index":912,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["console.warn(err",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":197,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/variables.html":{}}}],["constantsenum",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":981,"title":{},"body":{"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["constructor(tooltip",{"_index":1220,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["container",{"_index":555,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["content",{"_index":522,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["contentchild",{"_index":529,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["contentchild(ftxtooltipcomponent",{"_index":527,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["contentelement.offsetheight",{"_index":1009,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["contentelement.scrollheight",{"_index":1008,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["contentelement.scrolltop",{"_index":1011,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["contentheight",{"_index":1017,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["contentscrollheight",{"_index":1007,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["continue",{"_index":1171,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["control",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":292,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["control.directive.ts",{"_index":710,"title":{},"body":{"directives/PapControlDirective.html":{},"coverage.html":{}}}],["control.directive.ts:16",{"_index":722,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["control.directive.ts:19",{"_index":720,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["control.directive.ts:22",{"_index":721,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["control.errors?.['error",{"_index":704,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors?.[\\'error",{"_index":705,"title":{},"body":{"components/InputComponent.html":{}}}],["control.value",{"_index":1190,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["controll",{"_index":426,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["controlmapping",{"_index":459,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["controlvalueaccessor",{"_index":712,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["course",{"_index":879,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["coverage",{"_index":1250,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":317,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["createaction",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[reserve",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(`[${prefixstepper",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":921,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["createentityadapter",{"_index":942,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(reserve_feature_key",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(stepper_feature_key",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":945,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["cubic",{"_index":351,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["currency",{"_index":280,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["currentreserve",{"_index":165,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["currentscroll",{"_index":1010,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["cut",{"_index":220,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["dadasdssssssssssssssssasd",{"_index":451,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["dasdasd",{"_index":857,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["dasdasdasd",{"_index":452,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["data",{"_index":595,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReserveEntity.html":{},"interfaces/StepperEntity.html":{},"index.html":{}}}],["data.bulkvalues",{"_index":639,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["data.bulkvalues.map((subitem",{"_index":640,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["data.values",{"_index":627,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["data.values.foreach((item",{"_index":630,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["dataformbuilder",{"_index":261,"title":{"interfaces/DataFormBuilder.html":{}},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{},"index.html":{}}}],["date",{"_index":282,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["debouncetime",{"_index":903,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["debouncetime(200",{"_index":828,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["decorators",{"_index":526,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["deep",{"_index":385,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["default",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}}}],["defines",{"_index":1391,"title":{},"body":{"index.html":{}}}],["deg",{"_index":533,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["delete",{"_index":174,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{}}}],["dependencies",{"_index":1327,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":265,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReserveEntity.html":{},"directives/ScrollHintDirective.html":{},"interfaces/StepperEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/variables.html":{}}}],["descriptionentity",{"_index":271,"title":{"interfaces/DescriptionEntity.html":{}},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormLabelComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{}}}],["destroyed",{"_index":977,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["details",{"_index":167,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1371,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":670,"title":{},"body":{"components/InfoUserComponent.html":{},"injectables/StepperService.html":{}}}],["direction",{"_index":566,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["directive",{"_index":86,"title":{"directives/FadeInOutDirective.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["directive/fade",{"_index":418,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["directives",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"overview.html":{}}}],["disable",{"_index":180,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":565,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["distinctuntilchanged",{"_index":995,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["div:first",{"_index":501,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["document.queryselector('app",{"_index":784,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["document.queryselector('storybook",{"_index":786,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["documentation",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["domrect",{"_index":1226,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["done",{"_index":1415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["down",{"_index":221,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["drinks",{"_index":215,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["dropdown",{"_index":281,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["ds",{"_index":873,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["ds2",{"_index":877,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["ds3",{"_index":878,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["duration",{"_index":371,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["dynamic",{"_index":697,"title":{},"body":{"components/InputComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dynamicform",{"_index":461,"title":{},"body":{"components/FtxFormsComponent.html":{},"components/ReserveBookComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":373,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/InputComponent.html":{}}}],["eating",{"_index":222,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":173,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{}}}],["effect",{"_index":974,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["elementref",{"_index":321,"title":{},"body":{"directives/FadeInOutDirective.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["elementtext",{"_index":741,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["elementtoadd",{"_index":787,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["email",{"_index":844,"title":{},"body":{"components/ReserveBookComponent.html":{},"miscellaneous/enumerations.html":{}}}],["emailpattern",{"_index":1196,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["emailpattern.test(control.value",{"_index":1202,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["emailvalidator",{"_index":1173,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["emailvalidator(control",{"_index":1178,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["emitevent",{"_index":732,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["emits",{"_index":1100,"title":{},"body":{"injectables/StepperService.html":{}}}],["encapsulation",{"_index":518,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["end",{"_index":163,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["entertainment",{"_index":217,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":966,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["entities[selectedid",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":390,"title":{},"body":{"components/FormControlEntityComponent.html":{},"injectables/GenerativeService.html":{}}}],["entity'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["entity.component.html",{"_index":395,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.scss",{"_index":394,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.stories.ts",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entity.component.ts",{"_index":388,"title":{},"body":{"components/FormControlEntityComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["entity.component.ts:39",{"_index":402,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:43",{"_index":408,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:47",{"_index":405,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:51",{"_index":404,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:56",{"_index":401,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:60",{"_index":406,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entity.component.ts:61",{"_index":414,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["entityadapter",{"_index":943,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["entitystate",{"_index":944,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["enumerations",{"_index":1353,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":57,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"injectables/ValidatorService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":1207,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["error('not",{"_index":425,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["error('please",{"_index":624,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["error(`not",{"_index":428,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["errorcontrol",{"_index":303,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["errorcontrol(control",{"_index":341,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["errormsg",{"_index":277,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{}}}],["eslint",{"_index":478,"title":{},"body":{"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":650,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["event",{"_index":748,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"miscellaneous/variables.html":{}}}],["event.target",{"_index":770,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["eventemitter",{"_index":189,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxFormsComponent.html":{},"components/StepperStepsComponent.html":{}}}],["evere",{"_index":862,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["export",{"_index":36,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"index.html":{}}}],["exportas",{"_index":295,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["expose",{"_index":337,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["extends",{"_index":947,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["exteotera",{"_index":159,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{}}}],["extractvalidator",{"_index":588,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["extractvalidator(item",{"_index":596,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["fa_brands:codepen",{"_index":244,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["fa_brands:sitrox",{"_index":200,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["fa_brands:twitter",{"_index":208,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["fa_solid:music",{"_index":227,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["fa_solid:ro",{"_index":443,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["fade",{"_index":287,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["fadeinoutdirective",{"_index":123,"title":{"directives/FadeInOutDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["failure",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":206,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InputComponent.html":{},"interfaces/Modals.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["familynumber",{"_index":149,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["feb",{"_index":230,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["fiction",{"_index":239,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":695,"title":{},"body":{"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{}}}],["filled",{"_index":884,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["filter((event",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":782,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["flag",{"_index":1092,"title":{},"body":{"injectables/StepperService.html":{}}}],["flagurl",{"_index":1075,"title":{},"body":{"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["flex",{"_index":376,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxTooltipComponent.html":{}}}],["food",{"_index":214,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":40,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form.ngx",{"_index":500,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["form.type.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["formarray",{"_index":466,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{}}}],["formbadge/form",{"_index":447,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["formbadgecomponent",{"_index":52,"title":{"components/FormBadgeComponent.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":608,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/StepperService.html":{}}}],["formcontrol",{"_index":465,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{}}}],["formcontroldirective",{"_index":410,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["formcontrolentitycomponent",{"_index":95,"title":{"components/FormControlEntityComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formcontrolname",{"_index":411,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["formgroup",{"_index":464,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"directives/PatchFormGroupValueDirective.html":{},"injectables/StepperService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formlabel/form",{"_index":420,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["formlabelcomponent",{"_index":98,"title":{"components/FormLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":455,"title":{},"body":{"components/FtxFormsComponent.html":{},"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"index.html":{}}}],["forms'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["forms.component",{"_index":1385,"title":{},"body":{"index.html":{}}}],["forms.component.html",{"_index":457,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.scss",{"_index":456,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.stories.ts",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms.component.ts",{"_index":454,"title":{},"body":{"components/FtxFormsComponent.html":{},"coverage.html":{}}}],["forms.component.ts:36",{"_index":467,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:37",{"_index":469,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:39",{"_index":474,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:40",{"_index":473,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:42",{"_index":471,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:44",{"_index":470,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:46",{"_index":476,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms.component.ts:50",{"_index":468,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["forms/.../button.component.stories.ts",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forms/.../constants.enum.ts",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forms/.../data",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forms/.../form",{"_index":1365,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["forms/.../ftx",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forms/.../input.component.stories.ts",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forms/.../type",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forms/.../validator.service.ts",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forms/components/formbadge/form",{"_index":8,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms/components/formcontrolentity/form",{"_index":387,"title":{},"body":{"components/FormControlEntityComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["forms/components/formlabel/form",{"_index":430,"title":{},"body":{"components/FormLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms/directive/fade",{"_index":284,"title":{},"body":{"directives/FadeInOutDirective.html":{},"coverage.html":{}}}],["forms/directive/pap",{"_index":709,"title":{},"body":{"directives/PapControlDirective.html":{},"coverage.html":{}}}],["forms/directive/patch",{"_index":723,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{},"coverage.html":{}}}],["forms/ftx",{"_index":453,"title":{},"body":{"components/FtxFormsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms/interfaces/data",{"_index":262,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/service/generative.service.ts",{"_index":645,"title":{},"body":{"injectables/GenerativeService.html":{},"coverage.html":{}}}],["forms/service/generative.service.ts:8",{"_index":648,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["forms/service/service",{"_index":582,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"coverage.html":{}}}],["forms/service/validator.service.ts",{"_index":1172,"title":{},"body":{"injectables/ValidatorService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forms/service/validator.service.ts:14",{"_index":1188,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/service/validator.service.ts:20",{"_index":1183,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/service/validator.service.ts:24",{"_index":1181,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/service/validator.service.ts:31",{"_index":1186,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/service/validator.service.ts:44",{"_index":1179,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/service/validator.service.ts:54",{"_index":1189,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["forms/shared/button/button.component.stories.ts",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms/shared/button/button.component.ts",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["forms/shared/button/button.component.ts:20",{"_index":190,"title":{},"body":{"components/ButtonComponent.html":{}}}],["forms/shared/button/button.component.ts:21",{"_index":186,"title":{},"body":{"components/ButtonComponent.html":{}}}],["forms/shared/button/button.component.ts:22",{"_index":187,"title":{},"body":{"components/ButtonComponent.html":{}}}],["forms/shared/button/button.component.ts:23",{"_index":188,"title":{},"body":{"components/ButtonComponent.html":{}}}],["forms/shared/input/input.component.stories.ts",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forms/shared/input/input.component.ts",{"_index":676,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["forms/shared/input/input.component.ts:52",{"_index":691,"title":{},"body":{"components/InputComponent.html":{}}}],["forms/shared/input/input.component.ts:56",{"_index":689,"title":{},"body":{"components/InputComponent.html":{}}}],["forms/shared/input/input.component.ts:60",{"_index":688,"title":{},"body":{"components/InputComponent.html":{}}}],["forms/shared/input/input.component.ts:64",{"_index":690,"title":{},"body":{"components/InputComponent.html":{}}}],["forms/shared/input/input.component.ts:66",{"_index":687,"title":{},"body":{"components/InputComponent.html":{}}}],["forms/src/lib/ftx",{"_index":7,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/ButtonComponent.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InputComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["forms/utils/constants.enum.ts",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forms/utils/type",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["formsmodule",{"_index":391,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{},"components/StepperComponent.html":{}}}],["formstepper",{"_index":248,"title":{"interfaces/FormStepper.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formvalue",{"_index":817,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["formvaluechange",{"_index":1062,"title":{},"body":{"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formvaluechangereserve",{"_index":907,"title":{},"body":{"components/ReserveBookComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formvalues",{"_index":1078,"title":{},"body":{"injectables/StepperService.html":{}}}],["fromevent",{"_index":996,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["fromevent($event.target",{"_index":1004,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["fromreserve.reservereducer",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromstepper.stepperreducer",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fts",{"_index":449,"title":{},"body":{"components/FormLabelComponent.html":{},"components/StepperStepsComponent.html":{}}}],["ftx",{"_index":6,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftxformscomponent",{"_index":100,"title":{"components/FtxFormsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ftxsivansharedcomponent",{"_index":102,"title":{"components/FtxSivanSharedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["ftxtooltipcomponent",{"_index":105,"title":{"components/FtxTooltipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1165,"title":{},"body":{"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":17,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/CategorySpendMoney.html":{},"components/FormControlEntityComponent.html":{},"interfaces/FormStepper.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1363,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":377,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["generate",{"_index":250,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{}}}],["generateformbuilderservice",{"_index":460,"title":{"injectables/GenerateFormBuilderService.html":{}},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"coverage.html":{}}}],["generaterandomid",{"_index":199,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generativeservice",{"_index":34,"title":{"injectables/GenerativeService.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerativeService.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["genre",{"_index":238,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["getcustomfromcontroltype",{"_index":589,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["getcustomfromcontroltype(control",{"_index":599,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["getformvalues",{"_index":1107,"title":{},"body":{"injectables/StepperService.html":{}}}],["getjsondata",{"_index":475,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["getstepperform",{"_index":1110,"title":{},"body":{"injectables/StepperService.html":{}}}],["getsteps",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1369,"title":{"index.html":{}},"body":{}}],["getvalidator",{"_index":590,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["getvalidator(validatorconfig",{"_index":602,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["gradient(rgb(0",{"_index":1029,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["graph",{"_index":160,"title":{"interfaces/Graph.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graphvalue",{"_index":260,"title":{"interfaces/GraphValue.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{}}}],["gray",{"_index":1164,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["groceries",{"_index":213,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":628,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"directives/PatchFormGroupValueDirective.html":{},"coverage.html":{},"index.html":{}}}],["group[label",{"_index":631,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["guidance",{"_index":1394,"title":{},"body":{"index.html":{}}}],["h",{"_index":1166,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["handle",{"_index":913,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["handler",{"_index":984,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["happy",{"_index":1377,"title":{},"body":{"index.html":{}}}],["havetooltip",{"_index":434,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["height",{"_index":542,"title":{},"body":{"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["helper",{"_index":249,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}}}],["here",{"_index":1390,"title":{},"body":{"index.html":{}}}],["hint",{"_index":973,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts",{"_index":971,"title":{},"body":{"directives/ScrollHintDirective.html":{},"coverage.html":{}}}],["hint.directive.ts:107",{"_index":985,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts:30",{"_index":991,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts:35",{"_index":994,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts:36",{"_index":993,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts:41",{"_index":982,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hint.directive.ts:58",{"_index":983,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["home",{"_index":890,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["host",{"_index":374,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxTooltipComponent.html":{},"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["hostdirectives",{"_index":389,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["hostlistener",{"_index":763,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["hostlistener('mouseenter",{"_index":753,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["hostlistener('mouseleave",{"_index":754,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["hostlistener('scroll",{"_index":987,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["hostlisteners",{"_index":742,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["hover:opacity",{"_index":366,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["hover:scale",{"_index":368,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["howmannymonth",{"_index":164,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"index.html":{}}}],["htmldivelement",{"_index":1221,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["htmlelement",{"_index":771,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["http://localhost:4200",{"_index":1376,"title":{},"body":{"index.html":{}}}],["icon",{"_index":14,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":137,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/ReserveEntity.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":253,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}}}],["implement",{"_index":625,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["implements",{"_index":711,"title":{},"body":{"directives/PapControlDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"injectables/ZoneAxeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["import('./components/contentsteps/infouser/info",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./components/contentsteps/intro/intro.component').then",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./components/stepper/stepper.component').then",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(iconcoremodule",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":44,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"index.html":{}}}],["in/out",{"_index":288,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["include",{"_index":383,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxTooltipComponent.html":{}}}],["incoming",{"_index":154,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{"interfaces/Info.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infouser",{"_index":148,"title":{"interfaces/InfoUser.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["infousercomponent",{"_index":107,"title":{"components/InfoUserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":918,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":957,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":1387,"title":{},"body":{"index.html":{}}}],["initialreservestate",{"_index":955,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialstepperstate",{"_index":1066,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initreserve",{"_index":1286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initstepper",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":25,"title":{},"body":{"interfaces/ActionBadge.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["inject(actions",{"_index":919,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["inject(animationbuilder",{"_index":312,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["inject(componentfactoryresolver",{"_index":755,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["inject(elementref",{"_index":319,"title":{},"body":{"directives/FadeInOutDirective.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["inject(formbuilder",{"_index":604,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/StepperService.html":{}}}],["inject(generateformbuilderservice",{"_index":472,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["inject(generativeservice",{"_index":56,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FtxFormsComponent.html":{},"components/StepperStepsComponent.html":{}}}],["inject(ngcontrol",{"_index":422,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["inject(renderer2",{"_index":759,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["inject(router",{"_index":1139,"title":{},"body":{"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(stepperservice",{"_index":660,"title":{},"body":{"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(store",{"_index":823,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["inject(validatorservice",{"_index":606,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["inject(viewcontainerref",{"_index":761,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["injectable",{"_index":580,"title":{"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{}}}],["injectables",{"_index":581,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"overview.html":{}}}],["injected",{"_index":1083,"title":{},"body":{"injectables/StepperService.html":{}}}],["injectngcontrol",{"_index":413,"title":{},"body":{"components/FormControlEntityComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":26,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["input('ngxfadeinout",{"_index":339,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["input.component.html",{"_index":686,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":685,"title":{},"body":{"components/InputComponent.html":{}}}],["inputcomponent",{"_index":109,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":179,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/StepperStepsComponent.html":{}}}],["insertafter",{"_index":789,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["insertafter(elementtoadd",{"_index":795,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["instance",{"_index":315,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"injectables/StepperService.html":{}}}],["instanceof",{"_index":427,"title":{},"body":{"components/FormControlEntityComponent.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":852,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionBadge.html":{},"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}},"body":{"interfaces/ActionBadge.html":{},"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"overview.html":{}}}],["interval",{"_index":283,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["intro",{"_index":142,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["intro'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["intro.component.html",{"_index":708,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro.component.scss",{"_index":707,"title":{},"body":{"components/IntroComponent.html":{}}}],["introcomponent",{"_index":110,"title":{"components/IntroComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipsum",{"_index":859,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["isformarray",{"_index":397,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"miscellaneous/variables.html":{}}}],["isformarray(control",{"_index":643,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["isformgroup",{"_index":609,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["isformgroup(control",{"_index":644,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["isvan",{"_index":842,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["item",{"_index":484,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{}}}],["item.bulkvalues",{"_index":492,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{}}}],["item.bulkvalues.map((subitem",{"_index":634,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["item.label?.tolowercase",{"_index":485,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{}}}],["item.validators",{"_index":615,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["item.validators.length",{"_index":616,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["item.validators.map((validatorconfig",{"_index":617,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["item.values",{"_index":491,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{}}}],["item?.label",{"_index":486,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["items",{"_index":378,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["itemstomap",{"_index":490,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["itemstomap.foreach((values",{"_index":493,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["iterate",{"_index":488,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["ivan",{"_index":840,"title":{},"body":{"components/ReserveBookComponent.html":{},"components/StepperStepsComponent.html":{}}}],["ivan2",{"_index":865,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["jan",{"_index":228,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":1388,"title":{},"body":{"index.html":{}}}],["jsondata",{"_index":462,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jsondata(jsondata",{"_index":482,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["jsondata.values",{"_index":483,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["key",{"_index":629,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{}}}],["known",{"_index":953,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["label",{"_index":146,"title":{"interfaces/Label.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InputComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["label.component",{"_index":421,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["label.component.html",{"_index":433,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.scss",{"_index":432,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.stories.ts",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["label.component.ts",{"_index":431,"title":{},"body":{"components/FormLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:28",{"_index":439,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:33",{"_index":440,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:38",{"_index":442,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:43",{"_index":441,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:47",{"_index":436,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:51",{"_index":435,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["label.component.ts:52",{"_index":446,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["labelcurrency",{"_index":171,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["labelhint",{"_index":266,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{}}}],["labelinput",{"_index":398,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":506,"title":{},"body":{"components/FtxFormsComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["left",{"_index":444,"title":{},"body":{"components/FormLabelComponent.html":{},"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/typealiases.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["lg",{"_index":504,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["liburg",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["license",{"_index":1406,"title":{},"body":{"properties.html":{}}}],["line",{"_index":480,"title":{},"body":{"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["linear",{"_index":1028,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["lint",{"_index":1381,"title":{},"body":{"index.html":{}}}],["lint:fix",{"_index":1382,"title":{},"body":{"index.html":{}}}],["list",{"_index":952,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["literal",{"_index":139,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/StepperEntity.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}}}],["load",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadcomponent",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":951,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["loadreservefailure",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadreservesuccess",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadstepperfailure",{"_index":1302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadsteppersuccess",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":1384,"title":{},"body":{"index.html":{}}}],["lorem",{"_index":858,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["manipulate",{"_index":990,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["map",{"_index":997,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["map((event",{"_index":1005,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["map((v",{"_index":1154,"title":{},"body":{"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["mar",{"_index":232,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":552,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["marian",{"_index":184,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mat",{"_index":386,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["mat_form_field_default_options",{"_index":679,"title":{},"body":{"components/InputComponent.html":{}}}],["matbuttonmodule",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{}}}],["matcheckboxmodule",{"_index":683,"title":{},"body":{"components/InputComponent.html":{}}}],["matching",{"_index":62,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1396,"title":{},"body":{"index.html":{}}}],["math.max(0",{"_index":1015,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["math.min(1",{"_index":1014,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["math.random().tostring(36).substr(2",{"_index":255,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}}}],["maticonmodule",{"_index":32,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["matinputmodule",{"_index":393,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["matradiomodule",{"_index":684,"title":{},"body":{"components/InputComponent.html":{}}}],["matripplemodule",{"_index":1124,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["max",{"_index":382,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxTooltipComponent.html":{},"miscellaneous/enumerations.html":{}}}],["maxage",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["md",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":674,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["message",{"_index":437,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["metadata",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["methods",{"_index":300,"title":{},"body":{"directives/FadeInOutDirective.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"directives/PapControlDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}}}],["middle",{"_index":58,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miki",{"_index":892,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["min",{"_index":885,"title":{},"body":{"components/ReserveBookComponent.html":{},"miscellaneous/enumerations.html":{}}}],["min_char",{"_index":1358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minchar",{"_index":1359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mincharvalidator",{"_index":1174,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["mincharvalidator(control",{"_index":1180,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["minvalidator",{"_index":1175,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["minvalidator(control",{"_index":1182,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["miscellaneous",{"_index":1352,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1407,"title":{},"body":{"properties.html":{}}}],["mixin",{"_index":364,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxTooltipComponent.html":{}}}],["mock",{"_index":1064,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["mockstepper",{"_index":198,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modals",{"_index":168,"title":{"interfaces/Modals.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":429,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["modules",{"_index":1398,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["money",{"_index":246,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["money'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["money.component",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["money.component.html",{"_index":1041,"title":{},"body":{"components/SpendMoneyComponent.html":{}}}],["money.component.scss",{"_index":1040,"title":{},"body":{"components/SpendMoneyComponent.html":{}}}],["money.component.stories.ts",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["money.component.ts",{"_index":1039,"title":{},"body":{"components/SpendMoneyComponent.html":{},"coverage.html":{}}}],["monitor",{"_index":332,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["more",{"_index":1211,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["mouseenter",{"_index":743,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["mouseevent",{"_index":752,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["mouseleave",{"_index":744,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["movies",{"_index":218,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":714,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["mystery",{"_index":241,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReserveEntity.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"interfaces/StepperEntity.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":896,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["navigate",{"_index":1375,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needed",{"_index":1214,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["nested",{"_index":869,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["new",{"_index":193,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["newnode",{"_index":790,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["newrole",{"_index":1118,"title":{},"body":{"injectables/StepperService.html":{}}}],["next",{"_index":479,"title":{},"body":{"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"directives/ScrollHintDirective.html":{},"miscellaneous/variables.html":{}}}],["nexttab",{"_index":1130,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["ng",{"_index":384,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{}}}],["ng_value_accessor",{"_index":713,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["ngcontrol",{"_index":396,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["ngmodel",{"_index":412,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["ngondestroy",{"_index":979,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["ngoninit",{"_index":818,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["ngrx/component",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":931,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":671,"title":{},"body":{"components/InfoUserComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":906,"title":{},"body":{"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":39,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["ngxcontrol",{"_index":716,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["ngxcontrol]'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["ngxfadeinout",{"_index":294,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["ngxfadeinout]'},{'name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["ngxformgroupvalues",{"_index":725,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["ngxformgroupvalues(val",{"_index":730,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["ngxformgroupvalues]'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["nothig",{"_index":60,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["npm",{"_index":1374,"title":{},"body":{"index.html":{}}}],["null",{"_index":147,"title":{},"body":{"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":150,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/FormStepper.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/enumerations.html":{}}}],["nx/angular",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":664,"title":{},"body":{"components/InfoUserComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["of(!valuescombined[0][valuescombined[1]].check",{"_index":1088,"title":{},"body":{"injectables/StepperService.html":{}}}],["of(false",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(reserveactions.loadreservefailure",{"_index":928,"title":{},"body":{"injectables/ReserveEffects.html":{}}}],["of(reserveactions.loadreservesuccess",{"_index":925,"title":{},"body":{"injectables/ReserveEffects.html":{}}}],["of(stepperactions.loadstepperfailure",{"_index":1054,"title":{},"body":{"injectables/StepperEffects.html":{}}}],["of(stepperactions.loadsteppersuccess",{"_index":1053,"title":{},"body":{"injectables/StepperEffects.html":{}}}],["oftype",{"_index":930,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["oftype(reserveactions.initreserve",{"_index":923,"title":{},"body":{"injectables/ReserveEffects.html":{}}}],["oftype(stepperactions.initstepper",{"_index":1052,"title":{},"body":{"injectables/StepperEffects.html":{}}}],["on(reserveactions.initreserve",{"_index":960,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["on(reserveactions.loadreservefailure",{"_index":963,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["on(reserveactions.loadreservesuccess",{"_index":961,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["on(stepperactions.initstepper",{"_index":1068,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["on(stepperactions.loadstepperfailure",{"_index":1071,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["on(stepperactions.loadsteppersuccess",{"_index":1069,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":976,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["oninit",{"_index":813,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["only_char",{"_index":1360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_number",{"_index":1361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onmouseenter",{"_index":739,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["onmouseenter(event",{"_index":751,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["onmouseleave",{"_index":740,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["onsubmit",{"_index":819,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["onwindow",{"_index":980,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["onwindow($event",{"_index":986,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["opacity",{"_index":346,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["opacity)).tofixed(2",{"_index":1016,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["open",{"_index":1256,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":276,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/BookDetail.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/InfoUser.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"interfaces/StepperState.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/functions.html":{}}}],["optionregex",{"_index":1185,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["out",{"_index":223,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["out.directive",{"_index":419,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["out.directive.ts",{"_index":285,"title":{},"body":{"directives/FadeInOutDirective.html":{},"coverage.html":{}}}],["out.directive.ts:22",{"_index":320,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["out.directive.ts:27",{"_index":313,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["out.directive.ts:32",{"_index":323,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["out.directive.ts:38",{"_index":305,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["out.directive.ts:47",{"_index":308,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["outline",{"_index":696,"title":{},"body":{"components/InputComponent.html":{}}}],["output",{"_index":191,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxFormsComponent.html":{},"components/StepperStepsComponent.html":{}}}],["outputs",{"_index":183,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxFormsComponent.html":{},"components/StepperStepsComponent.html":{}}}],["over",{"_index":489,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["overview",{"_index":1399,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1326,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":562,"title":{},"body":{"components/FtxTooltipComponent.html":{},"injectables/ZoneAxeService.html":{}}}],["paddingtooltip",{"_index":1227,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["page",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["papcontroldirective",{"_index":125,"title":{"directives/PapControlDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["param",{"_index":338,"title":{},"body":{"directives/FadeInOutDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["parameters",{"_index":331,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":203,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["patchformgroupvaluedirective",{"_index":127,"title":{"directives/PatchFormGroupValueDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["path",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":1192,"title":{},"body":{"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{}}}],["pattern.test(control.value",{"_index":1195,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["patternvalidator",{"_index":1176,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["patternvalidator(control",{"_index":1184,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["personal",{"_index":867,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["personaldata",{"_index":866,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["pfm",{"_index":1417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":827,"title":{},"body":{"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe(sharereplay",{"_index":837,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["placeholder",{"_index":267,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{}}}],["placeholderinput",{"_index":399,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["playanimation",{"_index":301,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["plays",{"_index":309,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["position",{"_index":535,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["position.left",{"_index":807,"title":{},"body":{"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["position.top",{"_index":803,"title":{},"body":{"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["positions",{"_index":799,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["pre",{"_index":1379,"title":{},"body":{"index.html":{}}}],["prefixstepper",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefixstepper}/api",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":937,"title":{},"body":{"interfaces/ReserveEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["primaryenable",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":296,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InfoUserComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ZoneAxeService.html":{}}}],["programmatic",{"_index":325,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["props",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":53,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{}}}],["provide",{"_index":678,"title":{},"body":{"components/InputComponent.html":{},"directives/PapControlDirective.html":{}}}],["provideanimations",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":291,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["providedin",{"_index":612,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}}}],["provideeffects(reserveeffects",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideeffects(steppereffects",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(approutes",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":677,"title":{},"body":{"components/InputComponent.html":{},"directives/PapControlDirective.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":324,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["providestate(fromreserve.reserve_feature_key",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestate(fromstepper.stepper_feature_key",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pseudo",{"_index":1002,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["pseudoelement",{"_index":978,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["public",{"_index":194,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperService.html":{}}}],["px",{"_index":380,"title":{},"body":{"components/FormBadgeComponent.html":{}}}],["radio",{"_index":407,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{}}}],["radio.description",{"_index":703,"title":{},"body":{"components/InputComponent.html":{}}}],["random",{"_index":251,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}}}],["react",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":392,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{}}}],["reactpatterns",{"_index":887,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["readonly",{"_index":54,"title":{},"body":{"interfaces/ActionBadge.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"directives/ScrollHintDirective.html":{},"components/StepperComponent.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ZoneAxeService.html":{}}}],["recommendation",{"_index":258,"title":{"interfaces/Recommendation.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{}}}],["recommendationreserve",{"_index":166,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["recommendations",{"_index":158,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":949,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["redirectto",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reducer",{"_index":959,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reducer(state",{"_index":969,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["refer",{"_index":1393,"title":{},"body":{"index.html":{}}}],["reference",{"_index":992,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["referencenode",{"_index":791,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["referencenode.nextsibling",{"_index":794,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["referencenode.parentnode.insertbefore",{"_index":793,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["referencenode?.parentnode",{"_index":792,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["regexp",{"_index":1194,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["regexp(optionregex",{"_index":1193,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["registeronchange",{"_index":717,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["registerontouched",{"_index":718,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["relative",{"_index":554,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["rem",{"_index":805,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["render",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renderer",{"_index":989,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["renderer2",{"_index":737,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["renderertemplate",{"_index":523,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["renderyou",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["renderyoudirective",{"_index":129,"title":{"directives/RenderYouDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["representing",{"_index":1106,"title":{},"body":{"injectables/StepperService.html":{}}}],["required",{"_index":958,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["requiredvalidator",{"_index":1177,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["requiredvalidator(control",{"_index":1187,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["reserve",{"_index":113,"title":{"interfaces/Reserve.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reserve.actions",{"_index":934,"title":{},"body":{"injectables/ReserveEffects.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{}}}],["reserve.models",{"_index":946,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{}}}],["reserve/api",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserve_feature_key",{"_index":940,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reserveactions",{"_index":933,"title":{},"body":{"injectables/ReserveEffects.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{}}}],["reserveactions.formvaluechangereserve",{"_index":964,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["reserveadapter",{"_index":954,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reserveadapter.getinitialstate",{"_index":956,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["reserveadapter.getselectors",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserveadapter.setall(reserve",{"_index":962,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"miscellaneous/variables.html":{}}}],["reservebook",{"_index":161,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["reservebookcomponent",{"_index":112,"title":{"components/ReserveBookComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reserveeffects",{"_index":915,"title":{"injectables/ReserveEffects.html":{}},"body":{"injectables/ReserveEffects.html":{},"coverage.html":{}}}],["reserveentity",{"_index":935,"title":{"interfaces/ReserveEntity.html":{}},"body":{"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{}}}],["reservepartialstate",{"_index":938,"title":{"interfaces/ReservePartialState.html":{}},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{}}}],["reservereducer",{"_index":968,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reservereducer(state",{"_index":1368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reservestate",{"_index":941,"title":{"interfaces/ReserveState.html":{}},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["resolve",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieves",{"_index":1109,"title":{},"body":{"injectables/StepperService.html":{}}}],["return",{"_index":254,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"components/FormControlEntityComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":310,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"components/InfoUserComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":326,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["revenue",{"_index":155,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["rgb(100",{"_index":1030,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["rgba(0",{"_index":550,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["right",{"_index":574,"title":{},"body":{"components/FtxTooltipComponent.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/typealiases.html":{}}}],["role",{"_index":673,"title":{},"body":{"components/InfoUserComponent.html":{},"injectables/StepperService.html":{}}}],["roleofmember",{"_index":151,"title":{"interfaces/RoleOfMember.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"directives/RenderYouDirective.html":{},"injectables/StepperService.html":{},"injectables/ValidatorService.html":{},"injectables/ZoneAxeService.html":{}}}],["root'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["rotate($deg",{"_index":539,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["rounded",{"_index":502,"title":{},"body":{"components/FtxFormsComponent.html":{},"miscellaneous/variables.html":{}}}],["roundedfull",{"_index":181,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":1146,"title":{},"body":{"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["router.events",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1122,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["routerlinkactive",{"_index":1123,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["routermodule",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":1043,"title":{},"body":{"components/StepperComponent.html":{}}}],["run",{"_index":1373,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":669,"title":{},"body":{"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1168,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["s@gm.co",{"_index":845,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["scaley(0",{"_index":700,"title":{},"body":{"components/InputComponent.html":{}}}],["scaley(1",{"_index":701,"title":{},"body":{"components/InputComponent.html":{}}}],["scope",{"_index":157,"title":{"interfaces/Scope.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroll",{"_index":972,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["scrollable",{"_index":975,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["scrollhintdirective",{"_index":131,"title":{"directives/ScrollHintDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["sdasdasd",{"_index":450,"title":{},"body":{"components/FormLabelComponent.html":{}}}],["selectall(state",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectallreserve",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectallstepper",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":950,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["selectedid",{"_index":948,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["selectentities(state",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectentity",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":38,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["selectreserveentities",{"_index":908,"title":{},"body":{"components/ReserveBookComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectreserveerror",{"_index":1295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectreserveloaded",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectreservestate",{"_index":1297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectselectedid",{"_index":1298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstepperentities",{"_index":1114,"title":{},"body":{"injectables/StepperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectsteppererror",{"_index":1308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstepperloaded",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstepperstate",{"_index":1310,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstepsentities",{"_index":1148,"title":{},"body":{"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["self",{"_index":423,"title":{},"body":{"components/FormControlEntityComponent.html":{}}}],["sequence",{"_index":327,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["server",{"_index":1372,"title":{},"body":{"index.html":{}}}],["service",{"_index":35,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FtxFormsComponent.html":{}}}],["service/zone",{"_index":766,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["services/stepper.service",{"_index":668,"title":{},"body":{"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["set",{"_index":340,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["setbooktype",{"_index":169,"title":{"interfaces/SetBookType.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seterrorcontrol(control",{"_index":330,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["setjsondata(jsondata",{"_index":477,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["setngxformgroupvalues(val",{"_index":728,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["shadow",{"_index":557,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["shared",{"_index":416,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/StepperComponent.html":{}}}],["shared'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["shared.component.html",{"_index":513,"title":{},"body":{"components/FtxSivanSharedComponent.html":{}}}],["shared.component.scss",{"_index":512,"title":{},"body":{"components/FtxSivanSharedComponent.html":{}}}],["shared.component.ts",{"_index":511,"title":{},"body":{"components/FtxSivanSharedComponent.html":{},"coverage.html":{}}}],["shared/ftx",{"_index":510,"title":{},"body":{"components/FtxSivanSharedComponent.html":{},"coverage.html":{}}}],["shared/src/lib/directive/scroll",{"_index":970,"title":{},"body":{"directives/ScrollHintDirective.html":{},"coverage.html":{}}}],["shared/src/lib/ftx",{"_index":509,"title":{},"body":{"components/FtxSivanSharedComponent.html":{},"coverage.html":{}}}],["sharereplay",{"_index":904,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["side",{"_index":15,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"components/FormLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["sivan",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["sivanscrollhint",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["solid",{"_index":549,"title":{},"body":{"components/FtxTooltipComponent.html":{},"components/StepperStepsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{}}}],["spend",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["spendmoney",{"_index":153,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["spendmoneycomponent",{"_index":115,"title":{"components/SpendMoneyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.component.stories.ts",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../info",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../intro.component.stories.ts",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock.ts",{"_index":1364,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../reserve",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reserve.actions.ts",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reserve.reducer.ts",{"_index":1366,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../reserve.selectors.ts",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../spend",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepper",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepper.actions.ts",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepper.component.stories.ts",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepper.reducer.ts",{"_index":1367,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../stepper.selectors.ts",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/+state/mock.ts",{"_index":196,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/reserve/reserve.actions.ts",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/reserve/reserve.effects.ts",{"_index":916,"title":{},"body":{"injectables/ReserveEffects.html":{},"coverage.html":{}}}],["src/app/+state/reserve/reserve.effects.ts:10",{"_index":929,"title":{},"body":{"injectables/ReserveEffects.html":{}}}],["src/app/+state/reserve/reserve.effects.ts:8",{"_index":920,"title":{},"body":{"injectables/ReserveEffects.html":{}}}],["src/app/+state/reserve/reserve.models.ts",{"_index":936,"title":{},"body":{"interfaces/ReserveEntity.html":{},"coverage.html":{}}}],["src/app/+state/reserve/reserve.reducer.ts",{"_index":939,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/reserve/reserve.selectors.ts",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/stepper.actions.ts",{"_index":1299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/stepper.effects.ts",{"_index":1050,"title":{},"body":{"injectables/StepperEffects.html":{},"coverage.html":{}}}],["src/app/+state/stepper.effects.ts:10",{"_index":1055,"title":{},"body":{"injectables/StepperEffects.html":{}}}],["src/app/+state/stepper.effects.ts:8",{"_index":1051,"title":{},"body":{"injectables/StepperEffects.html":{}}}],["src/app/+state/stepper.models.ts",{"_index":135,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{},"coverage.html":{}}}],["src/app/+state/stepper.reducer.ts",{"_index":1059,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/+state/stepper.selectors.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.stories.ts",{"_index":1311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contentsteps/infouser/info",{"_index":652,"title":{},"body":{"components/InfoUserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contentsteps/intro/intro.component.stories.ts",{"_index":1317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contentsteps/intro/intro.component.ts",{"_index":706,"title":{},"body":{"components/IntroComponent.html":{},"coverage.html":{}}}],["src/app/components/contentsteps/reservebook/reserve",{"_index":811,"title":{},"body":{"components/ReserveBookComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contentsteps/spendmoney/spend",{"_index":1038,"title":{},"body":{"components/SpendMoneyComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/services/stepper.service.ts",{"_index":1073,"title":{},"body":{"injectables/StepperService.html":{},"coverage.html":{}}}],["src/app/components/services/stepper.service.ts:140",{"_index":1099,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:154",{"_index":1089,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:167",{"_index":1108,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:175",{"_index":1111,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:182",{"_index":1080,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:26",{"_index":1084,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:32",{"_index":1082,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:37",{"_index":1091,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/services/stepper.service.ts:42",{"_index":1105,"title":{},"body":{"injectables/StepperService.html":{}}}],["src/app/components/stepper",{"_index":1120,"title":{},"body":{"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stepper/stepper.component.stories.ts",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stepper/stepper.component.ts",{"_index":1042,"title":{},"body":{"components/StepperComponent.html":{},"coverage.html":{}}}],["src/app/components/stepper/stepper.component.ts:28",{"_index":1046,"title":{},"body":{"components/StepperComponent.html":{}}}],["ss",{"_index":881,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["sss",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":42,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["start",{"_index":162,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1370,"title":{"index.html":{}},"body":{}}],["state",{"_index":293,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state('void",{"_index":699,"title":{},"body":{"components/InputComponent.html":{}}}],["state.entities",{"_index":967,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.loaded",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.selectedid",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.stepper.entities.steps",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/stepper.models",{"_index":1115,"title":{},"body":{"injectables/StepperService.html":{}}}],["statements",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":247,"title":{"interfaces/Step.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperStepsComponent.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["step.findindex((v",{"_index":1151,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["stepper",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["stepper.actions",{"_index":1057,"title":{},"body":{"injectables/StepperEffects.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["stepper.component.html",{"_index":1045,"title":{},"body":{"components/StepperComponent.html":{}}}],["stepper.component.scss",{"_index":1044,"title":{},"body":{"components/StepperComponent.html":{}}}],["stepper.models",{"_index":1063,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["stepper_feature_key",{"_index":1060,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepperactions",{"_index":1056,"title":{},"body":{"injectables/StepperEffects.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{}}}],["stepperadapter",{"_index":1065,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepperadapter.getinitialstate",{"_index":1067,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["stepperadapter.getselectors",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stepperadapter.setall(stepper",{"_index":1070,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["steppercomponent",{"_index":118,"title":{"components/StepperComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["steppereffects",{"_index":1049,"title":{"injectables/StepperEffects.html":{}},"body":{"injectables/StepperEffects.html":{},"coverage.html":{}}}],["stepperentity",{"_index":140,"title":{"interfaces/StepperEntity.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepperform",{"_index":1079,"title":{},"body":{"injectables/StepperService.html":{}}}],["stepperpartialstate",{"_index":1058,"title":{"interfaces/StepperPartialState.html":{}},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{}}}],["stepperreducer",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stepperreducer(state",{"_index":1072,"title":{},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/functions.html":{}}}],["stepperservice",{"_index":667,"title":{"injectables/StepperService.html":{}},"body":{"components/InfoUserComponent.html":{},"components/ReserveBookComponent.html":{},"components/StepperComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stepperservice.flagurl$.next(url",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stepperstate",{"_index":1061,"title":{"interfaces/StepperState.html":{}},"body":{"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stepperstepscomponent",{"_index":119,"title":{"components/StepperStepsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["steppervalues",{"_index":172,"title":{"interfaces/StepperValues.html":{}},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{},"coverage.html":{}}}],["steppform",{"_index":1076,"title":{},"body":{"injectables/StepperService.html":{}}}],["steps",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"interfaces/StepperEntity.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["steps.component",{"_index":1048,"title":{},"body":{"components/StepperComponent.html":{}}}],["steps.component.html",{"_index":1126,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.scss",{"_index":1125,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.stories.ts",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["steps.component.ts",{"_index":1121,"title":{},"body":{"components/StepperStepsComponent.html":{},"coverage.html":{}}}],["steps.component.ts:52",{"_index":1140,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:53",{"_index":1138,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:54",{"_index":1141,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:55",{"_index":1143,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:56",{"_index":1142,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:57",{"_index":1145,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:58",{"_index":1135,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:59",{"_index":1134,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:60",{"_index":1133,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:61",{"_index":1132,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:62",{"_index":1136,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps.component.ts:78",{"_index":1137,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["steps/stepper",{"_index":1047,"title":{},"body":{"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":905,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"dependencies.html":{}}}],["story",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":785,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["street",{"_index":863,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["streetivan",{"_index":864,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InputComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(control.value).length",{"_index":1191,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["strings",{"_index":252,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{}}}],["structure",{"_index":1392,"title":{},"body":{"index.html":{}}}],["style",{"_index":335,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{}}}],["styles",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["styleurls",{"_index":47,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["subbook",{"_index":138,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/Label.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperValues.html":{}}}],["subject",{"_index":988,"title":{},"body":{"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["submission",{"_index":914,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["submit",{"_index":499,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["submitevent",{"_index":463,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["subscribe",{"_index":835,"title":{},"body":{"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["subscriptions",{"_index":226,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["subscriptsizing",{"_index":682,"title":{},"body":{"components/InputComponent.html":{}}}],["success",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sumbook",{"_index":170,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":854,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["switchmap",{"_index":924,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["switchmap((step",{"_index":1150,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["t",{"_index":304,"title":{},"body":{"directives/FadeInOutDirective.html":{},"injectables/GenerativeService.html":{}}}],["table",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":880,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["takeuntil",{"_index":998,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["takeuntil(this._destroyed",{"_index":1160,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["takeuntil(this.destroyed",{"_index":1035,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["tap",{"_index":831,"title":{},"body":{"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["tap((contentelement",{"_index":1006,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["tap((url",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap((value",{"_index":1158,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["tap((values",{"_index":829,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["target",{"_index":1222,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["target.getboundingclientrect",{"_index":1233,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["targetelement",{"_index":769,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["template",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":45,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["tesadsdasd",{"_index":531,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["test",{"_index":874,"title":{},"body":{"components/ReserveBookComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["testa",{"_index":848,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["testusage",{"_index":1383,"title":{},"body":{"index.html":{}}}],["tete",{"_index":195,"title":{},"body":{"components/ButtonComponent.html":{},"components/FtxFormsComponent.html":{}}}],["text",{"_index":16,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/variables.html":{}}}],["then((c",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._animationbuilder.build",{"_index":345,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this._destroyed$.complete",{"_index":1162,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this._destroyed$.next(true",{"_index":1161,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this._elementref.nativeelement",{"_index":357,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this._fb.array",{"_index":633,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/StepperService.html":{}}}],["this._fb.control(0",{"_index":1104,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._fb.control(data.value",{"_index":642,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this._fb.control(false",{"_index":1102,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._fb.control(item.value",{"_index":637,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this._fb.control(true",{"_index":1103,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._fb.group",{"_index":1101,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._fb.group(group",{"_index":638,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this._jsondata",{"_index":481,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["this._router.navigate([value.value",{"_index":1159,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this._stepperservice.addroleofmember",{"_index":672,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["this._stepperservice.flagurl$.next('reservebook",{"_index":834,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this._stepperservice.formvalues",{"_index":665,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["this._stepperservice.stepperform",{"_index":662,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["this._stepperservice.steppform.controls.reservebook.controls.check.patchvalue",{"_index":832,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this._stepperstore.dispatch(formvaluechange(values",{"_index":1097,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._stepperstore.dispatch(formvaluechangereserve(values",{"_index":830,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this._stepperstore.select(selectreserveentities",{"_index":836,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this._stepperstore.select(selectstepperentities",{"_index":1098,"title":{},"body":{"injectables/StepperService.html":{}}}],["this._store.select(selectstepsentities",{"_index":1144,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this._validatorservice.validatorgenerators",{"_index":622,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.actions$.pipe",{"_index":922,"title":{},"body":{"injectables/ReserveEffects.html":{},"injectables/StepperEffects.html":{}}}],["this.animationplayer",{"_index":355,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this.animationplayer.destroy",{"_index":356,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this.animationplayer.play",{"_index":359,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this.buildformgenerate(item",{"_index":632,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.buildformgenerate(jsondata",{"_index":614,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.buildformgenerate(subitem",{"_index":635,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.buttonrect",{"_index":1232,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["this.calculatepositionrecursively",{"_index":1234,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory",{"_index":775,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref",{"_index":776,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.changedetectorref.detectchanges",{"_index":798,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.destroy",{"_index":810,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.instance.renderertemplate",{"_index":778,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.instance.text",{"_index":780,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.location.nativeelement",{"_index":788,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.location.nativeelement.style.left",{"_index":806,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.location.nativeelement.style.position",{"_index":797,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.location.nativeelement.style.top",{"_index":802,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.componentref.location.nativeelement.style.zindex",{"_index":808,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.controlmapping[c.label",{"_index":496,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["this.controlmapping[label",{"_index":487,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["this.destroyed$.complete",{"_index":1037,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.destroyed$.next(true",{"_index":1036,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.dynamicform",{"_index":909,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this.dynamicform.valid",{"_index":833,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this.dynamicform.valuechanges",{"_index":826,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this.element",{"_index":779,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.elementref.nativeelement",{"_index":768,"title":{},"body":{"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{}}}],["this.elementtext",{"_index":781,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.emailvalidator(control",{"_index":1210,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["this.extractvalidator(data",{"_index":641,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.extractvalidator(item",{"_index":636,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.flagurl$.value",{"_index":1153,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this.flagurl$]).pipe",{"_index":1086,"title":{},"body":{"injectables/StepperService.html":{}}}],["this.formgroup.patchvalue(val",{"_index":731,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["this.formvalue",{"_index":1116,"title":{},"body":{"injectables/StepperService.html":{}}}],["this.generateformbuilderservice.buildformfromjson",{"_index":910,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this.getvalidator(validatorconfig",{"_index":618,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["this.jsondata",{"_index":911,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["this.mincharvalidator(control",{"_index":1208,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["this.minvalidator(control",{"_index":1206,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["this.patternvalidator(control",{"_index":1209,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["this.playanimation",{"_index":343,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["this.pseudoelement",{"_index":999,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.renderer2",{"_index":800,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["this.renderer2.addclass(arrowfct",{"_index":1247,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["this.renderer2.addclass(this.pseudoelement",{"_index":1001,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.renderer2.appendchild",{"_index":1003,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.renderer2.createelement('div",{"_index":1000,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.renderer2.setstyle",{"_index":1023,"title":{},"body":{"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{}}}],["this.renderer2.setstyle(this.pseudoelement",{"_index":1020,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["this.requiredvalidator(control",{"_index":1204,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["this.stepperform.controls.infouser.controls.info.controls.roleofmember.push",{"_index":1119,"title":{},"body":{"injectables/StepperService.html":{}}}],["this.stepperform.valuechanges",{"_index":1096,"title":{},"body":{"injectables/StepperService.html":{}}}],["this.steppform",{"_index":1117,"title":{},"body":{"injectables/StepperService.html":{}}}],["this.steps",{"_index":1149,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["this.tooltip.children[0].children[0",{"_index":1236,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["this.tooltiprect",{"_index":1230,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":777,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["throw",{"_index":424,"title":{},"body":{"components/FormControlEntityComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{}}}],["title",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["tl",{"_index":503,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["toggle",{"_index":278,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{}}}],["toggledata",{"_index":400,"title":{},"body":{"components/FormControlEntityComponent.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":438,"title":{},"body":{"components/FormLabelComponent.html":{},"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"components/StepperStepsComponent.html":{},"injectables/ZoneAxeService.html":{}}}],["tooltip'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["tooltip.component",{"_index":764,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["tooltip.component.html",{"_index":521,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":520,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["tooltip.component.stories.ts",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooltip.component.ts",{"_index":517,"title":{},"body":{"components/FtxTooltipComponent.html":{},"coverage.html":{}}}],["tooltip.component.ts:20",{"_index":524,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["tooltip.component.ts:22",{"_index":528,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["tooltip.component.ts:25",{"_index":525,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["tooltip.getboundingclientrect",{"_index":1231,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["tooltip/.../ftx",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltip/directive/render",{"_index":733,"title":{},"body":{"directives/RenderYouDirective.html":{},"coverage.html":{}}}],["tooltip/ftx",{"_index":516,"title":{},"body":{"components/FtxTooltipComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooltip/service/zone",{"_index":1215,"title":{},"body":{"injectables/ZoneAxeService.html":{},"coverage.html":{}}}],["tooltip/src/lib/ftx",{"_index":515,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooltiprect",{"_index":1218,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["tooltiprect.height",{"_index":1243,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["tooltiprect.width",{"_index":1245,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["top",{"_index":547,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/RenderYouDirective.html":{},"directives/ScrollHintDirective.html":{},"injectables/ZoneAxeService.html":{},"miscellaneous/typealiases.html":{}}}],["topposition",{"_index":1019,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["tr",{"_index":505,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["trackby",{"_index":646,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["trackby(index",{"_index":647,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["tracking",{"_index":1094,"title":{},"body":{"injectables/StepperService.html":{}}}],["train",{"_index":894,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["transform",{"_index":347,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxTooltipComponent.html":{},"components/InputComponent.html":{}}}],["transition",{"_index":370,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/InputComponent.html":{}}}],["transition('void",{"_index":702,"title":{},"body":{"components/InputComponent.html":{}}}],["translatex",{"_index":534,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["translatex($translatex",{"_index":538,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["translatey",{"_index":348,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["tree",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["trigger",{"_index":307,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/InputComponent.html":{}}}],["trigger('widthopacityanimation",{"_index":698,"title":{},"body":{"components/InputComponent.html":{}}}],["triggering",{"_index":333,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["true",{"_index":43,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"interfaces/Modals.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"components/SpendMoneyComponent.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"injectables/ValidatorService.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["tw",{"_index":1033,"title":{},"body":{"directives/ScrollHintDirective.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/ReserveEntity.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"interfaces/StepperPartialState.html":{},"injectables/StepperService.html":{},"interfaces/StepperState.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1408,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typebadge",{"_index":30,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["typebutton",{"_index":182,"title":{},"body":{"components/ButtonComponent.html":{}}}],["typeconstantenum",{"_index":274,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/enumerations.html":{}}}],["typeconstantenum.email",{"_index":846,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["typeconstantenum.min",{"_index":871,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["typeconstantenum.min_char",{"_index":883,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["typeconstantenum.pattern",{"_index":850,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["typeconstantenum.required",{"_index":841,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["typeinput",{"_index":268,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/InputComponent.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1205,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["typepattern",{"_index":275,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"miscellaneous/enumerations.html":{}}}],["typepattern.only_char",{"_index":875,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["typepattern.only_number",{"_index":851,"title":{},"body":{"components/ReserveBookComponent.html":{}}}],["types",{"_index":1213,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["typescript",{"_index":649,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["typeside",{"_index":21,"title":{},"body":{"interfaces/ActionBadge.html":{},"components/FormBadgeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":185,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FadeInOutDirective.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":37,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"components/InputComponent.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{}}}],["unused",{"_index":225,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"injectables/GenerativeService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":965,"title":{},"body":{"interfaces/ReservePartialState.html":{},"interfaces/ReserveState.html":{},"interfaces/StepperPartialState.html":{},"interfaces/StepperState.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1093,"title":{},"body":{"injectables/StepperService.html":{}}}],["usd",{"_index":235,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":619,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["used",{"_index":316,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["useexisting",{"_index":715,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["user",{"_index":245,"title":{},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["user.component').then",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.component.html",{"_index":655,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["user.component.scss",{"_index":654,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["user.component.stories.ts",{"_index":1316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.component.ts",{"_index":653,"title":{},"body":{"components/InfoUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:29",{"_index":661,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["user.component.ts:30",{"_index":666,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["user.component.ts:31",{"_index":663,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["user.component.ts:33",{"_index":659,"title":{},"body":{"components/InfoUserComponent.html":{}}}],["usevalue",{"_index":680,"title":{},"body":{"components/InputComponent.html":{}}}],["using",{"_index":329,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/ReserveBookComponent.html":{},"injectables/StepperService.html":{}}}],["utils",{"_index":31,"title":{},"body":{"interfaces/ActionBadge.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/FormBadgeComponent.html":{},"interfaces/ValidatorConfig.html":{},"injectables/ValidatorService.html":{},"interfaces/ValueToggle.html":{}}}],["v.index",{"_index":1157,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["v.step.length",{"_index":1156,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["v.step[v.index",{"_index":1155,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["v.url.split('/')[1",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v.value",{"_index":1152,"title":{},"body":{"components/StepperStepsComponent.html":{}}}],["val",{"_index":729,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["valid",{"_index":342,"title":{},"body":{"directives/FadeInOutDirective.html":{}}}],["validator",{"_index":626,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{}}}],["validator.service",{"_index":611,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["validatorconfig",{"_index":272,"title":{"interfaces/ValidatorConfig.html":{}},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{}}}],["validatorfn",{"_index":598,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["validatorgenerator",{"_index":621,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{},"miscellaneous/typealiases.html":{}}}],["validatorgenerator[type",{"_index":623,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{}}}],["validatorgenerators",{"_index":620,"title":{},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{}}}],["validators",{"_index":269,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"injectables/GenerateFormBuilderService.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{}}}],["validatorservice",{"_index":610,"title":{"injectables/ValidatorService.html":{}},"body":{"injectables/GenerateFormBuilderService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["value",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BookDetail.html":{},"components/ButtonComponent.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"directives/FadeInOutDirective.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"components/FtxTooltipComponent.html":{},"injectables/GenerateFormBuilderService.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"directives/PatchFormGroupValueDirective.html":{},"interfaces/Recommendation.html":{},"directives/RenderYouDirective.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"injectables/ReserveEffects.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"directives/ScrollHintDirective.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"components/StepperComponent.html":{},"injectables/StepperEffects.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.directive.ts",{"_index":724,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{},"coverage.html":{}}}],["value.directive.ts:11",{"_index":727,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["value.directive.ts:9",{"_index":726,"title":{},"body":{"directives/PatchFormGroupValueDirective.html":{}}}],["values",{"_index":145,"title":{},"body":{"interfaces/BookDetail.html":{},"interfaces/CategorySpendMoney.html":{},"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/FormStepper.html":{},"components/FtxFormsComponent.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Label.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"components/ReserveBookComponent.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/StepperEntity.html":{},"injectables/StepperService.html":{},"interfaces/StepperValues.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"miscellaneous/variables.html":{}}}],["values.bulkvalues",{"_index":494,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["values.bulkvalues.foreach((c",{"_index":495,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["values.label?.tolowercase",{"_index":498,"title":{},"body":{"components/FtxFormsComponent.html":{}}}],["valuesclass",{"_index":257,"title":{"interfaces/ValuesClass.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{}}}],["valuescombined",{"_index":1087,"title":{},"body":{"injectables/StepperService.html":{}}}],["valuesvalue",{"_index":259,"title":{"interfaces/ValuesValue.html":{}},"body":{"interfaces/CategorySpendMoney.html":{},"interfaces/FormStepper.html":{},"interfaces/Graph.html":{},"interfaces/GraphValue.html":{},"interfaces/Info.html":{},"interfaces/InfoUser.html":{},"interfaces/Modals.html":{},"interfaces/Recommendation.html":{},"interfaces/Reserve.html":{},"interfaces/RoleOfMember.html":{},"interfaces/Scope.html":{},"interfaces/SetBookType.html":{},"interfaces/Step.html":{},"interfaces/ValuesClass.html":{},"interfaces/ValuesValue.html":{},"coverage.html":{}}}],["valuetoggle",{"_index":273,"title":{"interfaces/ValueToggle.html":{}},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{},"coverage.html":{}}}],["valuetoggleshow",{"_index":270,"title":{},"body":{"interfaces/DataFormBuilder.html":{},"interfaces/DescriptionEntity.html":{},"components/ReserveBookComponent.html":{},"interfaces/ValidatorConfig.html":{},"interfaces/ValueToggle.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/FormBadgeComponent.html":{},"components/FormControlEntityComponent.html":{},"components/FormLabelComponent.html":{},"components/FtxFormsComponent.html":{},"components/FtxSivanSharedComponent.html":{},"components/FtxTooltipComponent.html":{},"components/InfoUserComponent.html":{},"components/InputComponent.html":{},"components/IntroComponent.html":{},"components/ReserveBookComponent.html":{},"components/SpendMoneyComponent.html":{},"components/StepperComponent.html":{},"components/StepperStepsComponent.html":{}}}],["variable",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1418,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":651,"title":{},"body":{"injectables/GenerativeService.html":{}}}],["version",{"_index":1404,"title":{},"body":{"properties.html":{}}}],["viewcontainerref",{"_index":738,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["viewencapsulation",{"_index":530,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["viewencapsulation.none",{"_index":519,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["vm",{"_index":657,"title":{},"body":{"components/InfoUserComponent.html":{},"components/StepperStepsComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":311,"title":{},"body":{"directives/FadeInOutDirective.html":{},"components/FtxFormsComponent.html":{},"components/InfoUserComponent.html":{},"directives/PapControlDirective.html":{},"directives/PatchFormGroupValueDirective.html":{},"directives/RenderYouDirective.html":{},"components/ReserveBookComponent.html":{},"directives/ScrollHintDirective.html":{},"injectables/StepperService.html":{},"components/StepperStepsComponent.html":{}}}],["w",{"_index":381,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/StepperStepsComponent.html":{}}}],["warning",{"_index":1416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["white",{"_index":545,"title":{},"body":{"components/FtxTooltipComponent.html":{}}}],["width",{"_index":540,"title":{},"body":{"components/FtxTooltipComponent.html":{},"directives/ScrollHintDirective.html":{}}}],["window.innerwidth",{"_index":1248,"title":{},"body":{"injectables/ZoneAxeService.html":{}}}],["withenabledblockinginitialnavigation",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workback",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":514,"title":{},"body":{"components/FtxSivanSharedComponent.html":{},"components/IntroComponent.html":{},"components/SpendMoneyComponent.html":{}}}],["wrapper",{"_index":375,"title":{},"body":{"components/FormBadgeComponent.html":{},"components/FtxFormsComponent.html":{}}}],["writevalue",{"_index":719,"title":{},"body":{"directives/PapControlDirective.html":{}}}],["yes",{"_index":856,"title":{},"body":{"components/ReserveBookComponent.html":{},"injectables/ValidatorService.html":{}}}],["you.directive.ts",{"_index":734,"title":{},"body":{"directives/RenderYouDirective.html":{},"coverage.html":{}}}],["you.directive.ts:20",{"_index":745,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:22",{"_index":746,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:23",{"_index":758,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:24",{"_index":760,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:26",{"_index":756,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:27",{"_index":762,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:28",{"_index":757,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:30",{"_index":749,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["you.directive.ts:82",{"_index":750,"title":{},"body":{"directives/RenderYouDirective.html":{}}}],["yourformcomponent",{"_index":1386,"title":{},"body":{"index.html":{}}}],["z",{"_index":1021,"title":{},"body":{"directives/ScrollHintDirective.html":{},"components/StepperStepsComponent.html":{}}}],["z0",{"_index":1198,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["z\\s",{"_index":1362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["z]{2",{"_index":1201,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["za",{"_index":1197,"title":{},"body":{"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{}}}],["zero",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zone.js",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["zoneaxeservice",{"_index":765,"title":{"injectables/ZoneAxeService.html":{}},"body":{"directives/RenderYouDirective.html":{},"injectables/ZoneAxeService.html":{},"coverage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionBadge.html":{"url":"interfaces/ActionBadge.html","title":"interface - ActionBadge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionBadge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:         TypeSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeSide\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypeBadge, TypeSide } from '../../utils';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GenerativeService } from '../../service';\n\nexport interface ActionBadge {\n  side: TypeSide;\n  action: () => unknown;\n  icon?: string;\n  text: string;\n}\n@Component({\n  selector: 'ngx-form-badge',\n  standalone: true,\n  imports: [CommonModule, MatIconModule],\n  templateUrl: './form-badge.component.html',\n  styleUrls: ['./form-badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormBadgeComponent {\n  protected readonly _generativeService = inject(GenerativeService);\n\n  /**\n   * Type of badge\n   */\n  @Input()\n  typeBadge: TypeBadge = 'error';\n\n  /**\n   * Action\n   */\n  @Input()\n  actionBadge: ActionBadge[] = [\n    { side: 'middle', action: () => console.log('TEST'), text: 'Nothig' },\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'coagulu'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  standalone: true,\n  imports: [RouterModule],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = 'coagulu';\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookDetail.html":{"url":"interfaces/BookDetail.html","title":"interface - BookDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subBook\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subBook:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepperEntity {\n  steps: Array;\n  intro: {\n    icon: string;\n    check: boolean;\n    id: string;\n    values: Label[] | null;\n  };\n  infoUser: {\n    check: boolean;\n    icon: string;\n    id: string;\n    values: {\n      familyNumber: number;\n      roleOfMember: {\n        id: string;\n        value: string;\n        check: boolean;\n      }[];\n      childrens: number;\n    };\n  };\n  spendMoney: {\n    id: string;\n    icon: string;\n    check: boolean;\n    values: {\n      incoming: number;\n      spendMoney: number;\n      revenue: number;\n      categorySpendMoney: {\n        id: string;\n        value: number;\n        label: string;\n        scope: {\n          id: string;\n          label: string;\n          check: boolean;\n        }[];\n      }[];\n      recommendations: {\n        check: boolean;\n        label: string;\n      }[];\n    };\n  };\n  // Exteotera graph\n  reserveBook: {\n    icon: string;\n    id: string;\n    check: boolean;\n    values: {\n      id: string;\n      graph: {\n        id: string;\n        values: {\n          id: string;\n          label: string;\n          start: number;\n          end: number;\n        }[];\n        howMannyMonth: number;\n      };\n      reserve: {\n        id: string;\n        currentReserve: Label;\n        recommendationReserve: Label;\n        howMannyMonth: number;\n      };\n      details: {\n        id: string;\n        check: boolean;\n        values: BookDetail[];\n      };\n      modals: {\n        setBookType: Label;\n        sumBook: Label;\n      };\n    };\n  };\n}\n\nexport interface Label {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface StepperValues {\n  id: string;\n  values: string;\n  check: boolean;\n  icon: string;\n}\n\nexport interface BookDetail {\n  id: string;\n  name: string;\n  author: string;\n  subBook?: {\n    label: Label;\n    edit: boolean;\n    delete: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-button-component\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatButtonModule\n                \n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disable\n                            \n                            \n                                roundedFull\n                            \n                            \n                                typeButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                marian\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disable\n                    \n                \n                \n                    \n                        Type :     boolean | undefined | null\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        roundedFull\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typeButton\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        marian\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@Component({\n  selector: 'ngx-button-component',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule],\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent {\n  @Output() marian = new EventEmitter();\n  @Input() public disable: boolean | undefined | null;\n  @Input() public roundedFull = '';\n  @Input() public typeButton = '';\n}\n\n    \n\n    \n        \n  \n\ntete\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  tete'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategorySpendMoney.html":{"url":"interfaces/CategorySpendMoney.html","title":"interface - CategorySpendMoney","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategorySpendMoney\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         Scope[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scope[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataFormBuilder.html":{"url":"interfaces/DataFormBuilder.html","title":"interface - DataFormBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataFormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bulkValues\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            labelHint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            typeInput\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            values\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            valueToggleShow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bulkValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bulkValues:         DataFormBuilder[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataFormBuilder[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         DescriptionEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DescriptionEntity\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelHint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelHint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeInput\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        typeInput:         TypeInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         ValidatorConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         DataFormBuilder[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataFormBuilder[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueToggleShow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueToggleShow:         ValueToggle[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueToggle[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeConstantEnum, TypePattern } from '../utils';\n\nexport interface ValidatorConfig {\n  type: TypeConstantEnum;\n  option?: TypePattern | number;\n  errorMsg?: string;\n}\n\nexport interface ValueToggle {\n  value: boolean;\n  description: string;\n}\n\nexport interface DataFormBuilder {\n  label?: string;\n  labelHint?: string;\n  value?: unknown;\n  typeInput?: TypeInput;\n  values?: DataFormBuilder[];\n  bulkValues?: DataFormBuilder[];\n  valueToggleShow?: ValueToggle[];\n  validators?: ValidatorConfig[];\n  placeholder?: string;\n  description?: DescriptionEntity;\n}\n\nexport interface DescriptionEntity {\n  text: string;\n  icon?: string;\n}\nexport type TypeInput =\n  | 'boolean'\n  | 'toggle'\n  | 'area'\n  | 'currency'\n  | 'dropdown'\n  | 'date'\n  | 'date-interval';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DescriptionEntity.html":{"url":"interfaces/DescriptionEntity.html","title":"interface - DescriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DescriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeConstantEnum, TypePattern } from '../utils';\n\nexport interface ValidatorConfig {\n  type: TypeConstantEnum;\n  option?: TypePattern | number;\n  errorMsg?: string;\n}\n\nexport interface ValueToggle {\n  value: boolean;\n  description: string;\n}\n\nexport interface DataFormBuilder {\n  label?: string;\n  labelHint?: string;\n  value?: unknown;\n  typeInput?: TypeInput;\n  values?: DataFormBuilder[];\n  bulkValues?: DataFormBuilder[];\n  valueToggleShow?: ValueToggle[];\n  validators?: ValidatorConfig[];\n  placeholder?: string;\n  description?: DescriptionEntity;\n}\n\nexport interface DescriptionEntity {\n  text: string;\n  icon?: string;\n}\nexport type TypeInput =\n  | 'boolean'\n  | 'toggle'\n  | 'area'\n  | 'currency'\n  | 'dropdown'\n  | 'date'\n  | 'date-interval';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FadeInOutDirective.html":{"url":"directives/FadeInOutDirective.html","title":"directive - FadeInOutDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FadeInOutDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that applies a fade-in/out animation based on the provided input control's state.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxFadeInOut]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n                    \n                        exportAs\n                        ngxFadeInOut\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _animationBuilder\n                            \n                            \n                                    Private\n                                    Readonly\n                                _elementRef\n                            \n                            \n                                    Private\n                                animationPlayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                playAnimation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxFadeInOut\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxFadeInOut\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:38\n                            \n                        \n                \n                    \n                        Binds the input control's value to trigger the fade-in/out animation.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        playAnimation\n                        \n                    \n                \n            \n            \n                \nplayAnimation()\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:47\n                \n            \n\n\n            \n                \n                    Plays the fade-in/out animation on the element.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _animationBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AnimationBuilder)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:27\n                        \n                    \n\n            \n                \n                    The AnimationBuilder instance used to create animations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:22\n                        \n                    \n\n            \n                \n                    The ElementRef of the element on which the animation will be applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animationPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationPlayer | undefined\n\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:32\n                        \n                    \n\n            \n                \n                    Provides programmatic control of a reusable animation sequence, built using the\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorControl\n                    \n                \n\n\n                \n                    \n                        seterrorControl(control: T)\n                    \n                \n                            \n                                \n                                    Defined in ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts:38\n                                \n                            \n                    \n                        \n                                Binds the input control's value to trigger the fade-in/out animation.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            control\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The input control (form control or boolean value) to monitor for animation triggering.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, inject, Input } from '@angular/core';\nimport {\n  animate,\n  AnimationBuilder,\n  AnimationPlayer,\n  style,\n} from '@angular/animations';\n\n/**\n * A directive that applies a fade-in/out animation based on the provided input control's state.\n */\n@Directive({\n  selector: '[ngxFadeInOut]',\n  standalone: true,\n  exportAs: 'ngxFadeInOut', // Expose the directive instance,\n})\nexport class FadeInOutDirective {\n  /**\n   * The ElementRef of the element on which the animation will be applied.\n   * @private\n   */\n  private readonly _elementRef = inject(ElementRef);\n  /**\n   * The AnimationBuilder instance used to create animations.\n   * @private\n   */\n  private readonly _animationBuilder = inject(AnimationBuilder);\n  /**\n   * Provides programmatic control of a reusable animation sequence, built using the\n   * @private\n   */\n  private animationPlayer: AnimationPlayer | undefined;\n\n  /**\n   * Binds the input control's value to trigger the fade-in/out animation.\n   * @param control The input control (form control or boolean value) to monitor for animation triggering.\n   */\n  @Input('ngxFadeInOut') set errorControl(control: T) {\n    if (control !== 'VALID' || !control) {\n      this.playAnimation();\n    }\n  }\n\n  /**\n   * Plays the fade-in/out animation on the element.\n   */\n  playAnimation(): void {\n    const animationFactory = this._animationBuilder.build([\n      style({\n        opacity: 0,\n        transform: 'translateY(-5px)',\n      }),\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]);\n    if (this.animationPlayer) {\n      this.animationPlayer.destroy();\n    }\n    const element = this._elementRef.nativeElement;\n    this.animationPlayer = animationFactory.create(element);\n    this.animationPlayer.play();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBadgeComponent.html":{"url":"components/FormBadgeComponent.html","title":"component - FormBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-badge\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                \n            \n\n            \n                styleUrls\n                ./form-badge.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-badge.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                _generativeService\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionBadge\n                            \n                            \n                                typeBadge\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionBadge\n                    \n                \n                \n                    \n                        Type :         ActionBadge[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { side: 'middle', action: () => console.log('TEST'), text: 'Nothig' },\n  ]\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts:39\n                            \n                        \n                \n                    \n                        Action\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        typeBadge\n                    \n                \n                \n                    \n                        Type :         TypeBadge\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts:33\n                            \n                        \n                \n                    \n                        Type of badge\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _generativeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GenerativeService)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypeBadge, TypeSide } from '../../utils';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GenerativeService } from '../../service';\n\nexport interface ActionBadge {\n  side: TypeSide;\n  action: () => unknown;\n  icon?: string;\n  text: string;\n}\n@Component({\n  selector: 'ngx-form-badge',\n  standalone: true,\n  imports: [CommonModule, MatIconModule],\n  templateUrl: './form-badge.component.html',\n  styleUrls: ['./form-badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormBadgeComponent {\n  protected readonly _generativeService = inject(GenerativeService);\n\n  /**\n   * Type of badge\n   */\n  @Input()\n  typeBadge: TypeBadge = 'error';\n\n  /**\n   * Action\n   */\n  @Input()\n  actionBadge: ActionBadge[] = [\n    { side: 'middle', action: () => console.log('TEST'), text: 'Nothig' },\n  ];\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        {{ badge.text }}\n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./form-badge.component.scss\n                \n                @mixin animation() {\n  @apply hover:opacity-90 hover:scale-[1.08] transition-all duration-200 ease-in-out;\n}\n:host {\n  .wrapper-badge {\n    @apply flex gap-2 items-center px-4 w-max;\n    @include animation();\n  }\n  ::ng-deep {\n    mat-icon {\n      @include animation();\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ badge.text }}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormControlEntityComponent.html":{"url":"components/FormControlEntityComponent.html","title":"component - FormControlEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormControlEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n                \n                    HostDirectives\n                    \n                                    PapControlDirective\n\n                    \n                \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-control-entity\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                InputComponent\n                            ReactiveFormsModule\n                            MatInputModule\n                                FadeInOutDirective\n                                FormLabelComponent\n                \n            \n\n            \n                styleUrls\n                ./form-control-entity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-control-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngControl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isFormArray\n                            \n                            \n                                label\n                            \n                            \n                                labelInput\n                            \n                            \n                                placeholderInput\n                            \n                            \n                                toggleData\n                            \n                            \n                                typeInput\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isFormArray\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:56\n                            \n                        \n                \n                    \n                        Label for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Complete label'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:51\n                            \n                        \n                \n                    \n                        Label for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:47\n                            \n                        \n                \n                    \n                        Placeholder for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleData\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : [{ value: false, description: 'default' }]\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:60\n                            \n                        \n                \n                    \n                        When input is radio button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        typeInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:43\n                            \n                        \n                \n                    \n                        Type of Input checkbox text\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControlDirective | FormControlName | NgModel | NgControl\n\n                    \n                \n                \n                    \n                        Default value : injectNgControl()\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControlDirective,\n  FormControlName,\n  FormsModule,\n  NgControl,\n  NgModel,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { InputComponent, PapControlDirective } from '../../shared';\nimport { MatInputModule } from '@angular/material/input';\nimport { FadeInOutDirective } from '../../directive/fade-in-out.directive';\nimport { FormLabelComponent } from '../formLabel/form-label.component';\n\n@Component({\n  selector: 'ngx-form-control-entity',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    InputComponent,\n    ReactiveFormsModule,\n    MatInputModule,\n    FadeInOutDirective,\n    FormLabelComponent,\n  ],\n  templateUrl: './form-control-entity.component.html',\n  styleUrls: ['./form-control-entity.component.scss'],\n  hostDirectives: [PapControlDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormControlEntityComponent {\n  @Input() label: string | undefined = '';\n  /**\n   * Type of Input checkbox text\n   */\n  @Input() typeInput? = 'text';\n  /**\n   * Placeholder for input\n   */\n  @Input() placeholderInput? = '';\n  /**\n   * Label for input\n   */\n  @Input() labelInput? = 'Complete label';\n\n  /**\n   * Label for input\n   */\n  @Input() isFormArray? = false;\n  /**\n   * When input is radio button\n   */\n  @Input() toggleData? = [{ value: false, description: 'default' }];\n  ngControl: FormControlDirective | FormControlName | NgModel | NgControl =\n    injectNgControl();\n}\n\nfunction injectNgControl() {\n  const ngControl = inject(NgControl, { self: true, optional: true });\n  if (!ngControl) {\n    throw new Error('Not ng Controll');\n  }\n  if (\n    ngControl instanceof FormControlDirective ||\n    ngControl instanceof FormControlName ||\n    ngControl instanceof NgModel\n  ) {\n    return ngControl;\n  }\n  throw new Error(`Not of instance of Form Directive Name Model`);\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      {{ labelInput }}\n    \n  \n\n\n    \n\n    \n                \n                    ./form-control-entity.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ labelInput }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormControlEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormLabelComponent.html":{"url":"components/FormLabelComponent.html","title":"component - FormLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-label\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                                FormBadgeComponent\n                                RenderYouDirective\n                \n            \n\n            \n                styleUrls\n                ./form-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionBadge\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionEntity\n                            \n                            \n                                haveTooltip\n                            \n                            \n                                isFormArray\n                            \n                            \n                                label\n                            \n                            \n                                labelInput\n                            \n                            \n                                typeInput\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        descriptionEntity\n                    \n                \n                \n                    \n                        Type :         DescriptionEntity\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:51\n                            \n                        \n                \n                    \n                        Description for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        haveTooltip\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:47\n                            \n                        \n                \n                    \n                        Message for tooltip\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFormArray\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:28\n                            \n                        \n                \n                    \n                        Is array form Input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:33\n                            \n                        \n                \n                    \n                        Label for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Complete label'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:43\n                            \n                        \n                \n                    \n                        Label for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        typeInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:38\n                            \n                        \n                \n                    \n                        Type of Input checkbox text\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionBadge\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n    {\n      icon: 'fa_solid:RO',\n      side: 'left',\n      action: () => console.log('ivan'),\n    },\n  ] as ActionBadge[]\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport {\n  ActionBadge,\n  FormBadgeComponent,\n} from '../formBadge/form-badge.component';\nimport { RenderYouDirective } from 'ngx-fts-tooltip';\nimport { DescriptionEntity } from '../../interfaces';\n\n@Component({\n  selector: 'ngx-form-label',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    FormBadgeComponent,\n    RenderYouDirective,\n  ],\n  templateUrl: './form-label.component.html',\n  styleUrls: ['./form-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormLabelComponent {\n  /**\n   * Is array form Input\n   */\n  @Input() isFormArray? = false;\n\n  /**\n   * Label for input\n   */\n  @Input() label: string | undefined = '';\n\n  /**\n   * Type of Input checkbox text\n   */\n  @Input() typeInput? = 'text';\n\n  /**\n   * Label for input\n   */\n  @Input() labelInput? = 'Complete label';\n  /**\n   * Message for tooltip\n   */\n  @Input() haveTooltip?: boolean;\n  /**\n   * Description for input\n   */\n  @Input() descriptionEntity?: DescriptionEntity;\n  actionBadge = [\n    {\n      icon: 'fa_solid:RO',\n      side: 'left',\n      action: () => console.log('ivan'),\n    },\n  ] as ActionBadge[];\n}\n\n    \n\n    \n        \n  \n    {{ label }}\n  \n\n  \n    \n  \n\n\n\n  \n    sdasdasd\n    dadasdssssssssssssssssasd\n    dasdasdasd\n    sdasdasd\n    sdasdasd\n  \n\n\n    \n\n    \n                \n                    ./form-label.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ label }}                sdasdasd    dadasdssssssssssssssssasd    dasdasdasd    sdasdasd    sdasdasd  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormStepper.html":{"url":"interfaces/FormStepper.html","title":"interface - FormStepper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormStepper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            infoUser\n                                        \n                                \n                                \n                                        \n                                            intro\n                                        \n                                \n                                \n                                        \n                                            reserveBook\n                                        \n                                \n                                \n                                        \n                                            spendMoney\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        infoUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        infoUser:         InfoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intro:         InfoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reserveBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reserveBook:         InfoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendMoney\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendMoney:         InfoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:         Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FtxFormsComponent.html":{"url":"components/FtxFormsComponent.html","title":"component - FtxFormsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FtxFormsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-ftx-forms\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                FormControlEntityComponent\n                                ButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./ftx-forms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ftx-forms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jsonData\n                            \n                            \n                                controlMapping\n                            \n                            \n                                generateFormBuilderService\n                            \n                            \n                                generativeService\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dynamicForm\n                            \n                            \n                                jsonData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submitEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    jsonData\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dynamicForm\n                    \n                \n                \n                    \n                        Type :     FormGroup | FormControl | FormArray | any\n\n                    \n                \n                \n                    \n                        Default value : {} as any\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        jsonData\n                    \n                \n                \n                    \n                        Type :         DataFormBuilder\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:50\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submitEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _jsonData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFormBuilder\n\n                    \n                \n                \n                    \n                        Default value : {} as DataFormBuilder\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFormBuilderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GenerateFormBuilderService)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generativeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GenerativeService)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        jsonData\n                    \n                \n\n                \n                    \n                        getjsonData()\n                    \n                \n                            \n                                \n                                    Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:46\n                                \n                            \n\n                \n                    \n                        setjsonData(jsonData)\n                    \n                \n                            \n                                \n                                    Defined in ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            jsonData\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { DataFormBuilder } from './interfaces';\nimport { FormControlEntityComponent } from './components';\nimport { ButtonComponent } from './shared';\nimport { GenerateFormBuilderService, GenerativeService } from './service';\n\n@Component({\n  selector: 'ngx-ftx-forms',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormControlEntityComponent,\n    ButtonComponent,\n  ],\n  templateUrl: './ftx-forms.component.html',\n  styleUrls: ['./ftx-forms.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FtxFormsComponent {\n  //eslint-disable-next-line\n  @Input() dynamicForm: FormGroup | FormControl | FormArray | any = {} as any;\n  @Output() submitEvent = new EventEmitter();\n\n  generativeService = inject(GenerativeService);\n  generateFormBuilderService = inject(GenerateFormBuilderService);\n\n  controlMapping: any = []; // eslint-disable-line\n\n  private _jsonData: DataFormBuilder = {} as DataFormBuilder;\n\n  get jsonData(): DataFormBuilder {\n    return this._jsonData;\n  }\n\n  @Input() set jsonData(jsonData) {\n    this._jsonData = jsonData;\n    if (jsonData.values) {\n      for (const item of jsonData.values) {\n        const label = item.label?.toLowerCase();\n\n        if (item?.label) {\n          this.controlMapping[label ?? ''] = item;\n        }\n\n        // Check for values or bulkValues and iterate over them\n        const itemsToMap = [...(item.values ?? []), ...(item.bulkValues ?? [])];\n        itemsToMap.forEach((values) => {\n          if (values.bulkValues) {\n            values.bulkValues.forEach((c) => {\n              this.controlMapping[c.label ?? ''] = c;\n            });\n          }\n          const label = values.label?.toLowerCase();\n          this.controlMapping[label ?? ''] = values;\n        });\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  Submit\n  \n\n\n\n  \n    \n    \n      \n        \n          \n        \n      \n    \n    \n    \n      \n        \n      \n    \n    \n    \n      \n        \n      \n    \n  \n\ntete\n\n    \n\n    \n                \n                    ./ftx-forms.component.scss\n                \n                form.ngx-forms-form-wrapper {\n  > div:first-child {\n    @apply rounded-tl-lg rounded-tr-lg;\n  }\n\n  > :last-child {\n    @apply rounded-bl-lg rounded-br-lg;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Submit                                                                                                                        tete'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FtxFormsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FtxSivanSharedComponent.html":{"url":"components/FtxSivanSharedComponent.html","title":"component - FtxSivanSharedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FtxSivanSharedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-sivan-shared/src/lib/ftx-sivan-shared/ftx-sivan-shared.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                coagulu-ftx-sivan-shared\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./ftx-sivan-shared.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ftx-sivan-shared.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'coagulu-ftx-sivan-shared',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ftx-sivan-shared.component.html',\n  styleUrls: ['./ftx-sivan-shared.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FtxSivanSharedComponent {}\n\n    \n\n    \n        ftx-sivan-shared works!\n\n    \n\n    \n                \n                    ./ftx-sivan-shared.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ftx-sivan-shared works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FtxSivanSharedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FtxTooltipComponent.html":{"url":"components/FtxTooltipComponent.html","title":"component - FtxTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FtxTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ftx-tooltip\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./ftx-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ftx-tooltip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rendererTemplate\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rendererTemplate\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(FtxTooltipComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ftx-tooltip',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ftx-tooltip.component.html',\n  styleUrls: ['./ftx-tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FtxTooltipComponent {\n  @Input() rendererTemplate: any; //eslint-disable-line\n\n  @ContentChild(FtxTooltipComponent) content: any; //eslint-disable-line\n\n  @Input()\n  public text = '';\n}\n\n    \n\n    \n        \n\n  \n  \n  \n    {{ text }}\n  \n  \n\n\n TESADSDASD \n\n    \n\n    \n                \n                    ./ftx-tooltip.component.scss\n                \n                @mixin arrowPosition($position, $deg, $left, $translateX) {\n  content: '';\n  position: absolute;\n  bottom: $position;\n  left: $left;\n  transform: translateX($translateX) rotate($deg);\n  width: 1.25rem;\n  height: 1.25rem;\n  background-color: white;\n  border-top: 0.0625rem solid rgba(0, 0, 0, 0.12);\n  border-left: 0.0625rem solid rgba(0, 0, 0, 0.12);\n}\n\nftx-tooltip {\n  :host {\n    margin: 0.4rem;\n    width: max-content;\n    position: relative;\n  }\n\n  .tooltip-container {\n    box-shadow: rgba(0, 0, 0, 0.12) 0rem 0.0625rem 0.1875rem,\n      rgba(0, 0, 0, 0.24) 0rem 0.0625rem 0.125rem;\n    padding: 1rem;\n    margin: 0.5rem;\n    background: white;\n    width: max-content;\n    display: flex;\n    flex-direction: column;\n    .top {\n      @include arrowPosition(-2%, 225deg, 39%, 50%);\n    }\n\n    .bottom {\n      @include arrowPosition(89%, 45deg, 45%, 50%);\n    }\n\n    .right {\n      @include arrowPosition(41%, 315deg, -0.2rem, 0%);\n    }\n    .left {\n      @include arrowPosition(41%, 135deg, 96%, 0%);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ text }}     TESADSDASD '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'FtxTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"injectables/GenerateFormBuilderService.html":{"url":"injectables/GenerateFormBuilderService.html","title":"injectable - GenerateFormBuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateFormBuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _fb\n                            \n                            \n                                    Private\n                                    Readonly\n                                _validatorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFormFromJson\n                            \n                            \n                                buildFormGenerate\n                            \n                            \n                                extractValidator\n                            \n                            \n                                getCustomFromControlType\n                            \n                            \n                                getValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFormFromJson\n                        \n                    \n                \n            \n            \n                \nbuildFormFromJson(jsonData: DataFormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonData\n                                    \n                                                DataFormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FormGroup | FormArray | FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFormGenerate\n                        \n                    \n                \n            \n            \n                \nbuildFormGenerate(data: DataFormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DataFormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FormGroup | FormArray | FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractValidator\n                        \n                    \n                \n            \n            \n                \nextractValidator(item: DataFormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                DataFormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCustomFromControlType\n                        \n                    \n                \n            \n            \n                \ngetCustomFromControlType(control: AbstractControl<>)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidator\n                        \n                    \n                \n            \n            \n                \ngetValidator(validatorConfig: ValidatorConfig)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validatorConfig\n                                    \n                                                ValidatorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _validatorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ValidatorService)\n                    \n                \n                    \n                        \n                                Defined in ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  isFormArray,\n  isFormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { DataFormBuilder, ValidatorConfig } from '../interfaces';\nimport { ValidatorService } from './validator.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerateFormBuilderService {\n  private readonly _fb = inject(FormBuilder);\n  private readonly _validatorService = inject(ValidatorService);\n\n  buildFormFromJson(\n    jsonData: DataFormBuilder\n  ): FormGroup | FormArray | FormControl {\n    console.log(this.buildFormGenerate(jsonData));\n    return this.buildFormGenerate(jsonData);\n  }\n\n  extractValidator(item: DataFormBuilder): ValidatorFn[] {\n    let validators: ValidatorFn[] = [];\n    if (item.validators && item.validators.length > 0) {\n      validators = item.validators.map((validatorConfig) =>\n        this.getValidator(validatorConfig)\n      );\n    }\n    return validators;\n  }\n\n  getValidator(validatorConfig: ValidatorConfig): ValidatorFn {\n    const { type, option, errorMsg } = validatorConfig;\n\n    // Use the validatorGenerators function to generate validators\n    const validatorGenerator = this._validatorService.validatorGenerators();\n\n    if (type in validatorGenerator) {\n      return (control: unknown) =>\n        validatorGenerator[type](\n          control as FormControl,\n          option,\n          errorMsg ?? ''\n        );\n    } else {\n      throw new Error('Please Implement this Validator');\n    }\n  }\n\n  buildFormGenerate(\n    data: DataFormBuilder\n  ): FormGroup | FormArray | FormControl {\n    if (data.values) {\n      //eslint-disable-next-line\n      const group: { [key: string]: any } = {};\n      data.values.forEach((item) => {\n        const label = item.label?.toLowerCase();\n        if (item.values) {\n          group[label ?? ''] = this.buildFormGenerate(item);\n        } else if (item.bulkValues) {\n          group[label ?? ''] = this._fb.array(\n            item.bulkValues.map((subItem) => this.buildFormGenerate(subItem))\n          );\n        } else {\n          const validators = this.extractValidator(item);\n          group[label ?? ''] = this._fb.control(item.value || null, validators);\n        }\n      });\n      return this._fb.group(group);\n    } else if (data.bulkValues) {\n      return this._fb.array(\n        data.bulkValues.map((subItem) => this.buildFormGenerate(subItem))\n      );\n    } else {\n      const validators = this.extractValidator(data);\n      return this._fb.control(data.value || null, validators);\n    }\n  }\n\n  getCustomFromControlType(control: AbstractControl): string {\n    if (isFormArray(control)) {\n      return 'FormArray';\n    }\n    if (isFormGroup(control)) {\n      return 'FormGroup';\n    }\n    return 'FormControl';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerativeService.html":{"url":"injectables/GenerativeService.html","title":"injectable - GenerativeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerativeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/service/generative.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackBy\n                        \n                    \n                \n            \n            \n                \ntrackBy(index: number, entity: T)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/generative.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenerativeService {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  trackBy(index: number, entity: T) {\n    return index;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Graph.html":{"url":"interfaces/Graph.html","title":"interface - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            howMannyMonth\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        howMannyMonth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        howMannyMonth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     GraphValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GraphValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphValue.html":{"url":"interfaces/GraphValue.html","title":"interface - GraphValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Info.html":{"url":"interfaces/Info.html","title":"interface - Info","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Info\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            childrens\n                                        \n                                \n                                \n                                        \n                                            familyNumber\n                                        \n                                \n                                \n                                        \n                                            roleOfMember\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childrens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        childrens:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        familyNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        familyNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleOfMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleOfMember:         RoleOfMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleOfMember[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoUser.html":{"url":"interfaces/InfoUser.html","title":"interface - InfoUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            info\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         Info\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Info\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     ValuesValue[] | ValuesClass | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValuesValue[] | ValuesClass | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoUserComponent.html":{"url":"components/InfoUserComponent.html","title":"component - InfoUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contentSteps/infoUser/info-user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-user\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                PatchFormGroupValueDirective\n                                ButtonComponent\n                                InputComponent\n                                FormControlEntityComponent\n                \n            \n\n            \n                styleUrls\n                ./info-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _stepperService\n                            \n                            \n                                form\n                            \n                            \n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contentSteps/infoUser/info-user.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _stepperService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(StepperService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/infoUser/info-user.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._stepperService.stepperForm\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/infoUser/info-user.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this._stepperService.formValues$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/infoUser/info-user.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StepperService } from '../../services/stepper.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Dictionary } from '@ngrx/entity';\nimport {\n  ButtonComponent,\n  FormControlEntityComponent,\n  InputComponent,\n  PatchFormGroupValueDirective,\n} from 'ngx-ftx-forms';\n\n@Component({\n  selector: 'info-user',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PatchFormGroupValueDirective,\n    ButtonComponent,\n    InputComponent,\n    FormControlEntityComponent,\n  ],\n  templateUrl: './info-user.component.html',\n  styleUrls: ['./info-user.component.scss'],\n})\nexport class InfoUserComponent {\n  private _stepperService = inject(StepperService);\n  vm$: Observable> = this._stepperService.formValues$; //eslint-disable-line\n  form = this._stepperService.stepperForm;\n\n  public addRole() {\n    this._stepperService.addRoleOfMember();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        \n          Role Of Member\n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n  \n    Add new Role\n  \n\n\n    \n\n    \n                \n                    ./info-user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Role Of Member                                                                                    Add new Role  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: , subscriptSizing:  },\n}\n                \n            \n\n\n            \n                selector\n                ngx-input-component\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PapControlDirective\n                            FormsModule\n                            ReactiveFormsModule\n                            MatInputModule\n                            MatCheckboxModule\n                            MatRadioModule\n                                FadeInOutDirective\n                \n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                labelInput\n                            \n                            \n                                placeholderInput\n                            \n                            \n                                toggleData\n                            \n                            \n                                typeInput\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     NgControl | any | \n\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Complete label'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts:60\n                            \n                        \n                \n                    \n                        Label for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts:56\n                            \n                        \n                \n                    \n                        Placeholder for input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleData\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : [{ value: false, description: 'default' }]\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts:64\n                            \n                        \n                \n                    \n                        When input is radio button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        typeInput\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts:52\n                            \n                        \n                \n                    \n                        Type of Input checkbox text\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PapControlDirective } from '../../directive';\nimport { FormsModule, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { FadeInOutDirective } from '../../directive/fade-in-out.directive';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n@Component({\n  selector: 'ngx-input-component',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PapControlDirective,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    FadeInOutDirective,\n  ],\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: { appearance: 'outline', subscriptSizing: 'dynamic' },\n    },\n  ],\n  animations: [\n    trigger('widthOpacityAnimation', [\n      state('void', style({ transform: 'scaleY(0)', height: 0, opacity: 0 })),\n      state('*', style({ transform: 'scaleY(1)', opacity: 1 })),\n      transition('void  *', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class InputComponent {\n  /**\n   * Type of Input checkbox text\n   */\n  @Input() typeInput? = 'text';\n  /**\n   * Placeholder for input\n   */\n  @Input() placeholderInput? = '';\n  /**\n   * Label for input\n   */\n  @Input() labelInput? = 'Complete label';\n  /**\n   * When input is radio button\n   */\n  @Input() toggleData? = [{ value: false, description: 'default' }];\n  @Input()\n  control?: NgControl | any | unknown; //eslint-disable-line\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          {{ radio.description }}\n        \n      \n    \n    \n      \n        {{ labelInput }}\n        \n      \n    \n    \n      {{ labelInput }}\n      \n    \n    \n      {{ control.errors?.['error']  }}\n    \n  \n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ radio.description }}                                    {{ labelInput }}                            {{ labelInput }}                    {{ control.errors?.[\\'error\\']  }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntroComponent.html":{"url":"components/IntroComponent.html","title":"component - IntroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contentSteps/intro/intro.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                intro\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./intro.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./intro.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'intro',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.scss'],\n})\nexport class IntroComponent {}\n\n    \n\n    \n        intro works!\n\n    \n\n    \n                \n                    ./intro.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'intro works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Label.html":{"url":"interfaces/Label.html","title":"interface - Label","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            labelCurrency\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelCurrency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelCurrency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepperEntity {\n  steps: Array;\n  intro: {\n    icon: string;\n    check: boolean;\n    id: string;\n    values: Label[] | null;\n  };\n  infoUser: {\n    check: boolean;\n    icon: string;\n    id: string;\n    values: {\n      familyNumber: number;\n      roleOfMember: {\n        id: string;\n        value: string;\n        check: boolean;\n      }[];\n      childrens: number;\n    };\n  };\n  spendMoney: {\n    id: string;\n    icon: string;\n    check: boolean;\n    values: {\n      incoming: number;\n      spendMoney: number;\n      revenue: number;\n      categorySpendMoney: {\n        id: string;\n        value: number;\n        label: string;\n        scope: {\n          id: string;\n          label: string;\n          check: boolean;\n        }[];\n      }[];\n      recommendations: {\n        check: boolean;\n        label: string;\n      }[];\n    };\n  };\n  // Exteotera graph\n  reserveBook: {\n    icon: string;\n    id: string;\n    check: boolean;\n    values: {\n      id: string;\n      graph: {\n        id: string;\n        values: {\n          id: string;\n          label: string;\n          start: number;\n          end: number;\n        }[];\n        howMannyMonth: number;\n      };\n      reserve: {\n        id: string;\n        currentReserve: Label;\n        recommendationReserve: Label;\n        howMannyMonth: number;\n      };\n      details: {\n        id: string;\n        check: boolean;\n        values: BookDetail[];\n      };\n      modals: {\n        setBookType: Label;\n        sumBook: Label;\n      };\n    };\n  };\n}\n\nexport interface Label {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface StepperValues {\n  id: string;\n  values: string;\n  check: boolean;\n  icon: string;\n}\n\nexport interface BookDetail {\n  id: string;\n  name: string;\n  author: string;\n  subBook?: {\n    label: Label;\n    edit: boolean;\n    delete: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Modals.html":{"url":"interfaces/Modals.html","title":"interface - Modals","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Modals\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            setBookType\n                                        \n                                \n                                \n                                        \n                                            sumBook\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        setBookType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setBookType:         SetBookType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SetBookType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sumBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sumBook:         SetBookType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SetBookType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PapControlDirective.html":{"url":"directives/PapControlDirective.html","title":"directive - PapControlDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  PapControlDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PapControlDirective,\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [ngxControl]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange()\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: '[ngxControl]',\n  standalone: true,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PapControlDirective,\n    },\n  ],\n})\nexport class PapControlDirective implements ControlValueAccessor {\n  writeValue(): void {\n    //\n  }\n  registerOnChange(): void {\n    //\n  }\n  registerOnTouched(): void {\n    //\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PatchFormGroupValueDirective.html":{"url":"directives/PatchFormGroupValueDirective.html","title":"directive - PatchFormGroupValueDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  PatchFormGroupValueDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxFormGroupValues]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                ngxFormGroupValues\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxFormGroupValues\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : {} as FormGroup\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxFormGroupValues\n                    \n                \n                        \n                            \n                                    Defined in ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxFormGroupValues\n                    \n                \n\n\n                \n                    \n                        setngxFormGroupValues(val)\n                    \n                \n                            \n                                \n                                    Defined in ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Directive({\n  selector: '[ngxFormGroupValues]',\n  standalone: true,\n})\nexport class PatchFormGroupValueDirective {\n  @Input() formGroup: FormGroup = {} as FormGroup;\n\n  @Input() set ngxFormGroupValues(val: unknown) {\n    if (!val) {\n      return;\n    }\n    this.formGroup.patchValue(val, { emitEvent: false });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recommendation.html":{"url":"interfaces/Recommendation.html","title":"interface - Recommendation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recommendation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RenderYouDirective.html":{"url":"directives/RenderYouDirective.html","title":"directive - RenderYouDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RenderYouDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [renderYou] \n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                componentFactoryResolver\n                            \n                            \n                                    Private\n                                componentRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                elementRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                renderer2\n                            \n                            \n                                    Private\n                                    Readonly\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                elementText\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        elementText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:22\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:30\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:82\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        componentFactoryResolver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ComponentFactoryResolver)\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        componentRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ComponentRef | any\n\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        renderer2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Renderer2)\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ViewContainerRef)\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  Input,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FtxTooltipComponent } from '../ftx-tooltip.component';\nimport { ZoneAxeService } from '../service/zone-axe.service';\n\n@Directive({\n  selector: '[renderYou] ',\n  standalone: true,\n})\nexport class RenderYouDirective {\n  @Input() element: any; //eslint-disable-line\n\n  @Input() elementText?: string;\n  private readonly elementRef = inject(ElementRef);\n  private readonly renderer2 = inject(Renderer2);\n\n  private readonly componentFactoryResolver = inject(ComponentFactoryResolver);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private componentRef: ComponentRef | any; // eslint-disable-line\n\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event: MouseEvent) {\n    const element = this.elementRef.nativeElement;\n    const targetElement = event.target as HTMLElement;\n    // Avoid the children\n    if (targetElement === element) {\n      const componentFactory =\n        this.componentFactoryResolver.resolveComponentFactory(\n          FtxTooltipComponent\n        );\n      this.componentRef =\n        this.viewContainerRef.createComponent(componentFactory);\n      this.componentRef.instance.rendererTemplate = this.element;\n      this.componentRef.instance.text = this.elementText;\n\n      // find the app-root element\n      const appRoot = document.querySelector('app-root');\n      const storybook = document.querySelector('storybook-root');\n      const elementToAdd = this.componentRef.location.nativeElement;\n      const insertAfter = (newNode: HTMLElement, referenceNode: Element) => {\n        if (referenceNode?.parentNode)\n          referenceNode.parentNode.insertBefore(\n            newNode,\n            referenceNode.nextSibling\n          );\n      };\n\n      if (appRoot) {\n        insertAfter(elementToAdd, appRoot);\n      } else if (storybook) {\n        insertAfter(elementToAdd, storybook);\n      }\n\n      // set the tooltip component's position to absolute\n      this.componentRef.location.nativeElement.style.position = 'absolute';\n      this.componentRef.changeDetectorRef.detectChanges();\n\n      // set the top and left positions of the tooltip component\n      const position = new ZoneAxeService(\n        this.componentRef.location.nativeElement,\n        element,\n        this.renderer2\n      ).axes();\n      this.componentRef.location.nativeElement.style.top = `${\n        +position.top / 16\n      }rem`;\n      this.componentRef.location.nativeElement.style.left = `${\n        +position.left / 16\n      }rem`;\n      this.componentRef.location.nativeElement.style.zIndex = '98';\n      this.componentRef.changeDetectorRef.detectChanges();\n    }\n  }\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.componentRef = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reserve.html":{"url":"interfaces/Reserve.html","title":"interface - Reserve","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reserve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentReserve\n                                        \n                                \n                                \n                                        \n                                            howMannyMonth\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            recommendationReserve\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentReserve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentReserve:         SetBookType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SetBookType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        howMannyMonth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        howMannyMonth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommendationReserve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recommendationReserve:         SetBookType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SetBookType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReserveBookComponent.html":{"url":"components/ReserveBookComponent.html","title":"component - ReserveBookComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReserveBookComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contentSteps/reserveBook/reserve-book.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reserve-book\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                InputComponent\n                                ButtonComponent\n                                FormControlEntityComponent\n                                PatchFormGroupValueDirective\n                                FtxFormsComponent\n                \n            \n\n            \n                styleUrls\n                ./reserve-book.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reserve-book.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _stepperService\n                            \n                            \n                                    Private\n                                    Readonly\n                                _stepperStore\n                            \n                            \n                                dynamicForm\n                            \n                            \n                                formValue$\n                            \n                            \n                                    Readonly\n                                generateFormBuilderService\n                            \n                            \n                                jsonData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:329\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _stepperService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(StepperService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:307\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _stepperStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dynamicForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formValue$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : using(\n    () =>\n      this.dynamicForm.valueChanges\n        .pipe(\n          debounceTime(200),\n          tap((values: DataFormBuilder) =>\n            this._stepperStore.dispatch(formValueChangeReserve(values))\n          ),\n          tap(() => {\n            this._stepperService.steppForm.controls.reserveBook.controls.check.patchValue(\n              this.dynamicForm.valid\n            );\n          }),\n          tap(() => {\n            this._stepperService.flagUrl$.next('reserveBook');\n          })\n        )\n        .subscribe(),\n    () => this._stepperStore.select(selectReserveEntities)\n  ).pipe(shareReplay())\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:308\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        generateFormBuilderService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenerateFormBuilderService\n\n                    \n                \n                \n                    \n                        Default value : inject(\n    GenerateFormBuilderService\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsonData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFormBuilder\n\n                    \n                \n                \n                    \n                        Default value : {\n    values: [\n      {\n        label: 'name',\n        value: 'IVan',\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\n        placeholder: 'Isvan Avramescu',\n        labelHint: 'Name for User',\n      },\n      {\n        label: 'email',\n        value: 's@gm.co',\n        validators: [\n          { type: TypeConstantEnum.REQUIRED },\n          { type: TypeConstantEnum.EMAIL },\n        ],\n        labelHint: 'Email Address',\n      },\n      {\n        label: 'TESTa',\n        value: '201',\n        validators: [\n          { type: TypeConstantEnum.REQUIRED },\n          {\n            type: TypeConstantEnum.PATTERN,\n            option: TypePattern.ONLY_NUMBER,\n            errorMsg: 'Only Integer Number',\n          },\n        ],\n        labelHint: 'age',\n      },\n      {\n        label: 'summary',\n        value: true,\n        labelHint: 'Summary Type',\n        typeInput: 'boolean',\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\n      },\n      {\n        label: 'Adult',\n        value: true,\n        labelHint: 'Is Adult',\n        typeInput: 'toggle',\n        valueToggleShow: [\n          {\n            value: false,\n            description: 'No',\n          },\n          {\n            value: true,\n            description: 'Yes',\n          },\n        ],\n      },\n      {\n        label: 'ARE',\n        value: 'dasdasd',\n        labelHint: 'Area Data',\n        typeInput: 'area',\n        description: {\n          text:\n            'Lorem Ipsum Text description you are in the best form' +\n            ' builder create evere',\n        },\n      },\n\n      {\n        labelHint: 'Address street',\n        label: 'address',\n        values: [\n          {\n            label: 'street',\n            value: 'Ivan',\n            labelHint: 'Street Number 1',\n            placeholder: 'Street Number 1',\n            validators: [\n              {\n                type: TypeConstantEnum.REQUIRED,\n                errorMsg: 'This field it is' + ' must',\n              },\n            ],\n          },\n          {\n            label: 'streetIvan',\n            value: 'Ivan2',\n            validators: [\n              {\n                type: TypeConstantEnum.REQUIRED,\n                errorMsg: 'This field it is' + ' must',\n              },\n            ],\n            description: {\n              text:\n                'Lorem Ipsum Text description you are in the best form' +\n                ' builder create evere',\n            },\n          },\n        ],\n      },\n      {\n        label: 'personalData',\n        labelHint: 'Personal Data',\n        values: [\n          {\n            label: 'cnp',\n            labelHint: 'Personal Nested',\n            value: '123141232311',\n            validators: [{ type: TypeConstantEnum.MIN, option: 20 }],\n          },\n          {\n            label: 'ds',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n          {\n            label: 'ds2',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n          {\n            label: 'ds3',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        labelHint: 'Course what user take',\n        label: 'course',\n        bulkValues: [\n          {\n            value: 'ss',\n            label: 'angularPatterns',\n            labelHint: 'Summary TEST',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n              {\n                type: TypeConstantEnum.MIN_CHAR,\n                option: 2,\n                errorMsg: 'Must filled with min 2 char',\n              },\n            ],\n          },\n          {\n            value: '555',\n            label: 'reactPatterns',\n          },\n        ],\n      },\n      {\n        labelHint: 'Name for User',\n        label: 'age',\n        bulkValues: [\n          {\n            value: '2312',\n            label: 'angularPatterns',\n          },\n          {\n            value: '321',\n            label: 'reactPatterns',\n          },\n        ],\n      },\n      {\n        label: 'home',\n        labelHint: 'Name for Home',\n        bulkValues: [\n          {\n            value: '444',\n            label: 'Miki',\n          },\n          {\n            label: 'Ivan',\n            bulkValues: [\n              {\n                value: 1231,\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\n                labelHint: 'Childrens',\n              },\n              {\n                label: 'train',\n                value: 232,\n                placeholder: 'NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Barto',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Barto2',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Bartos',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contentSteps/reserveBook/reserve-book.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  ButtonComponent,\n  DataFormBuilder,\n  FormControlEntityComponent,\n  FtxFormsComponent,\n  GenerateFormBuilderService,\n  InputComponent,\n  PatchFormGroupValueDirective,\n  TypeConstantEnum,\n  TypePattern,\n} from 'ngx-ftx-forms';\nimport { debounceTime, shareReplay, tap, using } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { StepperService } from '../../services/stepper.service';\nimport { formValueChangeReserve, selectReserveEntities } from '../../../+state';\n\n@Component({\n  selector: 'reserve-book',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    InputComponent,\n    ButtonComponent,\n    FormControlEntityComponent,\n    PatchFormGroupValueDirective,\n    FtxFormsComponent,\n  ],\n  templateUrl: './reserve-book.component.html',\n  styleUrls: ['./reserve-book.component.scss'],\n})\nexport class ReserveBookComponent implements OnInit {\n  private readonly _stepperStore = inject(Store);\n  readonly generateFormBuilderService: GenerateFormBuilderService = inject(\n    GenerateFormBuilderService\n  );\n  dynamicForm: any; // eslint-disable-line\n  jsonData: DataFormBuilder = {\n    values: [\n      {\n        label: 'name',\n        value: 'IVan',\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\n        placeholder: 'Isvan Avramescu',\n        labelHint: 'Name for User',\n      },\n      {\n        label: 'email',\n        value: 's@gm.co',\n        validators: [\n          { type: TypeConstantEnum.REQUIRED },\n          { type: TypeConstantEnum.EMAIL },\n        ],\n        labelHint: 'Email Address',\n      },\n      {\n        label: 'TESTa',\n        value: '201',\n        validators: [\n          { type: TypeConstantEnum.REQUIRED },\n          {\n            type: TypeConstantEnum.PATTERN,\n            option: TypePattern.ONLY_NUMBER,\n            errorMsg: 'Only Integer Number',\n          },\n        ],\n        labelHint: 'age',\n      },\n      {\n        label: 'summary',\n        value: true,\n        labelHint: 'Summary Type',\n        typeInput: 'boolean',\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\n      },\n      {\n        label: 'Adult',\n        value: true,\n        labelHint: 'Is Adult',\n        typeInput: 'toggle',\n        valueToggleShow: [\n          {\n            value: false,\n            description: 'No',\n          },\n          {\n            value: true,\n            description: 'Yes',\n          },\n        ],\n      },\n      {\n        label: 'ARE',\n        value: 'dasdasd',\n        labelHint: 'Area Data',\n        typeInput: 'area',\n        description: {\n          text:\n            'Lorem Ipsum Text description you are in the best form' +\n            ' builder create evere',\n        },\n      },\n\n      {\n        labelHint: 'Address street',\n        label: 'address',\n        values: [\n          {\n            label: 'street',\n            value: 'Ivan',\n            labelHint: 'Street Number 1',\n            placeholder: 'Street Number 1',\n            validators: [\n              {\n                type: TypeConstantEnum.REQUIRED,\n                errorMsg: 'This field it is' + ' must',\n              },\n            ],\n          },\n          {\n            label: 'streetIvan',\n            value: 'Ivan2',\n            validators: [\n              {\n                type: TypeConstantEnum.REQUIRED,\n                errorMsg: 'This field it is' + ' must',\n              },\n            ],\n            description: {\n              text:\n                'Lorem Ipsum Text description you are in the best form' +\n                ' builder create evere',\n            },\n          },\n        ],\n      },\n      {\n        label: 'personalData',\n        labelHint: 'Personal Data',\n        values: [\n          {\n            label: 'cnp',\n            labelHint: 'Personal Nested',\n            value: '123141232311',\n            validators: [{ type: TypeConstantEnum.MIN, option: 20 }],\n          },\n          {\n            label: 'ds',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n          {\n            label: 'ds2',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n          {\n            label: 'ds3',\n            value: 'TEST',\n            labelHint: 'Personal TEst',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        labelHint: 'Course what user take',\n        label: 'course',\n        bulkValues: [\n          {\n            value: 'ss',\n            label: 'angularPatterns',\n            labelHint: 'Summary TEST',\n            validators: [\n              { type: TypeConstantEnum.REQUIRED },\n              {\n                type: TypeConstantEnum.PATTERN,\n                option: TypePattern.ONLY_CHAR,\n                errorMsg: 'Only' + ' char',\n              },\n              {\n                type: TypeConstantEnum.MIN_CHAR,\n                option: 2,\n                errorMsg: 'Must filled with min 2 char',\n              },\n            ],\n          },\n          {\n            value: '555',\n            label: 'reactPatterns',\n          },\n        ],\n      },\n      {\n        labelHint: 'Name for User',\n        label: 'age',\n        bulkValues: [\n          {\n            value: '2312',\n            label: 'angularPatterns',\n          },\n          {\n            value: '321',\n            label: 'reactPatterns',\n          },\n        ],\n      },\n      {\n        label: 'home',\n        labelHint: 'Name for Home',\n        bulkValues: [\n          {\n            value: '444',\n            label: 'Miki',\n          },\n          {\n            label: 'Ivan',\n            bulkValues: [\n              {\n                value: 1231,\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\n                labelHint: 'Childrens',\n              },\n              {\n                label: 'train',\n                value: 232,\n                placeholder: 'NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Barto',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Barto2',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n              },\n            ],\n          },\n          {\n            label: 'Bartos',\n            bulkValues: [\n              {\n                value: null,\n                labelHint: 'barot Childrens',\n              },\n              {\n                label: 'barot Childrens train',\n                value: 23222,\n                placeholder: ' barot NAMING',\n                labelHint: 'Number',\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  };\n  private _stepperService = inject(StepperService);\n  formValue$ = using(\n    () =>\n      this.dynamicForm.valueChanges\n        .pipe(\n          debounceTime(200),\n          tap((values: DataFormBuilder) =>\n            this._stepperStore.dispatch(formValueChangeReserve(values))\n          ),\n          tap(() => {\n            this._stepperService.steppForm.controls.reserveBook.controls.check.patchValue(\n              this.dynamicForm.valid\n            );\n          }),\n          tap(() => {\n            this._stepperService.flagUrl$.next('reserveBook');\n          })\n        )\n        .subscribe(),\n    () => this._stepperStore.select(selectReserveEntities)\n  ).pipe(shareReplay());\n\n  ngOnInit() {\n    this.dynamicForm = this.generateFormBuilderService.buildFormFromJson(\n      this.jsonData\n    );\n  }\n\n  onSubmit() {\n    if (this.dynamicForm.valid) {\n      console.log(this.dynamicForm.getRawValue());\n      // Handle form submission\n    } else {\n      //\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./reserve-book.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReserveBookComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReserveEffects.html":{"url":"injectables/ReserveEffects.html","title":"injectable - ReserveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReserveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/reserve/reserve.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actions$\n                            \n                            \n                                init$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Actions)\n                    \n                \n                    \n                        \n                                Defined in src/app/+state/reserve/reserve.effects.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ReserveActions.initReserve),\n      switchMap(() => of(ReserveActions.loadReserveSuccess({ reserve: [] }))),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(ReserveActions.loadReserveFailure({ error }));\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/+state/reserve/reserve.effects.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, of, switchMap } from 'rxjs';\nimport * as ReserveActions from './reserve.actions';\n\n@Injectable()\nexport class ReserveEffects {\n  private actions$ = inject(Actions);\n\n  init$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ReserveActions.initReserve),\n      switchMap(() => of(ReserveActions.loadReserveSuccess({ reserve: [] }))),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(ReserveActions.loadReserveFailure({ error }));\n      })\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReserveEntity.html":{"url":"interfaces/ReserveEntity.html","title":"interface - ReserveEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReserveEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/reserve/reserve.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'Reserve' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ReserveEntity {\n  id: string | number; // Primary ID\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReservePartialState.html":{"url":"interfaces/ReservePartialState.html","title":"interface - ReservePartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReservePartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/reserve/reserve.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            RESERVE_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        RESERVE_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        RESERVE_FEATURE_KEY:         ReserveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReserveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { ReserveEntity } from './reserve.models';\nimport * as ReserveActions from './reserve.actions';\n\nexport const RESERVE_FEATURE_KEY = 'reserve';\n\nexport interface ReserveState extends EntityState {\n  selectedId?: string | number; // which Reserve record has been selected\n  loaded: boolean; // has the Reserve list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface ReservePartialState {\n  readonly [RESERVE_FEATURE_KEY]: ReserveState;\n}\n\nexport const reserveAdapter: EntityAdapter =\n  createEntityAdapter();\nexport const initialReserveState: ReserveState = reserveAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n  }\n);\nconst reducer = createReducer(\n  initialReserveState,\n  on(ReserveActions.initReserve, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\n  ),\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    ReserveActions.formValueChangeReserve,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n);\n\nexport function reserveReducer(\n  state: ReserveState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReserveState.html":{"url":"interfaces/ReserveState.html","title":"interface - ReserveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReserveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/reserve/reserve.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { ReserveEntity } from './reserve.models';\nimport * as ReserveActions from './reserve.actions';\n\nexport const RESERVE_FEATURE_KEY = 'reserve';\n\nexport interface ReserveState extends EntityState {\n  selectedId?: string | number; // which Reserve record has been selected\n  loaded: boolean; // has the Reserve list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface ReservePartialState {\n  readonly [RESERVE_FEATURE_KEY]: ReserveState;\n}\n\nexport const reserveAdapter: EntityAdapter =\n  createEntityAdapter();\nexport const initialReserveState: ReserveState = reserveAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n  }\n);\nconst reducer = createReducer(\n  initialReserveState,\n  on(ReserveActions.initReserve, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\n  ),\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    ReserveActions.formValueChangeReserve,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n);\n\nexport function reserveReducer(\n  state: ReserveState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleOfMember.html":{"url":"interfaces/RoleOfMember.html","title":"interface - RoleOfMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleOfMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scope.html":{"url":"interfaces/Scope.html","title":"interface - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollHintDirective.html":{"url":"directives/ScrollHintDirective.html","title":"directive - ScrollHintDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollHintDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to create a scroll hint effect with opacity on a scrollable element.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sivanScrollHint]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyed$\n                            \n                            \n                                    Private\n                                    Readonly\n                                elementRef\n                            \n                            \n                                    Private\n                                pseudoElement\n                            \n                            \n                                    Private\n                                    Readonly\n                                renderer2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                onWindow\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:41\n                            \n                        \n\n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:58\n                \n            \n\n\n            \n                \n                    Event handler for the 'scroll' event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe scroll event.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        onWindow\n                        \n                    \n                \n            \n            \n                \n                    \n                    onWindow($event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('scroll', ['$event'])\n                \n            \n\n            \n                \n                    Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:58\n                \n            \n\n\n            \n                \n                    Event handler for the 'scroll' event.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe scroll event.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:41\n                        \n                    \n\n            \n                \n                    {Subject} renderer - Renderer to manipulate the DOM.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:30\n                        \n                    \n\n            \n                \n                    {ElementRef} elementRef - Reference to the host element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pseudoElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        renderer2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Renderer2)\n                    \n                \n                    \n                        \n                                Defined in ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts:35\n                        \n                    \n\n            \n                \n                    {Renderer2} renderer - Renderer to manipulate the DOM.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport {\n  distinctUntilChanged,\n  fromEvent,\n  map,\n  Subject,\n  takeUntil,\n  tap,\n} from 'rxjs';\n\n/**\n * Directive to create a scroll hint effect with opacity on a scrollable element.\n */\n@Directive({\n  selector: '[sivanScrollHint]',\n  standalone: true,\n})\nexport class ScrollHintDirective implements OnDestroy {\n  /**\n   * {ElementRef} elementRef - Reference to the host element.\n   * @private\n   */\n  private readonly elementRef = inject(ElementRef);\n  /**\n   * {Renderer2} renderer - Renderer to manipulate the DOM.\n   * @private\n   */\n  private readonly renderer2 = inject(Renderer2);\n  private pseudoElement: HTMLElement | null = null;\n  /**\n   * {Subject} renderer - Renderer to manipulate the DOM.\n   * @private\n   */\n  private destroyed$ = new Subject();\n\n  constructor() {\n    this.pseudoElement = this.renderer2.createElement('div');\n    this.renderer2.addClass(this.pseudoElement, 'scroll-opacity-pseudo');\n    this.renderer2.appendChild(\n      this.elementRef.nativeElement,\n      this.pseudoElement\n    );\n  }\n\n  /**\n   * Event handler for the 'scroll' event.\n   *\n   * @param {Event} $event - The scroll event.\n   */\n  @HostListener('scroll', ['$event']) //eslint-disable-next-line\n  onWindow($event: any) {\n    fromEvent($event.target, 'scroll')\n      .pipe(\n        map((event: Event) => event.target as HTMLElement),\n        distinctUntilChanged(),\n        tap((contentElement) => {\n          const contentScrollHeight =\n            contentElement.scrollHeight - contentElement.offsetHeight;\n          const currentScroll = contentElement.scrollTop / contentScrollHeight;\n          // Calculate the opacity value for the bottom 40px\n          let opacity = currentScroll;\n          opacity = +Math.min(1, Math.max(0, opacity)).toFixed(2);\n          // Calculate the height of the scrollable content\n          const contentHeight = contentElement.scrollHeight;\n          // Calculate the height of the bottom 40px\n          const bottomHeight = 40;\n          // Calculate the top position for the pseudo-element\n          const topPosition = contentHeight - bottomHeight;\n          // Apply styles to the pseudo-element\n          this.renderer2.setStyle(this.pseudoElement, 'position', 'absolute');\n          this.renderer2.setStyle(this.pseudoElement, 'z-index', '101');\n          this.renderer2.setStyle(\n            this.pseudoElement,\n            'top',\n            `calc(100vh - 95px - 0.65rem)`\n          );\n          this.renderer2.setStyle(this.pseudoElement, 'left', '0');\n          this.renderer2.setStyle(this.pseudoElement, 'width', '100%');\n          this.renderer2.setStyle(\n            this.pseudoElement,\n            'height',\n            `${bottomHeight}px`\n          );\n          this.renderer2.setStyle(\n            this.pseudoElement,\n            'background',\n            `linear-gradient(rgb(0 0 0 / 0%), rgb(100 116 139/var(--tw-bg-opacity)))`\n          );\n          this.renderer2.setStyle(\n            this.pseudoElement,\n            'opacity',\n            `${1 - opacity}`\n          );\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetBookType.html":{"url":"interfaces/SetBookType.html","title":"interface - SetBookType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetBookType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            labelCurrency\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelCurrency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labelCurrency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpendMoneyComponent.html":{"url":"components/SpendMoneyComponent.html","title":"component - SpendMoneyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpendMoneyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contentSteps/spendMoney/spend-money.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spend-money\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./spend-money.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spend-money.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'spend-money',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './spend-money.component.html',\n  styleUrls: ['./spend-money.component.scss'],\n})\nexport class SpendMoneyComponent {}\n\n    \n\n    \n        spend-money works!\n\n    \n\n    \n                \n                    ./spend-money.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'spend-money works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpendMoneyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepperComponent.html":{"url":"components/StepperComponent.html","title":"component - StepperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stepper/stepper.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            MatIconModule\n                                StepperStepsComponent\n                                PatchFormGroupValueDirective\n                            ReactiveFormsModule\n                            FormsModule\n                                ScrollHintDirective\n                \n            \n\n            \n                styleUrls\n                ./stepper.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stepper.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _stepperService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _stepperService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(StepperService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper/stepper.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { StepperStepsComponent } from '../stepper-steps/stepper-steps.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PatchFormGroupValueDirective } from 'ngx-ftx-forms';\nimport { StepperService } from '../services/stepper.service';\nimport { ScrollHintDirective } from 'ngx-ftx-shared';\n\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    MatIconModule,\n    StepperStepsComponent,\n    PatchFormGroupValueDirective,\n    ReactiveFormsModule,\n    FormsModule,\n    ScrollHintDirective,\n  ],\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepperComponent {\n  public readonly _stepperService = inject(StepperService);\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./stepper.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'StepperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StepperEffects.html":{"url":"injectables/StepperEffects.html","title":"injectable - StepperEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StepperEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actions$\n                            \n                            \n                                init$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Actions)\n                    \n                \n                    \n                        \n                                Defined in src/app/+state/stepper.effects.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(StepperActions.initStepper),\n      switchMap(() => of(StepperActions.loadStepperSuccess({ stepper: [] }))),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(StepperActions.loadStepperFailure({ error }));\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/+state/stepper.effects.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, of, switchMap } from 'rxjs';\nimport * as StepperActions from './stepper.actions';\n\n@Injectable()\nexport class StepperEffects {\n  private actions$ = inject(Actions);\n\n  init$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StepperActions.initStepper),\n      switchMap(() => of(StepperActions.loadStepperSuccess({ stepper: [] }))),\n      catchError((error) => {\n        console.error('Error', error);\n        return of(StepperActions.loadStepperFailure({ error }));\n      })\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepperEntity.html":{"url":"interfaces/StepperEntity.html","title":"interface - StepperEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepperEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.models.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the 'Stepper' data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            infoUser\n                                        \n                                \n                                \n                                        \n                                            intro\n                                        \n                                \n                                \n                                        \n                                            reserveBook\n                                        \n                                \n                                \n                                        \n                                            spendMoney\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        infoUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        infoUser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intro:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reserveBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reserveBook:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendMoney\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendMoney:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepperEntity {\n  steps: Array;\n  intro: {\n    icon: string;\n    check: boolean;\n    id: string;\n    values: Label[] | null;\n  };\n  infoUser: {\n    check: boolean;\n    icon: string;\n    id: string;\n    values: {\n      familyNumber: number;\n      roleOfMember: {\n        id: string;\n        value: string;\n        check: boolean;\n      }[];\n      childrens: number;\n    };\n  };\n  spendMoney: {\n    id: string;\n    icon: string;\n    check: boolean;\n    values: {\n      incoming: number;\n      spendMoney: number;\n      revenue: number;\n      categorySpendMoney: {\n        id: string;\n        value: number;\n        label: string;\n        scope: {\n          id: string;\n          label: string;\n          check: boolean;\n        }[];\n      }[];\n      recommendations: {\n        check: boolean;\n        label: string;\n      }[];\n    };\n  };\n  // Exteotera graph\n  reserveBook: {\n    icon: string;\n    id: string;\n    check: boolean;\n    values: {\n      id: string;\n      graph: {\n        id: string;\n        values: {\n          id: string;\n          label: string;\n          start: number;\n          end: number;\n        }[];\n        howMannyMonth: number;\n      };\n      reserve: {\n        id: string;\n        currentReserve: Label;\n        recommendationReserve: Label;\n        howMannyMonth: number;\n      };\n      details: {\n        id: string;\n        check: boolean;\n        values: BookDetail[];\n      };\n      modals: {\n        setBookType: Label;\n        sumBook: Label;\n      };\n    };\n  };\n}\n\nexport interface Label {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface StepperValues {\n  id: string;\n  values: string;\n  check: boolean;\n  icon: string;\n}\n\nexport interface BookDetail {\n  id: string;\n  name: string;\n  author: string;\n  subBook?: {\n    label: Label;\n    edit: boolean;\n    delete: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepperPartialState.html":{"url":"interfaces/StepperPartialState.html","title":"interface - StepperPartialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepperPartialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            STEPPER_FEATURE_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        STEPPER_FEATURE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STEPPER_FEATURE_KEY:         StepperState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepperState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as StepperActions from './stepper.actions';\nimport { formValueChange } from './stepper.actions';\nimport { StepperEntity } from './stepper.models';\nimport { mockStepper } from './mock';\n\nexport const STEPPER_FEATURE_KEY = 'stepper';\n\nexport interface StepperState extends EntityState {\n  selectedId?: string | number; // which Stepper record has been selected\n  loaded: boolean; // has the Stepper list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface StepperPartialState {\n  readonly [STEPPER_FEATURE_KEY]: StepperState;\n}\n\nexport const stepperAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialStepperState: StepperState = stepperAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n    entities: mockStepper(),\n  }\n);\n\nconst reducer = createReducer(\n  initialStepperState,\n  on(StepperActions.initStepper, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\n    stepperAdapter.setAll(stepper, {\n      ...state,\n      loaded: true,\n    })\n  ),\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    formValueChange,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n);\n\nexport function stepperReducer(state: StepperState, action: Action) {\n  return reducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StepperService.html":{"url":"injectables/StepperService.html","title":"injectable - StepperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StepperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/services/stepper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _fb\n                            \n                            \n                                    Private\n                                    Readonly\n                                _stepperStore\n                            \n                            \n                                    Public\n                                buttonDisable$\n                            \n                            \n                                    Public\n                                flagUrl$\n                            \n                            \n                                    Private\n                                formValue$\n                            \n                            \n                                    Public\n                                steppForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRoleOfMember\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formValues$\n                                \n                                \n                                    stepperForm\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addRoleOfMember\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoleOfMember()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/services/stepper.service.ts:182\n                \n            \n\n\n            \n                \n                    Adds a new role to the 'roleOfMember' array in 'infoUser' control.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:32\n                        \n                    \n\n            \n                \n                    An instance of the FormBuilder class injected from '@angular/forms'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _stepperStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:26\n                        \n                    \n\n            \n                \n                    An instance of the Store class injected using @ngrx/store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buttonDisable$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.formValue$, this.flagUrl$]).pipe(\n    switchMap(\n      (\n        valuesCombined: any //eslint-disable-line\n      ): Observable => of(!valuesCombined[0][valuesCombined[1]].check)\n    ),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        flagUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('info')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:37\n                        \n                    \n\n            \n                \n                    Flag URL Subject for tracking flag changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formValue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : using(\n    () =>\n      this.stepperForm.valueChanges\n        .pipe(\n          debounceTime(200),\n          tap(\n            (\n              values: any // eslint-disable-line\n            ) => this._stepperStore.dispatch(formValueChange(values))\n          )\n        )\n        .subscribe(),\n    () => this._stepperStore.select(selectStepperEntities)\n  ).pipe(shareReplay())\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:140\n                        \n                    \n\n            \n                \n                    Observable that emits the value of form changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        steppForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._fb.group({\n    intro: this._fb.group({\n      icon: '',\n      check: this._fb.control(false),\n      id: '',\n      values: {},\n    }),\n    infoUser: this._fb.group({\n      check: this._fb.control(true),\n      icon: '',\n      id: '',\n      info: this._fb.group({\n        familyNumber: 0,\n        roleOfMember: this._fb.array([\n          this._fb.group({\n            id: 0,\n            value: '',\n            check: false,\n          }),\n          this._fb.group({\n            id: 0,\n            value: '',\n            check: false,\n          }),\n        ]),\n        childrens: this._fb.control(0),\n      }),\n    }),\n    spendMoney: this._fb.group({\n      id: '',\n      icon: '',\n      check: this._fb.control(false),\n      values: {\n        incoming: null,\n        spendMoney: null,\n        revenue: null,\n        categorySpendMoney: [\n          {\n            id: '',\n            value: null,\n            label: '',\n            scope: [\n              {\n                id: '',\n                label: '',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: false,\n            label: '',\n          },\n        ],\n      },\n    }), // Exteotera graph\n    reserveBook: this._fb.group({\n      icon: '',\n      id: '',\n      check: this._fb.control(false),\n      values: {\n        id: '',\n        graph: {\n          id: '',\n          values: [\n            {\n              id: '',\n              label: '',\n              start: null,\n              end: null,\n            },\n          ],\n          howMannyMonth: null,\n        },\n        reserve: {\n          id: '',\n          currentReserve: {},\n          recommendationReserve: {},\n          howMannyMonth: null,\n        },\n        details: {\n          id: '',\n          check: false,\n          values: [],\n        },\n        modals: {\n          setBookType: {},\n          sumBook: {},\n        },\n      },\n    }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/services/stepper.service.ts:42\n                        \n                    \n\n            \n                \n                    FormGroup representing the stepper form.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formValues$\n                    \n                \n\n                \n                    \n                        getformValues$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/services/stepper.service.ts:167\n                                \n                            \n                    \n                        \n                                Retrieves the observable for form values.\n\n\n                                \n                                \n                                \n                                    Returns :     Observable>\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stepperForm\n                    \n                \n\n                \n                    \n                        getstepperForm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/services/stepper.service.ts:175\n                                \n                            \n                    \n                        \n                                Retrieves the stepper form.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { FormBuilder } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  debounceTime,\n  Observable,\n  of,\n  shareReplay,\n  switchMap,\n  tap,\n  using,\n} from 'rxjs';\nimport { formValueChange, selectStepperEntities } from '../../+state';\nimport { Dictionary } from '@ngrx/entity';\nimport { StepperEntity } from '../../+state/stepper.models';\n\n@Injectable({ providedIn: 'root' })\nexport class StepperService {\n  /**\n   * An instance of the Store class injected using @ngrx/store.\n   * @type {Store}\n   * @private\n   */\n  private readonly _stepperStore = inject(Store);\n  /**\n   * An instance of the FormBuilder class injected from '@angular/forms'.\n   * @type {FormBuilder}\n   * @private\n   */\n  private readonly _fb = inject(FormBuilder);\n  /**\n   * Flag URL Subject for tracking flag changes.\n   * @type {Subject}\n   */\n  public flagUrl$ = new BehaviorSubject('info');\n  /**\n   * FormGroup representing the stepper form.\n   * @type {FormGroup}\n   */\n  public steppForm = this._fb.group({\n    intro: this._fb.group({\n      icon: '',\n      check: this._fb.control(false),\n      id: '',\n      values: {},\n    }),\n    infoUser: this._fb.group({\n      check: this._fb.control(true),\n      icon: '',\n      id: '',\n      info: this._fb.group({\n        familyNumber: 0,\n        roleOfMember: this._fb.array([\n          this._fb.group({\n            id: 0,\n            value: '',\n            check: false,\n          }),\n          this._fb.group({\n            id: 0,\n            value: '',\n            check: false,\n          }),\n        ]),\n        childrens: this._fb.control(0),\n      }),\n    }),\n    spendMoney: this._fb.group({\n      id: '',\n      icon: '',\n      check: this._fb.control(false),\n      values: {\n        incoming: null,\n        spendMoney: null,\n        revenue: null,\n        categorySpendMoney: [\n          {\n            id: '',\n            value: null,\n            label: '',\n            scope: [\n              {\n                id: '',\n                label: '',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: false,\n            label: '',\n          },\n        ],\n      },\n    }), // Exteotera graph\n    reserveBook: this._fb.group({\n      icon: '',\n      id: '',\n      check: this._fb.control(false),\n      values: {\n        id: '',\n        graph: {\n          id: '',\n          values: [\n            {\n              id: '',\n              label: '',\n              start: null,\n              end: null,\n            },\n          ],\n          howMannyMonth: null,\n        },\n        reserve: {\n          id: '',\n          currentReserve: {},\n          recommendationReserve: {},\n          howMannyMonth: null,\n        },\n        details: {\n          id: '',\n          check: false,\n          values: [],\n        },\n        modals: {\n          setBookType: {},\n          sumBook: {},\n        },\n      },\n    }),\n  });\n  /**\n   * Observable that emits the value of form changes.\n   * @type {Observable}\n   */\n  private formValue$: Observable> = using(\n    () =>\n      this.stepperForm.valueChanges\n        .pipe(\n          debounceTime(200),\n          tap(\n            (\n              values: any // eslint-disable-line\n            ) => this._stepperStore.dispatch(formValueChange(values))\n          )\n        )\n        .subscribe(),\n    () => this._stepperStore.select(selectStepperEntities)\n  ).pipe(shareReplay());\n  public buttonDisable$ = combineLatest([this.formValue$, this.flagUrl$]).pipe(\n    switchMap(\n      (\n        valuesCombined: any //eslint-disable-line\n      ): Observable => of(!valuesCombined[0][valuesCombined[1]].check)\n    ),\n    shareReplay()\n  );\n\n  /**\n   * Retrieves the observable for form values.\n   * @type {Observable}\n   */\n  get formValues$(): Observable> {\n    return this.formValue$;\n  }\n\n  /**\n   * Retrieves the stepper form.\n   * @type {FormGroup}\n   */\n  get stepperForm() {\n    return this.steppForm;\n  }\n\n  /**\n   * Adds a new role to the 'roleOfMember' array in 'infoUser' control.\n   */\n  public addRoleOfMember() {\n    const newRole = this._fb.group({\n      id: 0,\n      value: '',\n      check: false,\n    });\n    this.stepperForm.controls.infoUser.controls.info.controls.roleOfMember.push(\n      newRole\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepperState.html":{"url":"interfaces/StepperState.html","title":"interface - StepperState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepperState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedId:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as StepperActions from './stepper.actions';\nimport { formValueChange } from './stepper.actions';\nimport { StepperEntity } from './stepper.models';\nimport { mockStepper } from './mock';\n\nexport const STEPPER_FEATURE_KEY = 'stepper';\n\nexport interface StepperState extends EntityState {\n  selectedId?: string | number; // which Stepper record has been selected\n  loaded: boolean; // has the Stepper list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface StepperPartialState {\n  readonly [STEPPER_FEATURE_KEY]: StepperState;\n}\n\nexport const stepperAdapter: EntityAdapter =\n  createEntityAdapter();\n\nexport const initialStepperState: StepperState = stepperAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n    entities: mockStepper(),\n  }\n);\n\nconst reducer = createReducer(\n  initialStepperState,\n  on(StepperActions.initStepper, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\n    stepperAdapter.setAll(stepper, {\n      ...state,\n      loaded: true,\n    })\n  ),\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    formValueChange,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n);\n\nexport function stepperReducer(state: StepperState, action: Action) {\n  return reducer(state, action);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepperStepsComponent.html":{"url":"components/StepperStepsComponent.html","title":"component - StepperStepsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepperStepsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stepper-steps/stepper-steps.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                stepper-steps\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            RouterLink\n                                ButtonComponent\n                            RouterLinkActive\n                            MatRippleModule\n                                FormBadgeComponent\n                                RenderYouDirective\n                \n            \n\n            \n                styleUrls\n                ./stepper-steps.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stepper-steps.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _destroyed$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _router\n                            \n                            \n                                    Private\n                                    Readonly\n                                _store\n                            \n                            \n                                    Readonly\n                                generativeService\n                            \n                            \n                                    Readonly\n                                stepperService\n                            \n                            \n                                steps$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextTab\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonDisabled$\n                            \n                            \n                                flagUrl$\n                            \n                            \n                                vm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ivan\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonDisabled$\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flagUrl$\n                    \n                \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vm\n                    \n                \n                \n                    \n                        Type :     FormStepper | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:59\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ivan\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextTab\n                        \n                    \n                \n            \n            \n                \nnextTab()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stepper-steps/stepper-steps.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _destroyed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        generativeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GenerativeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        stepperService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(StepperService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._store.select(selectStepsEntities)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stepper-steps/stepper-steps.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { MatRippleModule } from '@angular/material/core';\nimport { Store } from '@ngrx/store';\nimport {\n  BehaviorSubject,\n  map,\n  Observable,\n  of,\n  Subject,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs';\nimport { StepperService } from '../services/stepper.service';\nimport {\n  ButtonComponent,\n  FormBadgeComponent,\n  GenerativeService,\n} from 'ngx-ftx-forms';\nimport { FormStepper, selectStepsEntities, Step } from '../../+state';\nimport { RenderYouDirective } from 'ngx-fts-tooltip';\n\n@Component({\n  selector: 'stepper-steps',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    RouterLink,\n    ButtonComponent,\n    RouterLinkActive,\n    MatRippleModule,\n    FormBadgeComponent,\n    RenderYouDirective,\n  ],\n  templateUrl: './stepper-steps.component.html',\n  styleUrls: ['./stepper-steps.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepperStepsComponent implements OnDestroy {\n  private readonly _router = inject(Router);\n  private readonly _destroyed$ = new Subject();\n  private readonly _store = inject(Store);\n  readonly stepperService = inject(StepperService);\n  readonly generativeService = inject(GenerativeService);\n  steps$ = this._store.select(selectStepsEntities);\n  @Output() ivan? = new EventEmitter();\n  @Input() vm: FormStepper | any; //eslint-disable-line\n  @Input() flagUrl$: BehaviorSubject = new BehaviorSubject('');\n  @Input() buttonDisabled$: Observable = new Observable();\n  nextTab() {\n    return this.steps$\n      .pipe(\n        switchMap((step: Step[]) =>\n          of({\n            index: step.findIndex((v) => v.value === this.flagUrl$.value),\n            step,\n          })\n        ),\n        map((v) => v.step[v.index >= v.step.length - 1 ? 0 : v.index + 1]),\n        tap((value) => this._router.navigate([value.value])),\n        takeUntil(this._destroyed$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next(true);\n    this._destroyed$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n    \n     1\"\n      class=\"absolute bg-gray-200 w-full h-[1px] border-s bottom-1/2 border-solid border-gray-800 -z-10\"\n    >\n  \n  \n    Continue\n    \n  \n\n\n    \n\n    \n                \n                    ./stepper-steps.component.scss\n                \n                :host{\n  @apply w-full\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           1\"      class=\"absolute bg-gray-200 w-full h-[1px] border-s bottom-1/2 border-solid border-gray-800 -z-10\"    >        Continue      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'ngx-button-component'},{'name': 'FormBadgeComponent', 'selector': 'ngx-form-badge'},{'name': 'FormControlEntityComponent', 'selector': 'ngx-form-control-entity'},{'name': 'FormLabelComponent', 'selector': 'ngx-form-label'},{'name': 'FtxFormsComponent', 'selector': 'ngx-ftx-forms'},{'name': 'FtxSivanSharedComponent', 'selector': 'coagulu-ftx-sivan-shared'},{'name': 'FtxTooltipComponent', 'selector': 'ftx-tooltip'},{'name': 'InfoUserComponent', 'selector': 'info-user'},{'name': 'InputComponent', 'selector': 'ngx-input-component'},{'name': 'IntroComponent', 'selector': 'intro'},{'name': 'ReserveBookComponent', 'selector': 'reserve-book'},{'name': 'SpendMoneyComponent', 'selector': 'spend-money'},{'name': 'StepperComponent', 'selector': ''},{'name': 'StepperStepsComponent', 'selector': 'stepper-steps'}];\n    var DIRECTIVES = [{'name': 'FadeInOutDirective', 'selector': '[ngxFadeInOut]'},{'name': 'PapControlDirective', 'selector': '[ngxControl]'},{'name': 'PatchFormGroupValueDirective', 'selector': '[ngxFormGroupValues]'},{'name': 'RenderYouDirective', 'selector': '[renderYou] '},{'name': 'ScrollHintDirective', 'selector': '[sivanScrollHint]'}];\n    var ACTUAL_COMPONENT = {'name': 'StepperStepsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepperValues.html":{"url":"interfaces/StepperValues.html","title":"interface - StepperValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepperValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/stepper.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            check\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepperEntity {\n  steps: Array;\n  intro: {\n    icon: string;\n    check: boolean;\n    id: string;\n    values: Label[] | null;\n  };\n  infoUser: {\n    check: boolean;\n    icon: string;\n    id: string;\n    values: {\n      familyNumber: number;\n      roleOfMember: {\n        id: string;\n        value: string;\n        check: boolean;\n      }[];\n      childrens: number;\n    };\n  };\n  spendMoney: {\n    id: string;\n    icon: string;\n    check: boolean;\n    values: {\n      incoming: number;\n      spendMoney: number;\n      revenue: number;\n      categorySpendMoney: {\n        id: string;\n        value: number;\n        label: string;\n        scope: {\n          id: string;\n          label: string;\n          check: boolean;\n        }[];\n      }[];\n      recommendations: {\n        check: boolean;\n        label: string;\n      }[];\n    };\n  };\n  // Exteotera graph\n  reserveBook: {\n    icon: string;\n    id: string;\n    check: boolean;\n    values: {\n      id: string;\n      graph: {\n        id: string;\n        values: {\n          id: string;\n          label: string;\n          start: number;\n          end: number;\n        }[];\n        howMannyMonth: number;\n      };\n      reserve: {\n        id: string;\n        currentReserve: Label;\n        recommendationReserve: Label;\n        howMannyMonth: number;\n      };\n      details: {\n        id: string;\n        check: boolean;\n        values: BookDetail[];\n      };\n      modals: {\n        setBookType: Label;\n        sumBook: Label;\n      };\n    };\n  };\n}\n\nexport interface Label {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface StepperValues {\n  id: string;\n  values: string;\n  check: boolean;\n  icon: string;\n}\n\nexport interface BookDetail {\n  id: string;\n  name: string;\n  author: string;\n  subBook?: {\n    label: Label;\n    edit: boolean;\n    delete: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidatorConfig.html":{"url":"interfaces/ValidatorConfig.html","title":"interface - ValidatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorMsg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            option\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMsg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMsg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        option:         TypePattern | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypePattern | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TypeConstantEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeConstantEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeConstantEnum, TypePattern } from '../utils';\n\nexport interface ValidatorConfig {\n  type: TypeConstantEnum;\n  option?: TypePattern | number;\n  errorMsg?: string;\n}\n\nexport interface ValueToggle {\n  value: boolean;\n  description: string;\n}\n\nexport interface DataFormBuilder {\n  label?: string;\n  labelHint?: string;\n  value?: unknown;\n  typeInput?: TypeInput;\n  values?: DataFormBuilder[];\n  bulkValues?: DataFormBuilder[];\n  valueToggleShow?: ValueToggle[];\n  validators?: ValidatorConfig[];\n  placeholder?: string;\n  description?: DescriptionEntity;\n}\n\nexport interface DescriptionEntity {\n  text: string;\n  icon?: string;\n}\nexport type TypeInput =\n  | 'boolean'\n  | 'toggle'\n  | 'area'\n  | 'currency'\n  | 'dropdown'\n  | 'date'\n  | 'date-interval';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatorService.html":{"url":"injectables/ValidatorService.html","title":"injectable - ValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/service/validator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailValidator\n                            \n                            \n                                minCharValidator\n                            \n                            \n                                minValidator\n                            \n                            \n                                patternValidator\n                            \n                            \n                                requiredValidator\n                            \n                            \n                                validatorGenerators\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator(control: FormControl, errorMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { error: string | boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minCharValidator\n                        \n                    \n                \n            \n            \n                \nminCharValidator(control: FormControl, option: number, errorMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { error: string | boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minValidator\n                        \n                    \n                \n            \n            \n                \nminValidator(control: FormControl, option: number, errorMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { error: string | boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patternValidator\n                        \n                    \n                \n            \n            \n                \npatternValidator(control: FormControl, optionRegex, errorMsg?: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionRegex\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMsg\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { error: string | boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator(control: FormControl, errorMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { error: string | boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatorGenerators\n                        \n                    \n                \n            \n            \n                \nvalidatorGenerators()\n                \n            \n\n\n            \n                \n                    Defined in ftx-forms/src/lib/ftx-forms/service/validator.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TypeConstantEnum } from '../utils';\n\ntype ValidatorGenerator = (\n  control: FormControl | FormControl,\n  option: unknown,\n  errorMsg: string\n) => any; //eslint-disable-line\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidatorService {\n  requiredValidator(control: FormControl, errorMsg?: string) {\n    return control.value\n      ? null\n      : { error: errorMsg || 'This field Is must' || true };\n  }\n\n  minValidator(control: FormControl, option: number, errorMsg?: string) {\n    return control.value >= option ? null : { error: errorMsg ?? true };\n  }\n\n  minCharValidator(control: FormControl, option: number, errorMsg?: string) {\n    return String(control.value).length >= option ||\n      String(control.value).length === 0\n      ? null\n      : { error: errorMsg ?? true };\n  }\n\n  patternValidator(\n    control: FormControl,\n    optionRegex: unknown,\n    errorMsg?: string | undefined\n  ) {\n    const pattern = new RegExp(optionRegex as string);\n    return pattern instanceof RegExp\n      ? pattern.test(control.value)\n        ? null\n        : { error: errorMsg ?? true }\n      : null;\n  }\n\n  emailValidator(control: FormControl, errorMsg?: string) {\n    if (!control.value) {\n      return null;\n    }\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailPattern.test(control.value)\n      ? null\n      : { error: errorMsg ?? true };\n  }\n\n  validatorGenerators(): {\n    [key: string]: ValidatorGenerator;\n  } {\n    return {\n      [TypeConstantEnum.REQUIRED]: (control, _, errorMsg) =>\n        this.requiredValidator(control, errorMsg),\n      [TypeConstantEnum.MIN]: (control, option, errorMsg) => {\n        if (typeof option === 'number') {\n          return this.minValidator(control, option, errorMsg);\n        } else {\n          throw new Error('Invalid option for this validator');\n        }\n      },\n      [TypeConstantEnum.MIN_CHAR]: (control, option, errorMsg) => {\n        if (typeof option === 'number') {\n          return this.minCharValidator(control, option, errorMsg);\n        } else {\n          throw new Error('Invalid option for this validator');\n        }\n      },\n      [TypeConstantEnum.PATTERN]: (control, option, errorMsg) => {\n        if (typeof option === 'string' || option instanceof RegExp) {\n          return this.patternValidator(control, option, errorMsg);\n        } else {\n          throw new Error('Invalid option for this validator');\n        }\n      },\n      [TypeConstantEnum.EMAIL]: (control, _, errorMsg) => {\n        return this.emailValidator(control, errorMsg);\n      }, // Add more cases for other validator types as needed\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueToggle.html":{"url":"interfaces/ValueToggle.html","title":"interface - ValueToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValueToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeConstantEnum, TypePattern } from '../utils';\n\nexport interface ValidatorConfig {\n  type: TypeConstantEnum;\n  option?: TypePattern | number;\n  errorMsg?: string;\n}\n\nexport interface ValueToggle {\n  value: boolean;\n  description: string;\n}\n\nexport interface DataFormBuilder {\n  label?: string;\n  labelHint?: string;\n  value?: unknown;\n  typeInput?: TypeInput;\n  values?: DataFormBuilder[];\n  bulkValues?: DataFormBuilder[];\n  valueToggleShow?: ValueToggle[];\n  validators?: ValidatorConfig[];\n  placeholder?: string;\n  description?: DescriptionEntity;\n}\n\nexport interface DescriptionEntity {\n  text: string;\n  icon?: string;\n}\nexport type TypeInput =\n  | 'boolean'\n  | 'toggle'\n  | 'area'\n  | 'currency'\n  | 'dropdown'\n  | 'date'\n  | 'date-interval';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValuesClass.html":{"url":"interfaces/ValuesClass.html","title":"interface - ValuesClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValuesClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categorySpendMoney\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            graph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incoming\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modals\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recommendations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reserve\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            revenue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendMoney\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categorySpendMoney\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categorySpendMoney:         CategorySpendMoney[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategorySpendMoney[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         InfoUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InfoUser\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         Graph\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Graph\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incoming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incoming:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modals:         Modals\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Modals\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommendations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recommendations:         Recommendation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Recommendation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reserve\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reserve:         Reserve\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reserve\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revenue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revenue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendMoney\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendMoney:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValuesValue.html":{"url":"interfaces/ValuesValue.html","title":"interface - ValuesValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValuesValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/+state/mock.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const mockStepper = () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper);\n\n// Helper function to generate random strings for ids\nexport function generateRandomId(): string {\n  return Math.random().toString(36).substr(2, 40);\n}\nexport interface Step {\n  value: string;\n  label: string;\n  id: string;\n}\nexport interface FormStepper {\n  intro: InfoUser;\n  infoUser: InfoUser;\n  spendMoney: InfoUser;\n  reserveBook: InfoUser;\n  steps: Step[];\n}\n\nexport interface ValuesClass {\n  id?: string;\n  graph?: Graph;\n  reserve?: Reserve;\n  details?: InfoUser;\n  modals?: Modals;\n  incoming?: number;\n  spendMoney?: number;\n  revenue?: number;\n  categorySpendMoney?: CategorySpendMoney[];\n  recommendations?: Recommendation[];\n}\n\nexport interface InfoUser {\n  check: boolean;\n  id: string;\n  info?: Info;\n  icon?: string;\n  values?: ValuesValue[] | ValuesClass | null;\n}\n\nexport interface CategorySpendMoney {\n  id: string;\n  value: number;\n  label: string;\n  scope: Scope[];\n}\n\nexport interface Scope {\n  id: string;\n  label: string;\n  check: boolean;\n}\n\nexport interface Graph {\n  id: string;\n  values: GraphValue[];\n  howMannyMonth: number;\n}\n\nexport interface GraphValue {\n  id: string;\n  label: string;\n  start: number;\n  end: number;\n}\n\nexport interface Modals {\n  setBookType: SetBookType;\n  sumBook: SetBookType;\n}\n\nexport interface SetBookType {\n  id: string;\n  value: number;\n  labelCurrency: string;\n}\n\nexport interface Recommendation {\n  check: boolean;\n  label: string;\n}\n\nexport interface Reserve {\n  id: string;\n  currentReserve: SetBookType;\n  recommendationReserve: SetBookType;\n  howMannyMonth: number;\n}\n\nexport interface ValuesValue {\n  id: string;\n  name: string;\n  author: string;\n  genre: string;\n}\n\nexport interface Info {\n  familyNumber: number;\n  roleOfMember: RoleOfMember[];\n  childrens: number;\n}\n\nexport interface RoleOfMember {\n  id: number;\n  value: string;\n  check: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZoneAxeService.html":{"url":"injectables/ZoneAxeService.html","title":"injectable - ZoneAxeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZoneAxeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                buttonRect\n                            \n                            \n                                    Private\n                                    Readonly\n                                tooltipRect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                axes\n                            \n                            \n                                calculatePositionRecursively\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tooltip: HTMLDivElement, target: HTMLElement, renderer2: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tooltip\n                                                  \n                                                        \n                                                                    HTMLDivElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    HTMLElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        axes\n                        \n                    \n                \n            \n            \n                \naxes()\n                \n            \n\n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculatePositionRecursively\n                        \n                    \n                \n            \n            \n                \ncalculatePositionRecursively(buttonRect: DOMRect, tooltipRect: DOMRect, paddingTooltip: number, padding: number)\n                \n            \n\n\n            \n                \n                    Defined in ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buttonRect\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tooltipRect\n                                    \n                                            DOMRect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paddingTooltip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    padding\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        buttonRect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DOMRect\n\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tooltipRect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DOMRect\n\n                    \n                \n                    \n                        \n                                Defined in ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Renderer2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZoneAxeService {\n  private readonly tooltipRect: DOMRect;\n  private readonly buttonRect: DOMRect;\n\n  constructor(\n    private tooltip: HTMLDivElement,\n    private readonly target: HTMLElement,\n    private readonly renderer2: Renderer2\n  ) {\n    this.tooltipRect = tooltip.getBoundingClientRect();\n    this.buttonRect = target.getBoundingClientRect();\n  }\n\n  axes(): { top: string; left: string } {\n    const padding = 40;\n    const paddingTooltip = 16;\n\n    const position = this.calculatePositionRecursively(\n      this.buttonRect,\n      this.tooltipRect,\n      paddingTooltip,\n      padding\n    );\n    return position;\n  }\n\n  calculatePositionRecursively(\n    buttonRect: DOMRect,\n    tooltipRect: DOMRect,\n    paddingTooltip: number,\n    padding: number\n  ): {\n    top: string;\n    left: string;\n  } {\n    const arrowFct = this.tooltip.children[0].children[0];\n\n    const centerX = buttonRect.left + buttonRect.width / 2;\n    const centerY =\n      buttonRect.bottom - buttonRect.height / 2 - tooltipRect.height / 2;\n\n    const position = {\n      top: '',\n      left: '',\n    };\n    if (\n      buttonRect.right + tooltipRect.width + padding = -40\n    ) {\n      position.top =\n        centerY >= 0 ? `${centerY}` : `${buttonRect.top + 10 - paddingTooltip}`;\n      position.left = `${centerX + paddingTooltip + buttonRect.width / 2}`;\n      this.renderer2.addClass(arrowFct, 'right');\n\n      if (centerY  0 &&\n      centerY + tooltipRect.height = 0 ? `${centerY}` : `${buttonRect.top + 10 - paddingTooltip}`;\n      position.left = `${buttonRect.left + paddingTooltip - tooltipRect.width}`;\n      this.renderer2.addClass(arrowFct, 'left');\n    } else if (\n      buttonRect.bottom + tooltipRect.height + padding  0) {\n      position.top = `${buttonRect.top - paddingTooltip - tooltipRect.height}`;\n      position.left = `${centerX - tooltipRect.width / 2}`;\n      this.renderer2.addClass(arrowFct, 'top');\n\n      if (centerX + tooltipRect.width / 2 > window.innerWidth) {\n        position.left = `${\n          centerX - tooltipRect.width + buttonRect.width / 2 + paddingTooltip\n        }`;\n        this.renderer2.setStyle(\n          arrowFct,\n          'left',\n          `${(tooltipRect.width - tooltipRect.width / 4) / 16}rem`\n        );\n      }\n    } else {\n      // Default position\n      return position;\n    }\n\n    return position;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts\n            \n            variable\n            Open\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts\n            \n            variable\n            Success\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts\n            \n            variable\n            WorkBack\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts\n            \n            component\n            FormBadgeComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts\n            \n            interface\n            ActionBadge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts\n            \n            component\n            FormControlEntityComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts\n            \n            function\n            injectNgControl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts\n            \n            component\n            FormLabelComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts\n            \n            directive\n            FadeInOutDirective\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts\n            \n            directive\n            PapControlDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts\n            \n            directive\n            PatchFormGroupValueDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts\n            \n            component\n            FtxFormsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n            \n            interface\n            DataFormBuilder\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n            \n            interface\n            DescriptionEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n            \n            interface\n            ValidatorConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n            \n            interface\n            ValueToggle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/service/generative.service.ts\n            \n            injectable\n            GenerativeService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts\n            \n            injectable\n            GenerateFormBuilderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/service/validator.service.ts\n            \n            injectable\n            ValidatorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts\n            \n            variable\n            PrimaryEnable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts\n            \n            directive\n            ScrollHintDirective\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                ftx-sivan-shared/src/lib/ftx-sivan-shared/ftx-sivan-shared.component.ts\n            \n            component\n            FtxSivanSharedComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts\n            \n            directive\n            RenderYouDirective\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts\n            \n            component\n            FtxTooltipComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts\n            \n            injectable\n            ZoneAxeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            CategorySpendMoney\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            FormStepper\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Graph\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            GraphValue\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Info\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            InfoUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Modals\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Recommendation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Reserve\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            RoleOfMember\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Scope\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            SetBookType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            Step\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            ValuesClass\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            interface\n            ValuesValue\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            function\n            generateRandomId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/mock.ts\n            \n            variable\n            mockStepper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.actions.ts\n            \n            variable\n            formValueChangeReserve\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.actions.ts\n            \n            variable\n            initReserve\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.actions.ts\n            \n            variable\n            loadReserveFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.actions.ts\n            \n            variable\n            loadReserveSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.actions.ts\n            \n            variable\n            prefixStepper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.effects.ts\n            \n            injectable\n            ReserveEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.models.ts\n            \n            interface\n            ReserveEntity\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            interface\n            ReservePartialState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            interface\n            ReserveState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            function\n            reserveReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            variable\n            initialReserveState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            variable\n            RESERVE_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.reducer.ts\n            \n            variable\n            reserveAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectAllReserve\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectReserveEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectReserveError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectReserveLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectReserveState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            selectSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/reserve/reserve.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            formValueChange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            getSteps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            initStepper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            loadStepperFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            loadStepperSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.actions.ts\n            \n            variable\n            prefixStepper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.effects.ts\n            \n            injectable\n            StepperEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.models.ts\n            \n            interface\n            BookDetail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.models.ts\n            \n            interface\n            Label\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.models.ts\n            \n            interface\n            StepperEntity\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.models.ts\n            \n            interface\n            StepperValues\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            interface\n            StepperPartialState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            interface\n            StepperState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            function\n            stepperReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            variable\n            initialStepperState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            variable\n            STEPPER_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.reducer.ts\n            \n            variable\n            stepperAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectAllStepper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectStepperEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectStepperError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectStepperLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectStepperState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            selectStepsEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/+state/stepper.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/infoUser/info-user.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/infoUser/info-user.component.ts\n            \n            component\n            InfoUserComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/intro/intro.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/intro/intro.component.ts\n            \n            component\n            IntroComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/reserveBook/reserve-book.component.ts\n            \n            component\n            ReserveBookComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contentSteps/spendMoney/spend-money.component.ts\n            \n            component\n            SpendMoneyComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/services/stepper.service.ts\n            \n            injectable\n            StepperService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/components/stepper-steps/stepper-steps.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/stepper-steps/stepper-steps.component.ts\n            \n            component\n            StepperStepsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/stepper/stepper.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/stepper/stepper.component.ts\n            \n            component\n            StepperComponent\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~16.1.0\n        \n            @angular/cdk : ^16.1.6\n        \n            @angular/common : ~16.1.0\n        \n            @angular/compiler : ~16.1.0\n        \n            @angular/core : ~16.1.0\n        \n            @angular/forms : ~16.1.0\n        \n            @angular/material : ^16.1.6\n        \n            @angular/platform-browser : ~16.1.0\n        \n            @angular/platform-browser-dynamic : ~16.1.0\n        \n            @angular/router : ~16.1.0\n        \n            @ngrx/component-store : ~16.0.0\n        \n            @ngrx/effects : ~16.0.0\n        \n            @ngrx/entity : ~16.0.0\n        \n            @ngrx/router-store : ~16.0.0\n        \n            @ngrx/store : ~16.0.0\n        \n            @nx/angular : 16.5.5\n        \n            ngx-liburg-icon : ^0.0.26\n        \n            react : ^18.2.0\n        \n            react-dom : ^18.2.0\n        \n            reset-css : ^5.0.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstantsEnum   (ftx-forms/.../constants.enum.ts)\n                        \n                        \n                            TypeConstantEnum   (ftx-forms/.../constants.enum.ts)\n                        \n                        \n                            TypePattern   (ftx-forms/.../constants.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConstantsEnum\n                    \n                \n                        \n                            \n                                 ZERO\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TypeConstantEnum\n                    \n                \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 MAX\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 MIN\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 NUMBER\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 PATTERN\n                            \n                        \n                        \n                            \n                                Value : pattern\n                            \n                        \n                        \n                            \n                                 REQUIRED\n                            \n                        \n                        \n                            \n                                Value : required\n                            \n                        \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 MIN_CHAR\n                            \n                        \n                        \n                            \n                                Value : minChar\n                            \n                        \n                        \n                            \n                                 ONLY_CHAR\n                            \n                        \n                        \n                            \n                                Value : only_char\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TypePattern\n                    \n                \n                        \n                            \n                                 ONLY_NUMBER\n                            \n                        \n                        \n                            \n                                Value : ^[0-9]+$\n                            \n                        \n                        \n                            \n                                 ONLY_CHAR\n                            \n                        \n                        \n                            \n                                Value : ^[a-zA-Z\\s]*$\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            generateRandomId   (src/.../mock.ts)\n                        \n                        \n                            injectNgControl   (ftx-forms/.../form-control-entity.component.ts)\n                        \n                        \n                            reserveReducer   (src/.../reserve.reducer.ts)\n                        \n                        \n                            stepperReducer   (src/.../stepper.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/+state/mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomId\n                        \n                    \n                \n            \n            \n                \ngenerateRandomId()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        injectNgControl\n                        \n                    \n                \n            \n            \n                \ninjectNgControl()\n                \n            \n\n\n\n\n        \n    \n    src/app/+state/reserve/reserve.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reserveReducer\n                        \n                    \n                \n            \n            \n                \nreserveReducer(state, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/+state/stepper.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stepperReducer\n                        \n                    \n                \n            \n            \n                \nstepperReducer(state: StepperState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                StepperState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCoagulu\nStart the app\nTo start the development server run npm start. Open your browser and navigate to http://localhost:4200/. Happy coding!\nPre Commit\n    Lint\n    npm run lint:fix\n    Test\n    npm run testUsage\nLogic\nimport { Component } from '@angular/core';\nimport { FtxFormsComponent } from './ftx-forms.component';\n\n@Component({\n  imports: [FtxFormsComponent],\n  // ...\n})\nexport class YourFormComponent {\n  dynamicForm: FormGroup; // Initialize your form group\n  // Your JSON configuration for the form\n  jsonData: DataFormBuilder = {\n    // Your configuration data here\n  };\n}HTML Template\nConfiguration\n/** The JSON configuration (jsonData) defines the structure and properties of \n    the dynamic form. \n    Refer to the JSON configuration structure in your DataFormBuilder interface for guidance.\n*/Dependencies\n\nAngular Forms\nAngular Material\nAngular Common\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TypeBadge   (ftx-forms/.../type-form.type.ts)\n                        \n                        \n                            TypeInput   (ftx-forms/.../data-form-builder.ts)\n                        \n                        \n                            TypeSide   (ftx-forms/.../type-form.type.ts)\n                        \n                        \n                            ValidatorGenerator   (ftx-forms/.../validator.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts\n    \n    \n        \n            \n                \n                    \n                    TypeBadge\n                \n            \n            \n                \n                        \"open\" | \"done\" | \"error\" | \"warning\" | \"success\" | \"pfm\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TypeSide\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"top\" | \"bottom\" | \"middle\"\n\n                \n            \n        \n    \n    ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts\n    \n    \n        \n            \n                \n                    \n                    TypeInput\n                \n            \n            \n                \n                        \"boolean\" | \"toggle\" | \"area\" | \"currency\" | \"dropdown\" | \"date\" | \"date-interval\"\n\n                \n            \n        \n    \n    ftx-forms/src/lib/ftx-forms/service/validator.service.ts\n    \n    \n        \n            \n                \n                    \n                    ValidatorGenerator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appRoutes   (src/.../app.routes.ts)\n                        \n                        \n                            formValueChange   (src/.../stepper.actions.ts)\n                        \n                        \n                            formValueChangeReserve   (src/.../reserve.actions.ts)\n                        \n                        \n                            getSteps   (src/.../stepper.actions.ts)\n                        \n                        \n                            initialReserveState   (src/.../reserve.reducer.ts)\n                        \n                        \n                            initialStepperState   (src/.../stepper.reducer.ts)\n                        \n                        \n                            initReserve   (src/.../reserve.actions.ts)\n                        \n                        \n                            initStepper   (src/.../stepper.actions.ts)\n                        \n                        \n                            loadReserveFailure   (src/.../reserve.actions.ts)\n                        \n                        \n                            loadReserveSuccess   (src/.../reserve.actions.ts)\n                        \n                        \n                            loadStepperFailure   (src/.../stepper.actions.ts)\n                        \n                        \n                            loadStepperSuccess   (src/.../stepper.actions.ts)\n                        \n                        \n                            mockStepper   (src/.../mock.ts)\n                        \n                        \n                            Open   (ftx-forms/.../form-badge.component.stories.ts)\n                        \n                        \n                            prefixStepper   (src/.../stepper.actions.ts)\n                        \n                        \n                            prefixStepper   (src/.../reserve.actions.ts)\n                        \n                        \n                            Primary   (src/.../app.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../stepper.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-forms/.../ftx-forms.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-tooltip/.../ftx-tooltip.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../stepper-steps.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../intro.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../spend-money.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../reserve-book.component.stories.ts)\n                        \n                        \n                            Primary   (src/.../info-user.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-forms/.../form-control-entity.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-forms/.../form-label.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-forms/.../button.component.stories.ts)\n                        \n                        \n                            Primary   (ftx-forms/.../input.component.stories.ts)\n                        \n                        \n                            PrimaryEnable   (ftx-forms/.../button.component.stories.ts)\n                        \n                        \n                            reducer   (src/.../stepper.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reserve.reducer.ts)\n                        \n                        \n                            RESERVE_FEATURE_KEY   (src/.../reserve.reducer.ts)\n                        \n                        \n                            reserveAdapter   (src/.../reserve.reducer.ts)\n                        \n                        \n                            selectAllReserve   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectAllStepper   (src/.../stepper.selectors.ts)\n                        \n                        \n                            selectEntity   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectReserveEntities   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectReserveError   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectReserveLoaded   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectReserveState   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectSelectedId   (src/.../reserve.selectors.ts)\n                        \n                        \n                            selectStepperEntities   (src/.../stepper.selectors.ts)\n                        \n                        \n                            selectStepperError   (src/.../stepper.selectors.ts)\n                        \n                        \n                            selectStepperLoaded   (src/.../stepper.selectors.ts)\n                        \n                        \n                            selectStepperState   (src/.../stepper.selectors.ts)\n                        \n                        \n                            selectStepsEntities   (src/.../stepper.selectors.ts)\n                        \n                        \n                            STEPPER_FEATURE_KEY   (src/.../stepper.reducer.ts)\n                        \n                        \n                            stepperAdapter   (src/.../stepper.reducer.ts)\n                        \n                        \n                            Success   (ftx-forms/.../form-badge.component.stories.ts)\n                        \n                        \n                            Template   (ftx-forms/.../form-badge.component.stories.ts)\n                        \n                        \n                               (src/.../stepper.selectors.ts)\n                        \n                        \n                               (src/.../reserve.selectors.ts)\n                        \n                        \n                            WorkBack   (ftx-forms/.../form-badge.component.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideEffects(ReserveEffects),\n    provideState(fromReserve.RESERVE_FEATURE_KEY, fromReserve.reserveReducer),\n    provideEffects(StepperEffects),\n    provideStore(),\n    provideState(fromStepper.STEPPER_FEATURE_KEY, fromStepper.stepperReducer),\n    provideStoreDevtools({ maxAge: 25 }),\n    provideRouter(appRoutes, withEnabledBlockingInitialNavigation()),\n    importProvidersFrom(IconCoreModule),\n    provideAnimations(),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '',\n    loadComponent: () =>\n      import('./components/stepper/stepper.component').then(\n        (c) => c.StepperComponent\n      ),\n    resolve: [\n      () => {\n        const stepperService = inject(StepperService);\n        const router = inject(Router);\n        router.events\n          .pipe(\n            filter((event: any) => event instanceof NavigationEnd), //eslint-disable-line\n            map((v: NavigationEnd) => v.url.split('/')[1]),\n            tap((url) => stepperService.flagUrl$.next(url)),\n            catchError((err) => {\n              console.warn(err);\n              return of(false);\n            })\n          )\n          .subscribe();\n      },\n    ],\n    children: [\n      {\n        path: 'intro',\n        loadComponent: () =>\n          import('./components/contentSteps/intro/intro.component').then(\n            (c) => c.IntroComponent\n          ),\n      },\n      {\n        path: 'infoUser',\n        loadComponent: () =>\n          import('./components/contentSteps/infoUser/info-user.component').then(\n            (c) => c.InfoUserComponent\n          ),\n      },\n      {\n        path: 'spendMoney',\n        loadComponent: () =>\n          import(\n            './components/contentSteps/spendMoney/spend-money.component'\n          ).then((c) => c.SpendMoneyComponent),\n      },\n      {\n        path: 'reserveBook',\n        loadComponent: () =>\n          import(\n            './components/contentSteps/reserveBook/reserve-book.component'\n          ).then((c) => c.ReserveBookComponent),\n      },\n      {\n        path: '**',\n        redirectTo: 'reserveBook',\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/+state/stepper.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formValueChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  `[${prefixStepper}] Form Value change`,\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSteps\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  `[${prefixStepper}] Get Steps`,\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initStepper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(`[${prefixStepper} Page] Init`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStepperFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  `[${prefixStepper}/API] Load Stepper Failure`,\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStepperSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  `[${prefixStepper}/API] Load Stepper Success`,\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefixStepper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Stepper'\n                    \n                \n\n\n        \n    \n\n    src/app/+state/reserve/reserve.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formValueChangeReserve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  `[${prefixStepper}] Form Value change`,\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initReserve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Reserve Page] Init')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadReserveFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Reserve/API] Load Reserve Failure',\n  //eslint-disable-next-line\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadReserveSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Reserve/API] Load Reserve Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefixStepper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Reserve'\n                    \n                \n\n\n        \n    \n\n    src/app/+state/reserve/reserve.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialReserveState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReserveState\n\n                    \n                \n                \n                    \n                        Default value : reserveAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n  }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialReserveState,\n  on(ReserveActions.initReserve, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\n  ),\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    ReserveActions.formValueChangeReserve,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESERVE_FEATURE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'reserve'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reserveAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityAdapter\n\n                    \n                \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n\n    src/app/+state/stepper.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialStepperState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StepperState\n\n                    \n                \n                \n                    \n                        Default value : stepperAdapter.getInitialState(\n  {\n    // set initial required properties\n    loaded: false,\n    entities: mockStepper(),\n  }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialStepperState,\n  on(StepperActions.initStepper, (state) => ({\n    ...state,\n    loaded: false,\n    error: null,\n  })),\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\n    stepperAdapter.setAll(stepper, {\n      ...state,\n      loaded: true,\n    })\n  ),\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n  on(\n    formValueChange,\n    (\n      state,\n      {\n        type, //eslint-disable-line\n        ...update\n      }\n    ) => ({\n      ...state,\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\n    })\n  )\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STEPPER_FEATURE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'stepper'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepperAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityAdapter\n\n                    \n                \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n\n    src/app/+state/mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockStepper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  ({\n    intro: {\n      check: true,\n      id: generateRandomId(),\n      icon: 'fa_brands:sitrox',\n      values: null,\n    } as InfoUser,\n    infoUser: {\n      check: true,\n      id: generateRandomId(),\n      info: {\n        familyNumber: 4,\n        roleOfMember: [\n          {\n            id: 0,\n            value: 'Parent',\n            check: true,\n          },\n          {\n            id: 1,\n            value: 'Child',\n            check: false,\n          },\n        ],\n        childrens: 2,\n      },\n      icon: 'fa_brands:twitter',\n    } as InfoUser,\n    spendMoney: {\n      id: generateRandomId(),\n      check: true,\n      values: {\n        incoming: 5000,\n        spendMoney: 3000,\n        revenue: 2000,\n        categorySpendMoney: [\n          {\n            id: generateRandomId(),\n            value: 100,\n            label: 'Groceries',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Food',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Drinks',\n                check: false,\n              },\n            ],\n          },\n          {\n            id: generateRandomId(),\n            value: 500,\n            label: 'Entertainment',\n            scope: [\n              {\n                id: generateRandomId(),\n                label: 'Movies',\n                check: true,\n              },\n              {\n                id: generateRandomId(),\n                label: 'Concerts',\n                check: false,\n              },\n            ],\n          },\n        ],\n        recommendations: [\n          {\n            check: true,\n            label: 'Cut down on eating out',\n          },\n          {\n            check: false,\n            label: 'Cancel unused subscriptions',\n          },\n        ],\n      },\n      icon: 'fa_solid:music',\n    } as InfoUser,\n    reserveBook: {\n      id: generateRandomId(),\n      check: false,\n      values: {\n        id: generateRandomId(),\n        graph: {\n          id: generateRandomId(),\n          values: [\n            {\n              id: generateRandomId(),\n              label: 'Jan',\n              start: 500,\n              end: 800,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Feb',\n              start: 800,\n              end: 1000,\n            },\n            {\n              id: generateRandomId(),\n              label: 'Mar',\n              start: 1000,\n              end: 1200,\n            },\n          ],\n          howMannyMonth: 3,\n        },\n        reserve: {\n          id: generateRandomId(),\n          currentReserve: {\n            id: generateRandomId(),\n            value: 1000,\n            labelCurrency: 'USD',\n          },\n          recommendationReserve: {\n            id: generateRandomId(),\n            value: 1200,\n            labelCurrency: 'USD',\n          },\n          howMannyMonth: 6,\n        },\n        details: {\n          id: generateRandomId(),\n          check: true,\n          values: [\n            {\n              id: generateRandomId(),\n              name: 'Book 1',\n              author: 'Author A',\n              genre: 'Fiction',\n            },\n            {\n              id: generateRandomId(),\n              name: 'Book 2',\n              author: 'Author B',\n              genre: 'Mystery',\n            },\n          ],\n        },\n        modals: {\n          setBookType: {\n            id: generateRandomId(),\n            value: 50,\n            labelCurrency: 'USD',\n          },\n          sumBook: {\n            id: generateRandomId(),\n            value: 30,\n            labelCurrency: 'USD',\n          },\n        },\n      },\n      icon: 'fa_brands:codepen',\n    } as InfoUser,\n    steps: [\n      {\n        value: 'intro',\n        id: generateRandomId(),\n        label: 'Intro',\n      },\n      {\n        value: 'infoUser',\n        id: generateRandomId(),\n        label: 'Info User',\n      },\n      {\n        value: 'spendMoney',\n        id: generateRandomId(),\n        label: 'Spend Money',\n      },\n      {\n        value: 'reserveBook',\n        id: generateRandomId(),\n        label: 'ReserveBook',\n      },\n    ] as Step[],\n  } as FormStepper)\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Success\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FormBadgeComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WorkBack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n\n    src/app/app.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: AppComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/stepper/stepper.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: StepperComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: FtxFormsComponent) => ({\n    props: args,\n  }),\n  args: {\n    dynamicForm: {} as FormGroup,\n    jsonData: '',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: FtxTooltipComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/stepper-steps/stepper-steps.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: StepperStepsComponent) => ({\n    props: args,\n  }),\n  args: {\n    vm: {\n      intro: {\n        icon: 'fa_brands:sitrox',\n      },\n      retrieve: {\n        icon: 'fa_brands:sitrox',\n      },\n      steps: [\n        {\n          value: 'intro',\n          id: 1,\n          label: 'intro',\n        },\n        {\n          value: 'retrieve',\n          id: 2,\n          label: 'intro',\n        },\n      ],\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/contentSteps/intro/intro.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: IntroComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: SpendMoneyComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: ReserveBookComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/contentSteps/infoUser/info-user.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: InfoUserComponent) => ({\n    props: args,\n  }),\n  args: {},\n}\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: FormControlEntityComponent) => ({\n    props: args,\n  }),\n  args: {\n    label: '',\n    typeInput: 'text',\n    placeholderInput: '',\n    labelInput: 'Complete label',\n    isFormArray: false,\n    toggleData: [{ value: false, description: 'default' }],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: FormLabelComponent) => ({\n    props: args,\n  }),\n  args: {\n    isFormArray: false,\n    typeInput: 'boolean',\n    actionBadge: [\n      { side: 'middle', action: () => console.log('TEST'), text: 'sss' },\n    ],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: ButtonComponent) => ({\n    props: args,\n    template: `\n      \n        TEST\n\n    `,\n  }),\n  args: {\n    roundedFull: '!rounded-md',\n    disable: true,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PrimaryEnable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: ButtonComponent) => ({\n    props: args,\n    template: `\n      \n        TEST\n\n    `,\n  }),\n  args: {\n    roundedFull: '!rounded-full',\n    disable: false,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  render: (args: InputComponent) => ({\n    props: args,\n  }),\n  args: {\n    typeInput: 'text',\n    placeholderInput: '',\n    labelInput: 'Complete label',\n    toggleData: [{ value: false, description: 'default' }],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/+state/reserve/reserve.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectAllReserve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveState,\n  (state: ReserveState) => selectAll(state)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectEntity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveEntities,\n  selectSelectedId,\n  (entities, selectedId) => (selectedId ? entities[selectedId] : undefined)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectReserveEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveState,\n  (state: ReserveState) => selectEntities(state)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectReserveError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveState,\n  (state: ReserveState) => state.error\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectReserveLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveState,\n  (state: ReserveState) => state.loaded\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectReserveState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(RESERVE_FEATURE_KEY)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSelectedId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectReserveState,\n  (state: ReserveState) => state.selectedId\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : reserveAdapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/app/+state/stepper.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectAllStepper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectStepperState,\n  (state: StepperState) => selectAll(state)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStepperEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectStepperState,\n  (state: StepperState) => selectEntities(state)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStepperError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectStepperState,\n  (state: StepperState) => state.error\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStepperLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectStepperState,\n  (state: StepperState) => state.loaded\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStepperState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(STEPPER_FEATURE_KEY)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStepsEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  getSteps,\n  (state: {\n    stepper: {\n      entities: StepperEntity;\n    };\n  }) => state.stepper.entities.steps\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : stepperAdapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
