(self.webpackChunk_coagulu_source=self.webpackChunk_coagulu_source||[]).push([[179],{"./ftx-forms lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-forms(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/lib/ftx-forms/components/formBadge/form-badge.component.stories":["./ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts",943,640,67,91],"./src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts",943,640,67,91],"./src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories":["./ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts",943,640,21,149,888,494],"./src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts",943,640,21,149,888,494],"./src/lib/ftx-forms/components/formLabel/form-label.component.stories":["./ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts",943,640,829],"./src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts",943,640,829],"./src/lib/ftx-forms/ftx-forms.component.stories":["./ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts",943,640,21,149,193,888,24,324],"./src/lib/ftx-forms/ftx-forms.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts",943,640,21,149,193,888,24,324],"./src/lib/ftx-forms/shared/button/button.component.stories":["./ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts",943,193,955],"./src/lib/ftx-forms/shared/button/button.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts",943,193,955],"./src/lib/ftx-forms/shared/multiple-input/multiple-input.component.stories":["./ftx-forms/src/lib/ftx-forms/shared/multiple-input/multiple-input.component.stories.ts",943,640,21,149,888,615],"./src/lib/ftx-forms/shared/multiple-input/multiple-input.component.stories.ts":["./ftx-forms/src/lib/ftx-forms/shared/multiple-input/multiple-input.component.stories.ts",943,640,21,149,888,615]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./ftx-forms lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-forms(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"./ftx-sivan-shared lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-sivan-shared(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/lib/components/input/sivan-input.component.stories":["./ftx-sivan-shared/src/lib/components/input/sivan-input.component.stories.ts",943,640,21,67,279],"./src/lib/components/input/sivan-input.component.stories.ts":["./ftx-sivan-shared/src/lib/components/input/sivan-input.component.stories.ts",943,640,21,67,279]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./ftx-sivan-shared lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-sivan-shared(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"./ftx-tooltip lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-tooltip(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/lib/ftx-tooltip/ftx-tooltip.component.stories":["./ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts",763],"./src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts":["./ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts",763]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return __webpack_require__.e(ids[1]).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./ftx-tooltip lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-tooltip(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"./src/styles.scss?ngGlobalStyle":()=>{},"./.storybook/preview.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,decorators:()=>decorators});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"ActionBadge","id":"interface-ActionBadge-092552328ac19d37ce538b0d2f839fdcdca113be207169d491c43b585ceb364d4784f0219caa5d9a5b5d48c5543d72c1642c5f3590bee24a2579b17c8b123b36","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  inject,\\n  Input,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TypeBadge, TypeSide } from \'../../utils\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { GenerativeService } from \'../../service\';\\n\\nexport interface ActionBadge {\\n  side: TypeSide;\\n  action: () => unknown;\\n  icon?: string;\\n  text: string;\\n}\\n@Component({\\n  selector: \'ngx-form-badge\',\\n  standalone: true,\\n  imports: [CommonModule, MatIconModule],\\n  templateUrl: \'./form-badge.component.html\',\\n  styleUrls: [\'./form-badge.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FormBadgeComponent {\\n  protected readonly _generativeService = inject(GenerativeService);\\n\\n  /**\\n   * Type of badge\\n   */\\n  @Input()\\n  typeBadge: TypeBadge = \'error\';\\n\\n  /**\\n   * Action\\n   */\\n  @Input()\\n  actionBadge: ActionBadge[] = [\\n    { side: \'middle\', action: () => console.log(\'TEST\'), text: \'Nothig\' },\\n  ];\\n}\\n","properties":[{"name":"action","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":14},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"side","deprecated":false,"deprecationMessage":"","type":"TypeSide","optional":false,"description":"","line":13},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"BookDetail","id":"interface-BookDetail-88aa753d43aa073e25569fe9940e705d5893f0c10b0f5ce749246b056d2835433f871ed1558da7ca866e2432d49b2e60ffbe645ed1026ed1f881c576e7c373be","file":"src/app/+state/stepper.models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface StepperEntity {\\n  steps: Array<{\\n    value: string;\\n    label: string;\\n    id: string;\\n  }>;\\n  intro: {\\n    icon: string;\\n    check: boolean;\\n    id: string;\\n    values: Label[] | null;\\n  };\\n  infoUser: {\\n    check: boolean;\\n    icon: string;\\n    id: string;\\n    values: {\\n      familyNumber: number;\\n      roleOfMember: {\\n        id: string;\\n        value: string;\\n        check: boolean;\\n      }[];\\n      childrens: number;\\n    };\\n  };\\n  spendMoney: {\\n    id: string;\\n    icon: string;\\n    check: boolean;\\n    values: {\\n      incoming: number;\\n      spendMoney: number;\\n      revenue: number;\\n      categorySpendMoney: {\\n        id: string;\\n        value: number;\\n        label: string;\\n        scope: {\\n          id: string;\\n          label: string;\\n          check: boolean;\\n        }[];\\n      }[];\\n      recommendations: {\\n        check: boolean;\\n        label: string;\\n      }[];\\n    };\\n  };\\n  // Exteotera graph\\n  reserveBook: {\\n    icon: string;\\n    id: string;\\n    check: boolean;\\n    values: {\\n      id: string;\\n      graph: {\\n        id: string;\\n        values: {\\n          id: string;\\n          label: string;\\n          start: number;\\n          end: number;\\n        }[];\\n        howMannyMonth: number;\\n      };\\n      reserve: {\\n        id: string;\\n        currentReserve: Label;\\n        recommendationReserve: Label;\\n        howMannyMonth: number;\\n      };\\n      details: {\\n        id: string;\\n        check: boolean;\\n        values: BookDetail[];\\n      };\\n      modals: {\\n        setBookType: Label;\\n        sumBook: Label;\\n      };\\n    };\\n  };\\n}\\n\\nexport interface Label {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface StepperValues {\\n  id: string;\\n  values: string;\\n  check: boolean;\\n  icon: string;\\n}\\n\\nexport interface BookDetail {\\n  id: string;\\n  name: string;\\n  author: string;\\n  subBook?: {\\n    label: Label;\\n    edit: boolean;\\n    delete: boolean;\\n  };\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":106},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":104},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":105},{"name":"subBook","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":107}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"CategorySpendMoney","id":"interface-CategorySpendMoney-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":225},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":227},{"name":"scope","deprecated":false,"deprecationMessage":"","type":"Scope[]","optional":false,"description":"","line":228},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":226}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"DataFormBuilder","id":"interface-DataFormBuilder-7640c7065352a7040e886517f153114fcf6b3f0ad89dab46875933dda85f957da58547fb4e08e59ddf943a6a3dd1fdcb465da5c69589b0c77a42eef7216cc7d1","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TypeConstantEnum, TypePattern } from \'../utils\';\\n\\nexport interface ValidatorConfig {\\n  type: TypeConstantEnum;\\n  option?: TypePattern | number;\\n  errorMsg?: string;\\n}\\n\\nexport interface ValueToggle {\\n  value: boolean;\\n  description: string;\\n}\\n\\nexport interface DataFormBuilder {\\n  label?: string;\\n  labelHint?: string;\\n  value?: unknown;\\n  typeInput?: TypeInput;\\n  values?: DataFormBuilder[];\\n  bulkValues?: DataFormBuilder[];\\n  valueToggleShow?: ValueToggle[];\\n  validators?: ValidatorConfig[];\\n  placeholder?: string;\\n  description?: DescriptionEntity;\\n}\\n\\nexport interface DescriptionEntity {\\n  text: string;\\n  icon?: string;\\n}\\nexport type TypeInput =\\n  | \'boolean\'\\n  | \'toggle\'\\n  | \'area\'\\n  | \'currency\'\\n  | \'dropdown\'\\n  | \'date\'\\n  | \'date-interval\';\\n","properties":[{"name":"bulkValues","deprecated":false,"deprecationMessage":"","type":"DataFormBuilder[]","optional":true,"description":"","line":20},{"name":"description","deprecated":false,"deprecationMessage":"","type":"DescriptionEntity","optional":true,"description":"","line":24},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"labelHint","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"placeholder","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":23},{"name":"typeInput","deprecated":false,"deprecationMessage":"","type":"TypeInput","optional":true,"description":"","line":18},{"name":"validators","deprecated":false,"deprecationMessage":"","type":"ValidatorConfig[]","optional":true,"description":"","line":22},{"name":"value","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":17},{"name":"values","deprecated":false,"deprecationMessage":"","type":"DataFormBuilder[]","optional":true,"description":"","line":19},{"name":"valueToggleShow","deprecated":false,"deprecationMessage":"","type":"ValueToggle[]","optional":true,"description":"","line":21}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"DescriptionEntity","id":"interface-DescriptionEntity-7640c7065352a7040e886517f153114fcf6b3f0ad89dab46875933dda85f957da58547fb4e08e59ddf943a6a3dd1fdcb465da5c69589b0c77a42eef7216cc7d1","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TypeConstantEnum, TypePattern } from \'../utils\';\\n\\nexport interface ValidatorConfig {\\n  type: TypeConstantEnum;\\n  option?: TypePattern | number;\\n  errorMsg?: string;\\n}\\n\\nexport interface ValueToggle {\\n  value: boolean;\\n  description: string;\\n}\\n\\nexport interface DataFormBuilder {\\n  label?: string;\\n  labelHint?: string;\\n  value?: unknown;\\n  typeInput?: TypeInput;\\n  values?: DataFormBuilder[];\\n  bulkValues?: DataFormBuilder[];\\n  valueToggleShow?: ValueToggle[];\\n  validators?: ValidatorConfig[];\\n  placeholder?: string;\\n  description?: DescriptionEntity;\\n}\\n\\nexport interface DescriptionEntity {\\n  text: string;\\n  icon?: string;\\n}\\nexport type TypeInput =\\n  | \'boolean\'\\n  | \'toggle\'\\n  | \'area\'\\n  | \'currency\'\\n  | \'dropdown\'\\n  | \'date\'\\n  | \'date-interval\';\\n","properties":[{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":29},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"FormStepper","id":"interface-FormStepper-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"infoUser","deprecated":false,"deprecationMessage":"","type":"InfoUser","optional":false,"description":"","line":197},{"name":"intro","deprecated":false,"deprecationMessage":"","type":"InfoUser","optional":false,"description":"","line":196},{"name":"reserveBook","deprecated":false,"deprecationMessage":"","type":"InfoUser","optional":false,"description":"","line":199},{"name":"spendMoney","deprecated":false,"deprecationMessage":"","type":"InfoUser","optional":false,"description":"","line":198},{"name":"steps","deprecated":false,"deprecationMessage":"","type":"Step[]","optional":false,"description":"","line":200}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Graph","id":"interface-Graph-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"howMannyMonth","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":240},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":238},{"name":"values","deprecated":false,"deprecationMessage":"","type":"GraphValue[]","optional":false,"description":"","line":239}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"GraphValue","id":"interface-GraphValue-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"end","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":247},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":244},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":245},{"name":"start","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":246}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Info","id":"interface-Info-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"childrens","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":283},{"name":"familyNumber","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":281},{"name":"roleOfMember","deprecated":false,"deprecationMessage":"","type":"RoleOfMember[]","optional":false,"description":"","line":282}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"InfoUser","id":"interface-InfoUser-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"check","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":217},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":220},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":218},{"name":"info","deprecated":false,"deprecationMessage":"","type":"Info","optional":true,"description":"","line":219},{"name":"values","deprecated":false,"deprecationMessage":"","type":"ValuesValue[] | ValuesClass | null","optional":true,"description":"","line":221}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Label","id":"interface-Label-88aa753d43aa073e25569fe9940e705d5893f0c10b0f5ce749246b056d2835433f871ed1558da7ca866e2432d49b2e60ffbe645ed1026ed1f881c576e7c373be","file":"src/app/+state/stepper.models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface StepperEntity {\\n  steps: Array<{\\n    value: string;\\n    label: string;\\n    id: string;\\n  }>;\\n  intro: {\\n    icon: string;\\n    check: boolean;\\n    id: string;\\n    values: Label[] | null;\\n  };\\n  infoUser: {\\n    check: boolean;\\n    icon: string;\\n    id: string;\\n    values: {\\n      familyNumber: number;\\n      roleOfMember: {\\n        id: string;\\n        value: string;\\n        check: boolean;\\n      }[];\\n      childrens: number;\\n    };\\n  };\\n  spendMoney: {\\n    id: string;\\n    icon: string;\\n    check: boolean;\\n    values: {\\n      incoming: number;\\n      spendMoney: number;\\n      revenue: number;\\n      categorySpendMoney: {\\n        id: string;\\n        value: number;\\n        label: string;\\n        scope: {\\n          id: string;\\n          label: string;\\n          check: boolean;\\n        }[];\\n      }[];\\n      recommendations: {\\n        check: boolean;\\n        label: string;\\n      }[];\\n    };\\n  };\\n  // Exteotera graph\\n  reserveBook: {\\n    icon: string;\\n    id: string;\\n    check: boolean;\\n    values: {\\n      id: string;\\n      graph: {\\n        id: string;\\n        values: {\\n          id: string;\\n          label: string;\\n          start: number;\\n          end: number;\\n        }[];\\n        howMannyMonth: number;\\n      };\\n      reserve: {\\n        id: string;\\n        currentReserve: Label;\\n        recommendationReserve: Label;\\n        howMannyMonth: number;\\n      };\\n      details: {\\n        id: string;\\n        check: boolean;\\n        values: BookDetail[];\\n      };\\n      modals: {\\n        setBookType: Label;\\n        sumBook: Label;\\n      };\\n    };\\n  };\\n}\\n\\nexport interface Label {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface StepperValues {\\n  id: string;\\n  values: string;\\n  check: boolean;\\n  icon: string;\\n}\\n\\nexport interface BookDetail {\\n  id: string;\\n  name: string;\\n  author: string;\\n  subBook?: {\\n    label: Label;\\n    edit: boolean;\\n    delete: boolean;\\n  };\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":91},{"name":"labelCurrency","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":93},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":92}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Modals","id":"interface-Modals-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"setBookType","deprecated":false,"deprecationMessage":"","type":"SetBookType","optional":false,"description":"","line":251},{"name":"sumBook","deprecated":false,"deprecationMessage":"","type":"SetBookType","optional":false,"description":"","line":252}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Recommendation","id":"interface-Recommendation-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"check","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":262},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":263}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Reserve","id":"interface-Reserve-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"currentReserve","deprecated":false,"deprecationMessage":"","type":"SetBookType","optional":false,"description":"","line":268},{"name":"howMannyMonth","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":270},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":267},{"name":"recommendationReserve","deprecated":false,"deprecationMessage":"","type":"SetBookType","optional":false,"description":"","line":269}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ReserveEntity","id":"interface-ReserveEntity-0fa3d9bb7433460dec07968b1105552c3f65f6a7a32af155d3e41d7d76018e5051423f0451fbb1daca6a3e99b6c2cbde16b1a87c15f1a75c8009e7521f477c34","file":"src/app/+state/reserve/reserve.models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface ReserveEntity {\\n  id: string | number; // Primary ID\\n  name: string;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string | number","optional":false,"description":"","line":5},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":168,"description":"<p>Interface for the &#39;Reserve&#39; data</p>\\n","rawdescription":"\\n\\nInterface for the \'Reserve\' data\\n","methods":[]},{"name":"ReservePartialState","id":"interface-ReservePartialState-dfeb7ab45cf5f6e2720d2c40bc8a43082a779d2390b983d4c882939ccaa2f8cd7abdc773d466023d268abdd57e72fb132da1a38de694205b7cb9f9cb5d78d73f","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { createEntityAdapter, EntityAdapter, EntityState } from \'@ngrx/entity\';\\nimport { Action, createReducer, on } from \'@ngrx/store\';\\nimport { ReserveEntity } from \'./reserve.models\';\\nimport * as ReserveActions from \'./reserve.actions\';\\n\\nexport const RESERVE_FEATURE_KEY = \'reserve\';\\n\\nexport interface ReserveState extends EntityState<ReserveEntity> {\\n  selectedId?: string | number; // which Reserve record has been selected\\n  loaded: boolean; // has the Reserve list been loaded\\n  error?: string | null; // last known error (if any)\\n}\\n\\nexport interface ReservePartialState {\\n  readonly [RESERVE_FEATURE_KEY]: ReserveState;\\n}\\n\\nexport const reserveAdapter: EntityAdapter<ReserveEntity> =\\n  createEntityAdapter<ReserveEntity>();\\nexport const initialReserveState: ReserveState = reserveAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n  }\\n);\\nconst reducer = createReducer(\\n  initialReserveState,\\n  on(ReserveActions.initReserve, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\\n  ),\\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    ReserveActions.formValueChangeReserve,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n);\\n\\nexport function reserveReducer(\\n  state: ReserveState | undefined,\\n  action: Action\\n) {\\n  return reducer(state, action);\\n}\\n","properties":[{"name":"RESERVE_FEATURE_KEY","deprecated":false,"deprecationMessage":"","type":"ReserveState","optional":false,"description":"","line":15,"modifierKind":[146]}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ReserveState","id":"interface-ReserveState-dfeb7ab45cf5f6e2720d2c40bc8a43082a779d2390b983d4c882939ccaa2f8cd7abdc773d466023d268abdd57e72fb132da1a38de694205b7cb9f9cb5d78d73f","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { createEntityAdapter, EntityAdapter, EntityState } from \'@ngrx/entity\';\\nimport { Action, createReducer, on } from \'@ngrx/store\';\\nimport { ReserveEntity } from \'./reserve.models\';\\nimport * as ReserveActions from \'./reserve.actions\';\\n\\nexport const RESERVE_FEATURE_KEY = \'reserve\';\\n\\nexport interface ReserveState extends EntityState<ReserveEntity> {\\n  selectedId?: string | number; // which Reserve record has been selected\\n  loaded: boolean; // has the Reserve list been loaded\\n  error?: string | null; // last known error (if any)\\n}\\n\\nexport interface ReservePartialState {\\n  readonly [RESERVE_FEATURE_KEY]: ReserveState;\\n}\\n\\nexport const reserveAdapter: EntityAdapter<ReserveEntity> =\\n  createEntityAdapter<ReserveEntity>();\\nexport const initialReserveState: ReserveState = reserveAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n  }\\n);\\nconst reducer = createReducer(\\n  initialReserveState,\\n  on(ReserveActions.initReserve, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\\n  ),\\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    ReserveActions.formValueChangeReserve,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n);\\n\\nexport function reserveReducer(\\n  state: ReserveState | undefined,\\n  action: Action\\n) {\\n  return reducer(state, action);\\n}\\n","properties":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":11},{"name":"loaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"selectedId","deprecated":false,"deprecationMessage":"","type":"string | number","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":168,"methods":[],"extends":"EntityState"},{"name":"RoleOfMember","id":"interface-RoleOfMember-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"check","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":289},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":287},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":288}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Scope","id":"interface-Scope-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"check","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":234},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":232},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":233}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"SetBookType","id":"interface-SetBookType-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":256},{"name":"labelCurrency","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":258},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":257}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"Step","id":"interface-Step-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":193},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":192},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":191}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"StepperEntity","id":"interface-StepperEntity-88aa753d43aa073e25569fe9940e705d5893f0c10b0f5ce749246b056d2835433f871ed1558da7ca866e2432d49b2e60ffbe645ed1026ed1f881c576e7c373be","file":"src/app/+state/stepper.models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface StepperEntity {\\n  steps: Array<{\\n    value: string;\\n    label: string;\\n    id: string;\\n  }>;\\n  intro: {\\n    icon: string;\\n    check: boolean;\\n    id: string;\\n    values: Label[] | null;\\n  };\\n  infoUser: {\\n    check: boolean;\\n    icon: string;\\n    id: string;\\n    values: {\\n      familyNumber: number;\\n      roleOfMember: {\\n        id: string;\\n        value: string;\\n        check: boolean;\\n      }[];\\n      childrens: number;\\n    };\\n  };\\n  spendMoney: {\\n    id: string;\\n    icon: string;\\n    check: boolean;\\n    values: {\\n      incoming: number;\\n      spendMoney: number;\\n      revenue: number;\\n      categorySpendMoney: {\\n        id: string;\\n        value: number;\\n        label: string;\\n        scope: {\\n          id: string;\\n          label: string;\\n          check: boolean;\\n        }[];\\n      }[];\\n      recommendations: {\\n        check: boolean;\\n        label: string;\\n      }[];\\n    };\\n  };\\n  // Exteotera graph\\n  reserveBook: {\\n    icon: string;\\n    id: string;\\n    check: boolean;\\n    values: {\\n      id: string;\\n      graph: {\\n        id: string;\\n        values: {\\n          id: string;\\n          label: string;\\n          start: number;\\n          end: number;\\n        }[];\\n        howMannyMonth: number;\\n      };\\n      reserve: {\\n        id: string;\\n        currentReserve: Label;\\n        recommendationReserve: Label;\\n        howMannyMonth: number;\\n      };\\n      details: {\\n        id: string;\\n        check: boolean;\\n        values: BookDetail[];\\n      };\\n      modals: {\\n        setBookType: Label;\\n        sumBook: Label;\\n      };\\n    };\\n  };\\n}\\n\\nexport interface Label {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface StepperValues {\\n  id: string;\\n  values: string;\\n  check: boolean;\\n  icon: string;\\n}\\n\\nexport interface BookDetail {\\n  id: string;\\n  name: string;\\n  author: string;\\n  subBook?: {\\n    label: Label;\\n    edit: boolean;\\n    delete: boolean;\\n  };\\n}\\n","properties":[{"name":"infoUser","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":16},{"name":"intro","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":10},{"name":"reserveBook","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55},{"name":"spendMoney","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":30},{"name":"steps","deprecated":false,"deprecationMessage":"","type":"Array<literal type>","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":168,"description":"<p>Interface for the &#39;Stepper&#39; data</p>\\n","rawdescription":"\\n\\nInterface for the \'Stepper\' data\\n","methods":[]},{"name":"StepperPartialState","id":"interface-StepperPartialState-db71a8e0b13f076ae9a24860f1b321fe3c7594a0826e260f77ada3c499cf5e6a77ea8067fbbdebd88ac267fde8e0bd1d4b9703526db40c4bc0fa32f0ad8dc8d6","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { createEntityAdapter, EntityAdapter, EntityState } from \'@ngrx/entity\';\\nimport { Action, createReducer, on } from \'@ngrx/store\';\\nimport * as StepperActions from \'./stepper.actions\';\\nimport { formValueChange } from \'./stepper.actions\';\\nimport { StepperEntity } from \'./stepper.models\';\\nimport { mockStepper } from \'./mock\';\\n\\nexport const STEPPER_FEATURE_KEY = \'stepper\';\\n\\nexport interface StepperState extends EntityState<StepperEntity> {\\n  selectedId?: string | number; // which Stepper record has been selected\\n  loaded: boolean; // has the Stepper list been loaded\\n  error?: string | null; // last known error (if any)\\n}\\n\\nexport interface StepperPartialState {\\n  readonly [STEPPER_FEATURE_KEY]: StepperState;\\n}\\n\\nexport const stepperAdapter: EntityAdapter<StepperEntity> =\\n  createEntityAdapter<StepperEntity>();\\n\\nexport const initialStepperState: StepperState = stepperAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n    entities: mockStepper(),\\n  }\\n);\\n\\nconst reducer = createReducer(\\n  initialStepperState,\\n  on(StepperActions.initStepper, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\\n    stepperAdapter.setAll(stepper, {\\n      ...state,\\n      loaded: true,\\n    })\\n  ),\\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    formValueChange,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n);\\n\\nexport function stepperReducer(state: StepperState, action: Action) {\\n  return reducer(state, action);\\n}\\n","properties":[{"name":"STEPPER_FEATURE_KEY","deprecated":false,"deprecationMessage":"","type":"StepperState","optional":false,"description":"","line":17,"modifierKind":[146]}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"StepperState","id":"interface-StepperState-db71a8e0b13f076ae9a24860f1b321fe3c7594a0826e260f77ada3c499cf5e6a77ea8067fbbdebd88ac267fde8e0bd1d4b9703526db40c4bc0fa32f0ad8dc8d6","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { createEntityAdapter, EntityAdapter, EntityState } from \'@ngrx/entity\';\\nimport { Action, createReducer, on } from \'@ngrx/store\';\\nimport * as StepperActions from \'./stepper.actions\';\\nimport { formValueChange } from \'./stepper.actions\';\\nimport { StepperEntity } from \'./stepper.models\';\\nimport { mockStepper } from \'./mock\';\\n\\nexport const STEPPER_FEATURE_KEY = \'stepper\';\\n\\nexport interface StepperState extends EntityState<StepperEntity> {\\n  selectedId?: string | number; // which Stepper record has been selected\\n  loaded: boolean; // has the Stepper list been loaded\\n  error?: string | null; // last known error (if any)\\n}\\n\\nexport interface StepperPartialState {\\n  readonly [STEPPER_FEATURE_KEY]: StepperState;\\n}\\n\\nexport const stepperAdapter: EntityAdapter<StepperEntity> =\\n  createEntityAdapter<StepperEntity>();\\n\\nexport const initialStepperState: StepperState = stepperAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n    entities: mockStepper(),\\n  }\\n);\\n\\nconst reducer = createReducer(\\n  initialStepperState,\\n  on(StepperActions.initStepper, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\\n    stepperAdapter.setAll(stepper, {\\n      ...state,\\n      loaded: true,\\n    })\\n  ),\\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    formValueChange,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n);\\n\\nexport function stepperReducer(state: StepperState, action: Action) {\\n  return reducer(state, action);\\n}\\n","properties":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":13},{"name":"loaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"selectedId","deprecated":false,"deprecationMessage":"","type":"string | number","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":168,"methods":[],"extends":"EntityState"},{"name":"StepperValues","id":"interface-StepperValues-88aa753d43aa073e25569fe9940e705d5893f0c10b0f5ce749246b056d2835433f871ed1558da7ca866e2432d49b2e60ffbe645ed1026ed1f881c576e7c373be","file":"src/app/+state/stepper.models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface StepperEntity {\\n  steps: Array<{\\n    value: string;\\n    label: string;\\n    id: string;\\n  }>;\\n  intro: {\\n    icon: string;\\n    check: boolean;\\n    id: string;\\n    values: Label[] | null;\\n  };\\n  infoUser: {\\n    check: boolean;\\n    icon: string;\\n    id: string;\\n    values: {\\n      familyNumber: number;\\n      roleOfMember: {\\n        id: string;\\n        value: string;\\n        check: boolean;\\n      }[];\\n      childrens: number;\\n    };\\n  };\\n  spendMoney: {\\n    id: string;\\n    icon: string;\\n    check: boolean;\\n    values: {\\n      incoming: number;\\n      spendMoney: number;\\n      revenue: number;\\n      categorySpendMoney: {\\n        id: string;\\n        value: number;\\n        label: string;\\n        scope: {\\n          id: string;\\n          label: string;\\n          check: boolean;\\n        }[];\\n      }[];\\n      recommendations: {\\n        check: boolean;\\n        label: string;\\n      }[];\\n    };\\n  };\\n  // Exteotera graph\\n  reserveBook: {\\n    icon: string;\\n    id: string;\\n    check: boolean;\\n    values: {\\n      id: string;\\n      graph: {\\n        id: string;\\n        values: {\\n          id: string;\\n          label: string;\\n          start: number;\\n          end: number;\\n        }[];\\n        howMannyMonth: number;\\n      };\\n      reserve: {\\n        id: string;\\n        currentReserve: Label;\\n        recommendationReserve: Label;\\n        howMannyMonth: number;\\n      };\\n      details: {\\n        id: string;\\n        check: boolean;\\n        values: BookDetail[];\\n      };\\n      modals: {\\n        setBookType: Label;\\n        sumBook: Label;\\n      };\\n    };\\n  };\\n}\\n\\nexport interface Label {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface StepperValues {\\n  id: string;\\n  values: string;\\n  check: boolean;\\n  icon: string;\\n}\\n\\nexport interface BookDetail {\\n  id: string;\\n  name: string;\\n  author: string;\\n  subBook?: {\\n    label: Label;\\n    edit: boolean;\\n    delete: boolean;\\n  };\\n}\\n","properties":[{"name":"check","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":99},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":100},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":97},{"name":"values","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":98}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ValidatorConfig","id":"interface-ValidatorConfig-7640c7065352a7040e886517f153114fcf6b3f0ad89dab46875933dda85f957da58547fb4e08e59ddf943a6a3dd1fdcb465da5c69589b0c77a42eef7216cc7d1","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TypeConstantEnum, TypePattern } from \'../utils\';\\n\\nexport interface ValidatorConfig {\\n  type: TypeConstantEnum;\\n  option?: TypePattern | number;\\n  errorMsg?: string;\\n}\\n\\nexport interface ValueToggle {\\n  value: boolean;\\n  description: string;\\n}\\n\\nexport interface DataFormBuilder {\\n  label?: string;\\n  labelHint?: string;\\n  value?: unknown;\\n  typeInput?: TypeInput;\\n  values?: DataFormBuilder[];\\n  bulkValues?: DataFormBuilder[];\\n  valueToggleShow?: ValueToggle[];\\n  validators?: ValidatorConfig[];\\n  placeholder?: string;\\n  description?: DescriptionEntity;\\n}\\n\\nexport interface DescriptionEntity {\\n  text: string;\\n  icon?: string;\\n}\\nexport type TypeInput =\\n  | \'boolean\'\\n  | \'toggle\'\\n  | \'area\'\\n  | \'currency\'\\n  | \'dropdown\'\\n  | \'date\'\\n  | \'date-interval\';\\n","properties":[{"name":"errorMsg","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"option","deprecated":false,"deprecationMessage":"","type":"TypePattern | number","optional":true,"description":"","line":5},{"name":"type","deprecated":false,"deprecationMessage":"","type":"TypeConstantEnum","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ValuesClass","id":"interface-ValuesClass-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"categorySpendMoney","deprecated":false,"deprecationMessage":"","type":"CategorySpendMoney[]","optional":true,"description":"","line":212},{"name":"details","deprecated":false,"deprecationMessage":"","type":"InfoUser","optional":true,"description":"","line":207},{"name":"graph","deprecated":false,"deprecationMessage":"","type":"Graph","optional":true,"description":"","line":205},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":204},{"name":"incoming","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":209},{"name":"modals","deprecated":false,"deprecationMessage":"","type":"Modals","optional":true,"description":"","line":208},{"name":"recommendations","deprecated":false,"deprecationMessage":"","type":"Recommendation[]","optional":true,"description":"","line":213},{"name":"reserve","deprecated":false,"deprecationMessage":"","type":"Reserve","optional":true,"description":"","line":206},{"name":"revenue","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":211},{"name":"spendMoney","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":210}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ValuesValue","id":"interface-ValuesValue-9787f9f863aa7c261ec3a6540e6ac1dca7490b77d878cb4c9d5272cb7c59ccd18cbf5ceeef93dbbfdc954bb4d450efcaa27fc5c7811dffead46068164f43b386","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const mockStepper = () =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper);\\n\\n// Helper function to generate random strings for ids\\nexport function generateRandomId(): string {\\n  return Math.random().toString(36).substr(2, 40);\\n}\\nexport interface Step {\\n  value: string;\\n  label: string;\\n  id: string;\\n}\\nexport interface FormStepper {\\n  intro: InfoUser;\\n  infoUser: InfoUser;\\n  spendMoney: InfoUser;\\n  reserveBook: InfoUser;\\n  steps: Step[];\\n}\\n\\nexport interface ValuesClass {\\n  id?: string;\\n  graph?: Graph;\\n  reserve?: Reserve;\\n  details?: InfoUser;\\n  modals?: Modals;\\n  incoming?: number;\\n  spendMoney?: number;\\n  revenue?: number;\\n  categorySpendMoney?: CategorySpendMoney[];\\n  recommendations?: Recommendation[];\\n}\\n\\nexport interface InfoUser {\\n  check: boolean;\\n  id: string;\\n  info?: Info;\\n  icon?: string;\\n  values?: ValuesValue[] | ValuesClass | null;\\n}\\n\\nexport interface CategorySpendMoney {\\n  id: string;\\n  value: number;\\n  label: string;\\n  scope: Scope[];\\n}\\n\\nexport interface Scope {\\n  id: string;\\n  label: string;\\n  check: boolean;\\n}\\n\\nexport interface Graph {\\n  id: string;\\n  values: GraphValue[];\\n  howMannyMonth: number;\\n}\\n\\nexport interface GraphValue {\\n  id: string;\\n  label: string;\\n  start: number;\\n  end: number;\\n}\\n\\nexport interface Modals {\\n  setBookType: SetBookType;\\n  sumBook: SetBookType;\\n}\\n\\nexport interface SetBookType {\\n  id: string;\\n  value: number;\\n  labelCurrency: string;\\n}\\n\\nexport interface Recommendation {\\n  check: boolean;\\n  label: string;\\n}\\n\\nexport interface Reserve {\\n  id: string;\\n  currentReserve: SetBookType;\\n  recommendationReserve: SetBookType;\\n  howMannyMonth: number;\\n}\\n\\nexport interface ValuesValue {\\n  id: string;\\n  name: string;\\n  author: string;\\n  genre: string;\\n}\\n\\nexport interface Info {\\n  familyNumber: number;\\n  roleOfMember: RoleOfMember[];\\n  childrens: number;\\n}\\n\\nexport interface RoleOfMember {\\n  id: number;\\n  value: string;\\n  check: boolean;\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":276},{"name":"genre","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":277},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":274},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":275}],"indexSignatures":[],"kind":168,"methods":[]},{"name":"ValueToggle","id":"interface-ValueToggle-7640c7065352a7040e886517f153114fcf6b3f0ad89dab46875933dda85f957da58547fb4e08e59ddf943a6a3dd1fdcb465da5c69589b0c77a42eef7216cc7d1","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TypeConstantEnum, TypePattern } from \'../utils\';\\n\\nexport interface ValidatorConfig {\\n  type: TypeConstantEnum;\\n  option?: TypePattern | number;\\n  errorMsg?: string;\\n}\\n\\nexport interface ValueToggle {\\n  value: boolean;\\n  description: string;\\n}\\n\\nexport interface DataFormBuilder {\\n  label?: string;\\n  labelHint?: string;\\n  value?: unknown;\\n  typeInput?: TypeInput;\\n  values?: DataFormBuilder[];\\n  bulkValues?: DataFormBuilder[];\\n  valueToggleShow?: ValueToggle[];\\n  validators?: ValidatorConfig[];\\n  placeholder?: string;\\n  description?: DescriptionEntity;\\n}\\n\\nexport interface DescriptionEntity {\\n  text: string;\\n  icon?: string;\\n}\\nexport type TypeInput =\\n  | \'boolean\'\\n  | \'toggle\'\\n  | \'area\'\\n  | \'currency\'\\n  | \'dropdown\'\\n  | \'date\'\\n  | \'date-interval\';\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":168,"methods":[]}],"injectables":[{"name":"GenerateFormBuilderService","id":"injectable-GenerateFormBuilderService-f0703bf60c309bdfcbce1177f00f3d38c335d6df87e3a7b7eebe5143c44cf4ab0f465a07ae655dc5be5082c473a95d55891342b640482bd0489cb83f3dc53a84","file":"ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts","properties":[{"name":"_fb","defaultValue":"inject(FormBuilder)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[121,146]},{"name":"_validatorService","defaultValue":"inject(ValidatorService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[121,146]}],"methods":[{"name":"buildFormFromJson","args":[{"name":"jsonData","type":"DataFormBuilder","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup | FormArray | FormControl","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"jsonData","type":"DataFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"buildFormGenerate","args":[{"name":"data","type":"DataFormBuilder","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup | FormArray | FormControl","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"DataFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"extractValidator","args":[{"name":"item","type":"DataFormBuilder","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn[]","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"item","type":"DataFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCustomFromControlType","args":[{"name":"control","type":"AbstractControl<>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl<>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getValidator","args":[{"name":"validatorConfig","type":"ValidatorConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"validatorConfig","type":"ValidatorConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport {\\n  AbstractControl,\\n  FormArray,\\n  FormBuilder,\\n  FormControl,\\n  FormGroup,\\n  isFormArray,\\n  isFormGroup,\\n  ValidatorFn,\\n} from \'@angular/forms\';\\nimport { DataFormBuilder, ValidatorConfig } from \'../interfaces\';\\nimport { ValidatorService } from \'./validator.service\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GenerateFormBuilderService {\\n  private readonly _fb = inject(FormBuilder);\\n  private readonly _validatorService = inject(ValidatorService);\\n\\n  buildFormFromJson(\\n    jsonData: DataFormBuilder\\n  ): FormGroup | FormArray | FormControl {\\n    console.log(this.buildFormGenerate(jsonData));\\n    return this.buildFormGenerate(jsonData);\\n  }\\n\\n  extractValidator(item: DataFormBuilder): ValidatorFn[] {\\n    let validators: ValidatorFn[] = [];\\n    if (item.validators && item.validators.length > 0) {\\n      validators = item.validators.map((validatorConfig) =>\\n        this.getValidator(validatorConfig)\\n      );\\n    }\\n    return validators;\\n  }\\n\\n  getValidator(validatorConfig: ValidatorConfig): ValidatorFn {\\n    const { type, option, errorMsg } = validatorConfig;\\n\\n    // Use the validatorGenerators function to generate validators\\n    const validatorGenerator = this._validatorService.validatorGenerators();\\n\\n    if (type in validatorGenerator) {\\n      return (control: unknown) =>\\n        validatorGenerator[type](\\n          control as FormControl,\\n          option,\\n          errorMsg ?? \'\'\\n        );\\n    } else {\\n      throw new Error(\'Please Implement this Validator\');\\n    }\\n  }\\n\\n  buildFormGenerate(\\n    data: DataFormBuilder\\n  ): FormGroup | FormArray | FormControl {\\n    if (data.values) {\\n      //eslint-disable-next-line\\n      const group: { [key: string]: any } = {};\\n      data.values.forEach((item) => {\\n        const label = item.label?.toLowerCase();\\n        if (item.values) {\\n          group[label ?? \'\'] = this.buildFormGenerate(item);\\n        } else if (item.bulkValues) {\\n          group[label ?? \'\'] = this._fb.array(\\n            item.bulkValues.map((subItem) => this.buildFormGenerate(subItem))\\n          );\\n        } else {\\n          const validators = this.extractValidator(item);\\n          group[label ?? \'\'] = this._fb.control(item.value || null, validators);\\n        }\\n      });\\n      return this._fb.group(group);\\n    } else if (data.bulkValues) {\\n      return this._fb.array(\\n        data.bulkValues.map((subItem) => this.buildFormGenerate(subItem))\\n      );\\n    } else {\\n      const validators = this.extractValidator(data);\\n      return this._fb.control(data.value || null, validators);\\n    }\\n  }\\n\\n  getCustomFromControlType(control: AbstractControl<unknown>): string {\\n    if (isFormArray(control)) {\\n      return \'FormArray\';\\n    }\\n    if (isFormGroup(control)) {\\n      return \'FormGroup\';\\n    }\\n    return \'FormControl\';\\n  }\\n}\\n","type":"injectable"},{"name":"GenerativeService","id":"injectable-GenerativeService-8fa57e1907c7fb6e3e752c0940792f164a04fa97f075a966a105f91f9c30ba5b68448c36738fcad507479efe33dbc00d96829901bedb57322919ae0fd9a39da3","file":"ftx-forms/src/lib/ftx-forms/service/generative.service.ts","properties":[],"methods":[{"name":"trackBy","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"entity","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":["T"],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"entity","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GenerativeService {\\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\\n  trackBy<T>(index: number, entity: T) {\\n    return index;\\n  }\\n}\\n","type":"injectable"},{"name":"ReserveEffects","id":"injectable-ReserveEffects-0afc8c87bad023104c349bd8a80234859847070ce3da6e116cb64d7d4796d0a93fbd44955eed2bd0cfac1d2ca96755b4d15f5b878adb04fdc0c8417bb8ada1d3","file":"src/app/+state/reserve/reserve.effects.ts","properties":[{"name":"actions$","defaultValue":"inject(Actions)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[121]},{"name":"init$","defaultValue":"createEffect(() =>\\n    this.actions$.pipe(\\n      ofType(ReserveActions.initReserve),\\n      switchMap(() => of(ReserveActions.loadReserveSuccess({ reserve: [] }))),\\n      catchError((error) => {\\n        console.error(\'Error\', error);\\n        return of(ReserveActions.loadReserveFailure({ error }));\\n      })\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport { Actions, createEffect, ofType } from \'@ngrx/effects\';\\nimport { catchError, of, switchMap } from \'rxjs\';\\nimport * as ReserveActions from \'./reserve.actions\';\\n\\n@Injectable()\\nexport class ReserveEffects {\\n  private actions$ = inject(Actions);\\n\\n  init$ = createEffect(() =>\\n    this.actions$.pipe(\\n      ofType(ReserveActions.initReserve),\\n      switchMap(() => of(ReserveActions.loadReserveSuccess({ reserve: [] }))),\\n      catchError((error) => {\\n        console.error(\'Error\', error);\\n        return of(ReserveActions.loadReserveFailure({ error }));\\n      })\\n    )\\n  );\\n}\\n","type":"injectable"},{"name":"StepperEffects","id":"injectable-StepperEffects-943e15b1f477c5b24df8d98e67adfd0327a9c0efc34775c7696207f00be6bd59651db0e76b1d1847eeebd13058d7fdb25870c5e46ec9480846b3f84b685907d1","file":"src/app/+state/stepper.effects.ts","properties":[{"name":"actions$","defaultValue":"inject(Actions)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[121]},{"name":"init$","defaultValue":"createEffect(() =>\\n    this.actions$.pipe(\\n      ofType(StepperActions.initStepper),\\n      switchMap(() => of(StepperActions.loadStepperSuccess({ stepper: [] }))),\\n      catchError((error) => {\\n        console.error(\'Error\', error);\\n        return of(StepperActions.loadStepperFailure({ error }));\\n      })\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport { Actions, createEffect, ofType } from \'@ngrx/effects\';\\nimport { catchError, of, switchMap } from \'rxjs\';\\nimport * as StepperActions from \'./stepper.actions\';\\n\\n@Injectable()\\nexport class StepperEffects {\\n  private actions$ = inject(Actions);\\n\\n  init$ = createEffect(() =>\\n    this.actions$.pipe(\\n      ofType(StepperActions.initStepper),\\n      switchMap(() => of(StepperActions.loadStepperSuccess({ stepper: [] }))),\\n      catchError((error) => {\\n        console.error(\'Error\', error);\\n        return of(StepperActions.loadStepperFailure({ error }));\\n      })\\n    )\\n  );\\n}\\n","type":"injectable"},{"name":"StepperService","id":"injectable-StepperService-5b78eac4816ca6f43f32d57a809f69afa1e1dad94a727b179a8371c7168286dca2388335978a078e5f3bc43e37bd06a13832d0bb70b9db9ea26bc7dd81e64663","file":"src/app/components/services/stepper.service.ts","properties":[{"name":"_fb","defaultValue":"inject(FormBuilder)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>An instance of the FormBuilder class injected from &#39;@angular/forms&#39;.</p>\\n","line":32,"rawdescription":"\\n\\nAn instance of the FormBuilder class injected from \'@angular/forms\'.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":761,"end":786,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":762,"end":766,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":767,"end":780,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":768,"end":779,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":768,"end":779,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"FormBuilder"}}}},{"pos":786,"end":798,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":787,"end":794,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"_stepperStore","defaultValue":"inject(Store)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>An instance of the Store class injected using @ngrx/store.</p>\\n","line":26,"rawdescription":"\\n\\nAn instance of the Store class injected using @ngrx/store.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":592,"end":611,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":593,"end":597,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":598,"end":605,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":599,"end":604,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":599,"end":604,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Store"}}}},{"pos":611,"end":623,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":612,"end":619,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"buttonDisable$","defaultValue":"combineLatest([this.formValue$, this.flagUrl$]).pipe(\\n    switchMap(\\n      (\\n        valuesCombined: any //eslint-disable-line\\n      ): Observable<boolean> => of(!valuesCombined[0][valuesCombined[1]].check)\\n    ),\\n    shareReplay()\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":154,"modifierKind":[123]},{"name":"flagUrl$","defaultValue":"new BehaviorSubject<string>(\'info\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag URL Subject for tracking flag changes.</p>\\n","line":37,"rawdescription":"\\n\\nFlag URL Subject for tracking flag changes.\\n","modifierKind":[123],"jsdoctags":[{"pos":907,"end":926,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":908,"end":912,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":913,"end":922,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":914,"end":921,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":914,"end":921,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Subject"}}}}]},{"name":"formValue$","defaultValue":"using(\\n    () =>\\n      this.stepperForm.valueChanges\\n        .pipe(\\n          debounceTime(200),\\n          tap(\\n            (\\n              values: any // eslint-disable-line\\n            ) => this._stepperStore.dispatch(formValueChange(values))\\n          )\\n        )\\n        .subscribe(),\\n    () => this._stepperStore.select(selectStepperEntities)\\n  ).pipe(shareReplay())","deprecated":false,"deprecationMessage":"","type":"Observable<Dictionary<StepperEntity>>","optional":false,"description":"<p>Observable that emits the value of form changes.</p>\\n","line":140,"rawdescription":"\\n\\nObservable that emits the value of form changes.\\n","modifierKind":[121],"jsdoctags":[{"pos":3107,"end":3129,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":3108,"end":3112,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":3113,"end":3125,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":3114,"end":3124,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":3114,"end":3124,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Observable"}}}}]},{"name":"steppForm","defaultValue":"this._fb.group({\\n    intro: this._fb.group({\\n      icon: \'\',\\n      check: this._fb.control(false),\\n      id: \'\',\\n      values: {},\\n    }),\\n    infoUser: this._fb.group({\\n      check: this._fb.control(true),\\n      icon: \'\',\\n      id: \'\',\\n      info: this._fb.group({\\n        familyNumber: 0,\\n        roleOfMember: this._fb.array([\\n          this._fb.group({\\n            id: 0,\\n            value: \'\',\\n            check: false,\\n          }),\\n          this._fb.group({\\n            id: 0,\\n            value: \'\',\\n            check: false,\\n          }),\\n        ]),\\n        childrens: this._fb.control(0),\\n      }),\\n    }),\\n    spendMoney: this._fb.group({\\n      id: \'\',\\n      icon: \'\',\\n      check: this._fb.control(false),\\n      values: {\\n        incoming: null,\\n        spendMoney: null,\\n        revenue: null,\\n        categorySpendMoney: [\\n          {\\n            id: \'\',\\n            value: null,\\n            label: \'\',\\n            scope: [\\n              {\\n                id: \'\',\\n                label: \'\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: false,\\n            label: \'\',\\n          },\\n        ],\\n      },\\n    }), // Exteotera graph\\n    reserveBook: this._fb.group({\\n      icon: \'\',\\n      id: \'\',\\n      check: this._fb.control(false),\\n      values: {\\n        id: \'\',\\n        graph: {\\n          id: \'\',\\n          values: [\\n            {\\n              id: \'\',\\n              label: \'\',\\n              start: null,\\n              end: null,\\n            },\\n          ],\\n          howMannyMonth: null,\\n        },\\n        reserve: {\\n          id: \'\',\\n          currentReserve: {},\\n          recommendationReserve: {},\\n          howMannyMonth: null,\\n        },\\n        details: {\\n          id: \'\',\\n          check: false,\\n          values: [],\\n        },\\n        modals: {\\n          setBookType: {},\\n          sumBook: {},\\n        },\\n      },\\n    }),\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>FormGroup representing the stepper form.</p>\\n","line":42,"rawdescription":"\\n\\nFormGroup representing the stepper form.\\n","modifierKind":[123],"jsdoctags":[{"pos":1043,"end":1064,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":1044,"end":1048,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":1049,"end":1060,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":1050,"end":1059,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":1050,"end":1059,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"FormGroup"}}}}]}],"methods":[{"name":"addRoleOfMember","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds a new role to the \'roleOfMember\' array in \'infoUser\' control.\\n","description":"<p>Adds a new role to the &#39;roleOfMember&#39; array in &#39;infoUser&#39; control.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport { Store } from \'@ngrx/store\';\\nimport { FormBuilder } from \'@angular/forms\';\\nimport {\\n  BehaviorSubject,\\n  combineLatest,\\n  debounceTime,\\n  Observable,\\n  of,\\n  shareReplay,\\n  switchMap,\\n  tap,\\n  using,\\n} from \'rxjs\';\\nimport { formValueChange, selectStepperEntities } from \'../../+state\';\\nimport { Dictionary } from \'@ngrx/entity\';\\nimport { StepperEntity } from \'../../+state/stepper.models\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class StepperService {\\n  /**\\n   * An instance of the Store class injected using @ngrx/store.\\n   * @type {Store}\\n   * @private\\n   */\\n  private readonly _stepperStore = inject(Store);\\n  /**\\n   * An instance of the FormBuilder class injected from \'@angular/forms\'.\\n   * @type {FormBuilder}\\n   * @private\\n   */\\n  private readonly _fb = inject(FormBuilder);\\n  /**\\n   * Flag URL Subject for tracking flag changes.\\n   * @type {Subject}\\n   */\\n  public flagUrl$ = new BehaviorSubject<string>(\'info\');\\n  /**\\n   * FormGroup representing the stepper form.\\n   * @type {FormGroup}\\n   */\\n  public steppForm = this._fb.group({\\n    intro: this._fb.group({\\n      icon: \'\',\\n      check: this._fb.control(false),\\n      id: \'\',\\n      values: {},\\n    }),\\n    infoUser: this._fb.group({\\n      check: this._fb.control(true),\\n      icon: \'\',\\n      id: \'\',\\n      info: this._fb.group({\\n        familyNumber: 0,\\n        roleOfMember: this._fb.array([\\n          this._fb.group({\\n            id: 0,\\n            value: \'\',\\n            check: false,\\n          }),\\n          this._fb.group({\\n            id: 0,\\n            value: \'\',\\n            check: false,\\n          }),\\n        ]),\\n        childrens: this._fb.control(0),\\n      }),\\n    }),\\n    spendMoney: this._fb.group({\\n      id: \'\',\\n      icon: \'\',\\n      check: this._fb.control(false),\\n      values: {\\n        incoming: null,\\n        spendMoney: null,\\n        revenue: null,\\n        categorySpendMoney: [\\n          {\\n            id: \'\',\\n            value: null,\\n            label: \'\',\\n            scope: [\\n              {\\n                id: \'\',\\n                label: \'\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: false,\\n            label: \'\',\\n          },\\n        ],\\n      },\\n    }), // Exteotera graph\\n    reserveBook: this._fb.group({\\n      icon: \'\',\\n      id: \'\',\\n      check: this._fb.control(false),\\n      values: {\\n        id: \'\',\\n        graph: {\\n          id: \'\',\\n          values: [\\n            {\\n              id: \'\',\\n              label: \'\',\\n              start: null,\\n              end: null,\\n            },\\n          ],\\n          howMannyMonth: null,\\n        },\\n        reserve: {\\n          id: \'\',\\n          currentReserve: {},\\n          recommendationReserve: {},\\n          howMannyMonth: null,\\n        },\\n        details: {\\n          id: \'\',\\n          check: false,\\n          values: [],\\n        },\\n        modals: {\\n          setBookType: {},\\n          sumBook: {},\\n        },\\n      },\\n    }),\\n  });\\n  /**\\n   * Observable that emits the value of form changes.\\n   * @type {Observable}\\n   */\\n  private formValue$: Observable<Dictionary<StepperEntity>> = using(\\n    () =>\\n      this.stepperForm.valueChanges\\n        .pipe(\\n          debounceTime(200),\\n          tap(\\n            (\\n              values: any // eslint-disable-line\\n            ) => this._stepperStore.dispatch(formValueChange(values))\\n          )\\n        )\\n        .subscribe(),\\n    () => this._stepperStore.select(selectStepperEntities)\\n  ).pipe(shareReplay());\\n  public buttonDisable$ = combineLatest([this.formValue$, this.flagUrl$]).pipe(\\n    switchMap(\\n      (\\n        valuesCombined: any //eslint-disable-line\\n      ): Observable<boolean> => of(!valuesCombined[0][valuesCombined[1]].check)\\n    ),\\n    shareReplay()\\n  );\\n\\n  /**\\n   * Retrieves the observable for form values.\\n   * @type {Observable}\\n   */\\n  get formValues$(): Observable<Dictionary<StepperEntity>> {\\n    return this.formValue$;\\n  }\\n\\n  /**\\n   * Retrieves the stepper form.\\n   * @type {FormGroup}\\n   */\\n  get stepperForm() {\\n    return this.steppForm;\\n  }\\n\\n  /**\\n   * Adds a new role to the \'roleOfMember\' array in \'infoUser\' control.\\n   */\\n  public addRoleOfMember() {\\n    const newRole = this._fb.group({\\n      id: 0,\\n      value: \'\',\\n      check: false,\\n    });\\n    this.stepperForm.controls.infoUser.controls.info.controls.roleOfMember.push(\\n      newRole\\n    );\\n  }\\n}\\n","accessors":{"formValues$":{"name":"formValues$","getSignature":{"name":"formValues$","type":"","returnType":"Observable<Dictionary<StepperEntity>>","line":167,"rawdescription":"\\n\\nRetrieves the observable for form values.\\n","description":"<p>Retrieves the observable for form values.</p>\\n","jsdoctags":[{"pos":3889,"end":3911,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":3890,"end":3894,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":3895,"end":3907,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":3896,"end":3906,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":3896,"end":3906,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Observable"}}}}]}},"stepperForm":{"name":"stepperForm","getSignature":{"name":"stepperForm","type":"","returnType":"","line":175,"rawdescription":"\\n\\nRetrieves the stepper form.\\n","description":"<p>Retrieves the stepper form.</p>\\n","jsdoctags":[{"pos":4052,"end":4073,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":347,"tagName":{"pos":4053,"end":4057,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"type"},"comment":"","typeExpression":{"pos":4058,"end":4069,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":4059,"end":4068,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":4059,"end":4068,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"FormGroup"}}}}]}}},"type":"injectable"},{"name":"ValidatorService","id":"injectable-ValidatorService-3be69282e1b9a30d3841e45ab7a0da0c820a4d179118bd5af99a6fa8a86065d9bdc1c25c081795945ef676aecbd49217800abde424a76740080c7f5df7d5b4a9","file":"ftx-forms/src/lib/ftx-forms/service/validator.service.ts","properties":[],"methods":[{"name":"emailValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"{ error: string | boolean; }","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"minCharValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""},{"name":"option","type":"number","deprecated":false,"deprecationMessage":""},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"{ error: string | boolean; }","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"option","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"minValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""},{"name":"option","type":"number","deprecated":false,"deprecationMessage":""},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"{ error: string | boolean; }","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"option","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"patternValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""},{"name":"optionRegex","type":"","deprecated":false,"deprecationMessage":""},{"name":"errorMsg","type":"string | undefined","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"{ error: string | boolean; }","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"optionRegex","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorMsg","type":"string | undefined","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"requiredValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"{ error: string | boolean; }","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorMsg","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"validatorGenerators","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { TypeConstantEnum } from \'../utils\';\\n\\ntype ValidatorGenerator = (\\n  control: FormControl | FormControl<unknown>,\\n  option: unknown,\\n  errorMsg: string\\n) => any; //eslint-disable-line\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ValidatorService {\\n  requiredValidator(control: FormControl, errorMsg?: string) {\\n    return control.value\\n      ? null\\n      : { error: errorMsg || \'This field Is must\' || true };\\n  }\\n\\n  minValidator(control: FormControl, option: number, errorMsg?: string) {\\n    return control.value >= option ? null : { error: errorMsg ?? true };\\n  }\\n\\n  minCharValidator(control: FormControl, option: number, errorMsg?: string) {\\n    return String(control.value).length >= option ||\\n      String(control.value).length === 0\\n      ? null\\n      : { error: errorMsg ?? true };\\n  }\\n\\n  patternValidator(\\n    control: FormControl,\\n    optionRegex: unknown,\\n    errorMsg?: string | undefined\\n  ) {\\n    const pattern = new RegExp(optionRegex as string);\\n    return pattern instanceof RegExp\\n      ? pattern.test(control.value)\\n        ? null\\n        : { error: errorMsg ?? true }\\n      : null;\\n  }\\n\\n  emailValidator(control: FormControl, errorMsg?: string) {\\n    if (!control.value) {\\n      return null;\\n    }\\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$/;\\n    return emailPattern.test(control.value)\\n      ? null\\n      : { error: errorMsg ?? true };\\n  }\\n\\n  validatorGenerators(): {\\n    [key: string]: ValidatorGenerator;\\n  } {\\n    return {\\n      [TypeConstantEnum.REQUIRED]: (control, _, errorMsg) =>\\n        this.requiredValidator(control, errorMsg),\\n      [TypeConstantEnum.MIN]: (control, option, errorMsg) => {\\n        if (typeof option === \'number\') {\\n          return this.minValidator(control, option, errorMsg);\\n        } else {\\n          throw new Error(\'Invalid option for this validator\');\\n        }\\n      },\\n      [TypeConstantEnum.MIN_CHAR]: (control, option, errorMsg) => {\\n        if (typeof option === \'number\') {\\n          return this.minCharValidator(control, option, errorMsg);\\n        } else {\\n          throw new Error(\'Invalid option for this validator\');\\n        }\\n      },\\n      [TypeConstantEnum.PATTERN]: (control, option, errorMsg) => {\\n        if (typeof option === \'string\' || option instanceof RegExp) {\\n          return this.patternValidator(control, option, errorMsg);\\n        } else {\\n          throw new Error(\'Invalid option for this validator\');\\n        }\\n      },\\n      [TypeConstantEnum.EMAIL]: (control, _, errorMsg) => {\\n        return this.emailValidator(control, errorMsg);\\n      }, // Add more cases for other validator types as needed\\n    };\\n  }\\n}\\n","type":"injectable"},{"name":"ZoneAxeService","id":"injectable-ZoneAxeService-8f30269987778f5d9fae5013f7966f96a815bdd96a017668890f95e0a51a871ea95df37b734730f2953c2012a51faea3d8b976e21acf9583576ef7b9c3f8f95b","file":"ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts","properties":[{"name":"buttonRect","deprecated":false,"deprecationMessage":"","type":"DOMRect","optional":false,"description":"","line":8,"modifierKind":[121,146]},{"name":"tooltipRect","deprecated":false,"deprecationMessage":"","type":"DOMRect","optional":false,"description":"","line":7,"modifierKind":[121,146]}],"methods":[{"name":"axes","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""},{"name":"calculatePositionRecursively","args":[{"name":"buttonRect","type":"DOMRect","deprecated":false,"deprecationMessage":""},{"name":"tooltipRect","type":"DOMRect","deprecated":false,"deprecationMessage":""},{"name":"paddingTooltip","type":"number","deprecated":false,"deprecationMessage":""},{"name":"padding","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"literal type","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"buttonRect","type":"DOMRect","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltipRect","type":"DOMRect","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paddingTooltip","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"padding","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Renderer2 } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ZoneAxeService {\\n  private readonly tooltipRect: DOMRect;\\n  private readonly buttonRect: DOMRect;\\n\\n  constructor(\\n    private tooltip: HTMLDivElement,\\n    private readonly target: HTMLElement,\\n    private readonly renderer2: Renderer2\\n  ) {\\n    this.tooltipRect = tooltip.getBoundingClientRect();\\n    this.buttonRect = target.getBoundingClientRect();\\n  }\\n\\n  axes(): { top: string; left: string } {\\n    const padding = 40;\\n    const paddingTooltip = 16;\\n\\n    const position = this.calculatePositionRecursively(\\n      this.buttonRect,\\n      this.tooltipRect,\\n      paddingTooltip,\\n      padding\\n    );\\n    return position;\\n  }\\n\\n  calculatePositionRecursively(\\n    buttonRect: DOMRect,\\n    tooltipRect: DOMRect,\\n    paddingTooltip: number,\\n    padding: number\\n  ): {\\n    top: string;\\n    left: string;\\n  } {\\n    const arrowFct = this.tooltip.children[0].children[0];\\n\\n    const centerX = buttonRect.left + buttonRect.width / 2;\\n    const centerY =\\n      buttonRect.bottom - buttonRect.height / 2 - tooltipRect.height / 2;\\n\\n    const position = {\\n      top: \'\',\\n      left: \'\',\\n    };\\n    if (\\n      buttonRect.right + tooltipRect.width + padding < window.innerWidth &&\\n      centerY + tooltipRect.height < window.innerHeight &&\\n      centerY >= -40\\n    ) {\\n      position.top =\\n        centerY >= 0 ? `${centerY}` : `${buttonRect.top + 10 - paddingTooltip}`;\\n      position.left = `${centerX + paddingTooltip + buttonRect.width / 2}`;\\n      this.renderer2.addClass(arrowFct, \'right\');\\n\\n      if (centerY <= 0) {\\n        this.renderer2.setStyle(\\n          arrowFct,\\n          \'top\',\\n          `${(buttonRect.top - buttonRect.height / 2) / 16}rem`\\n        );\\n      }\\n    } else if (\\n      buttonRect.left - tooltipRect.width > 0 &&\\n      centerY + tooltipRect.height < window.innerHeight\\n    ) {\\n      position.top =\\n        centerY >= 0 ? `${centerY}` : `${buttonRect.top + 10 - paddingTooltip}`;\\n      position.left = `${buttonRect.left + paddingTooltip - tooltipRect.width}`;\\n      this.renderer2.addClass(arrowFct, \'left\');\\n    } else if (\\n      buttonRect.bottom + tooltipRect.height + padding <\\n      window.innerHeight\\n    ) {\\n      position.top = `${buttonRect.bottom + paddingTooltip}`;\\n      position.left = `${centerX - tooltipRect.width / 2}`;\\n      this.renderer2.addClass(arrowFct, \'bottom\');\\n    } else if (buttonRect.top - tooltipRect.height - paddingTooltip > 0) {\\n      position.top = `${buttonRect.top - paddingTooltip - tooltipRect.height}`;\\n      position.left = `${centerX - tooltipRect.width / 2}`;\\n      this.renderer2.addClass(arrowFct, \'top\');\\n\\n      if (centerX + tooltipRect.width / 2 > window.innerWidth) {\\n        position.left = `${\\n          centerX - tooltipRect.width + buttonRect.width / 2 + paddingTooltip\\n        }`;\\n        this.renderer2.setStyle(\\n          arrowFct,\\n          \'left\',\\n          `${(tooltipRect.width - tooltipRect.width / 4) / 16}rem`\\n        );\\n      }\\n    } else {\\n      // Default position\\n      return position;\\n    }\\n\\n    return position;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"tooltip","type":"HTMLDivElement","deprecated":false,"deprecationMessage":""},{"name":"target","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"renderer2","type":"Renderer2","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"tooltip","type":"HTMLDivElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"target","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"renderer2","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"}],"guards":[],"interceptors":[],"classes":[],"directives":[{"name":"FadeInOutDirective","id":"directive-FadeInOutDirective-6e48b6e3c43aeb92ca6d404eb98adef7cc5dda314ba5b54d1bbbea7b5533cf23dc227ecab7531b496d7ea0e6c2e8db0291ba4e2f743538b31d8afde328896be4","file":"ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts","type":"directive","description":"<p>A directive that applies a fade-in/out animation based on the provided input control&#39;s state.</p>\\n","rawdescription":"\\n\\nA directive that applies a fade-in/out animation based on the provided input control\'s state.\\n","sourceCode":"import { Directive, ElementRef, inject, Input } from \'@angular/core\';\\nimport {\\n  animate,\\n  AnimationBuilder,\\n  AnimationPlayer,\\n  style,\\n} from \'@angular/animations\';\\n\\n/**\\n * A directive that applies a fade-in/out animation based on the provided input control\'s state.\\n */\\n@Directive({\\n  selector: \'[ngxFadeInOut]\',\\n  standalone: true,\\n  exportAs: \'ngxFadeInOut\', // Expose the directive instance,\\n})\\nexport class FadeInOutDirective<T> {\\n  /**\\n   * The ElementRef of the element on which the animation will be applied.\\n   * @private\\n   */\\n  private readonly _elementRef = inject(ElementRef);\\n  /**\\n   * The AnimationBuilder instance used to create animations.\\n   * @private\\n   */\\n  private readonly _animationBuilder = inject(AnimationBuilder);\\n  /**\\n   * Provides programmatic control of a reusable animation sequence, built using the\\n   * @private\\n   */\\n  private animationPlayer: AnimationPlayer | undefined;\\n\\n  /**\\n   * Binds the input control\'s value to trigger the fade-in/out animation.\\n   * @param control The input control (form control or boolean value) to monitor for animation triggering.\\n   */\\n  @Input(\'ngxFadeInOut\') set errorControl(control: T) {\\n    if (control !== \'VALID\' || !control) {\\n      this.playAnimation();\\n    }\\n  }\\n\\n  /**\\n   * Plays the fade-in/out animation on the element.\\n   */\\n  playAnimation(): void {\\n    const animationFactory = this._animationBuilder.build([\\n      style({\\n        opacity: 0,\\n        transform: \'translateY(-5px)\',\\n      }),\\n      animate(\'300ms cubic-bezier(0.55, 0, 0.55, 0.2)\'),\\n    ]);\\n    if (this.animationPlayer) {\\n      this.animationPlayer.destroy();\\n    }\\n    const element = this._elementRef.nativeElement;\\n    this.animationPlayer = animationFactory.create(element);\\n    this.animationPlayer.play();\\n  }\\n}\\n","selector":"[ngxFadeInOut]","providers":[],"exportAs":"ngxFadeInOut","hostDirectives":[],"standalone":true,"inputsClass":[{"name":"ngxFadeInOut","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1000,"end":1105,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1001,"end":1006,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The input control (form control or boolean value) to monitor for animation triggering.</p>\\n","name":{"pos":1007,"end":1014,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nBinds the input control\'s value to trigger the fade-in/out animation.\\n","description":"<p>Binds the input control&#39;s value to trigger the fade-in/out animation.</p>\\n","line":38,"type":"T","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_animationBuilder","defaultValue":"inject(AnimationBuilder)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>The AnimationBuilder instance used to create animations.</p>\\n","line":27,"rawdescription":"\\n\\nThe AnimationBuilder instance used to create animations.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":666,"end":678,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":667,"end":674,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"_elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>The ElementRef of the element on which the animation will be applied.</p>\\n","line":22,"rawdescription":"\\n\\nThe ElementRef of the element on which the animation will be applied.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":525,"end":537,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":526,"end":533,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"animationPlayer","deprecated":false,"deprecationMessage":"","type":"AnimationPlayer | undefined","optional":false,"description":"<p>Provides programmatic control of a reusable animation sequence, built using the</p>\\n","line":32,"rawdescription":"\\n\\nProvides programmatic control of a reusable animation sequence, built using the\\n","modifierKind":[121],"jsdoctags":[{"pos":842,"end":854,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":843,"end":850,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]}],"methodsClass":[{"name":"playAnimation","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPlays the fade-in/out animation on the element.\\n","description":"<p>Plays the fade-in/out animation on the element.</p>\\n"}],"accessors":{"errorControl":{"name":"errorControl","setSignature":{"name":"errorControl","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"control","type":"T","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":38,"rawdescription":"\\n\\nBinds the input control\'s value to trigger the fade-in/out animation.\\n","description":"<p>Binds the input control&#39;s value to trigger the fade-in/out animation.</p>\\n","jsdoctags":[{"name":{"pos":1007,"end":1014,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":1001,"end":1006,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The input control (form control or boolean value) to monitor for animation triggering.</p>\\n"}]}}}},{"name":"PapControlDirective","id":"directive-PapControlDirective-6dc51c7ca02933d8bffe51d00a210ad3568e3b56f1583f2fe989000fcd809fe76c84eb2e482c0a4f460d803dc7144306b3ed03eb06f754791e19339ca854dbf3","file":"ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive } from \'@angular/core\';\\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \'@angular/forms\';\\n\\n@Directive({\\n  selector: \'[ngxControl]\',\\n  standalone: true,\\n  providers: [\\n    {\\n      provide: NG_VALUE_ACCESSOR,\\n      multi: true,\\n      useExisting: PapControlDirective,\\n    },\\n  ],\\n})\\nexport class PapControlDirective implements ControlValueAccessor {\\n  writeValue(): void {\\n    //\\n  }\\n  registerOnChange(): void {\\n    //\\n  }\\n  registerOnTouched(): void {\\n    //\\n  }\\n}\\n","selector":"[ngxControl]","providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PapControlDirective,\\n}","type":"directive"}],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"registerOnChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""},{"name":"registerOnTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"writeValue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"implements":["ControlValueAccessor"]},{"name":"PatchFormGroupValueDirective","id":"directive-PatchFormGroupValueDirective-04d2415693a66aee16b016cbdbd80b830db19794a408ea70062609c57fbd5bb59fd8a60202dc3791d0d39d46b91ee4654e41dc0fbb52d0863c592fd6b084baac","file":"ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Input } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\n\\n@Directive({\\n  selector: \'[ngxFormGroupValues]\',\\n  standalone: true,\\n})\\nexport class PatchFormGroupValueDirective {\\n  @Input() formGroup: FormGroup = {} as FormGroup;\\n\\n  @Input() set ngxFormGroupValues(val: unknown) {\\n    if (!val) {\\n      return;\\n    }\\n    this.formGroup.patchValue(val, { emitEvent: false });\\n  }\\n}\\n","selector":"[ngxFormGroupValues]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"formGroup","defaultValue":"{} as FormGroup","deprecated":false,"deprecationMessage":"","line":9,"type":"FormGroup","decorators":[]},{"name":"ngxFormGroupValues","deprecated":false,"deprecationMessage":"","line":11,"type":"","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[],"accessors":{"ngxFormGroupValues":{"name":"ngxFormGroupValues","setSignature":{"name":"ngxFormGroupValues","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":11,"jsdoctags":[{"name":"val","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"RenderYouDirective","id":"directive-RenderYouDirective-42afd46074a5f93346c2f829080016ae22d26964164c4a5221e15667e18c3a9aabb7eb74b8db73ab1e8a33c35ec509fbfcbed4a91cce31a2f6d13bf2bee3d1dd","file":"ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  ComponentFactoryResolver,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  Input,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \'@angular/core\';\\nimport { FtxTooltipComponent } from \'../ftx-tooltip.component\';\\nimport { ZoneAxeService } from \'../service/zone-axe.service\';\\n\\n@Directive({\\n  selector: \'[renderYou] \',\\n  standalone: true,\\n})\\nexport class RenderYouDirective {\\n  @Input() element: any; //eslint-disable-line\\n\\n  @Input() elementText?: string;\\n  private readonly elementRef = inject(ElementRef);\\n  private readonly renderer2 = inject(Renderer2);\\n\\n  private readonly componentFactoryResolver = inject(ComponentFactoryResolver);\\n  private readonly viewContainerRef = inject(ViewContainerRef);\\n  private componentRef: ComponentRef<any> | any; // eslint-disable-line\\n\\n  @HostListener(\'mouseenter\', [\'$event\']) onMouseEnter(event: MouseEvent) {\\n    const element = this.elementRef.nativeElement;\\n    const targetElement = event.target as HTMLElement;\\n    // Avoid the children\\n    if (targetElement === element) {\\n      const componentFactory =\\n        this.componentFactoryResolver.resolveComponentFactory(\\n          FtxTooltipComponent\\n        );\\n      this.componentRef =\\n        this.viewContainerRef.createComponent(componentFactory);\\n      this.componentRef.instance.rendererTemplate = this.element;\\n      this.componentRef.instance.text = this.elementText;\\n\\n      // find the app-root element\\n      const appRoot = document.querySelector(\'app-root\');\\n      const storybook = document.querySelector(\'storybook-root\');\\n      const elementToAdd = this.componentRef.location.nativeElement;\\n      const insertAfter = (newNode: HTMLElement, referenceNode: Element) => {\\n        if (referenceNode?.parentNode)\\n          referenceNode.parentNode.insertBefore(\\n            newNode,\\n            referenceNode.nextSibling\\n          );\\n      };\\n\\n      if (appRoot) {\\n        insertAfter(elementToAdd, appRoot);\\n      } else if (storybook) {\\n        insertAfter(elementToAdd, storybook);\\n      }\\n\\n      // set the tooltip component\'s position to absolute\\n      this.componentRef.location.nativeElement.style.position = \'absolute\';\\n      this.componentRef.changeDetectorRef.detectChanges();\\n\\n      // set the top and left positions of the tooltip component\\n      const position = new ZoneAxeService(\\n        this.componentRef.location.nativeElement,\\n        element,\\n        this.renderer2\\n      ).axes();\\n      this.componentRef.location.nativeElement.style.top = `${\\n        +position.top / 16\\n      }rem`;\\n      this.componentRef.location.nativeElement.style.left = `${\\n        +position.left / 16\\n      }rem`;\\n      this.componentRef.location.nativeElement.style.zIndex = \'98\';\\n      this.componentRef.changeDetectorRef.detectChanges();\\n    }\\n  }\\n  @HostListener(\'mouseleave\') onMouseLeave() {\\n    if (this.componentRef) {\\n      this.componentRef.destroy();\\n      this.componentRef = null;\\n    }\\n  }\\n}\\n","selector":"[renderYou] ","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"element","deprecated":false,"deprecationMessage":"","line":20,"type":"any","decorators":[]},{"name":"elementText","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"mouseenter","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":30},{"name":"mouseleave","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":82}],"propertiesClass":[{"name":"componentFactoryResolver","defaultValue":"inject(ComponentFactoryResolver)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[121,146]},{"name":"componentRef","deprecated":false,"deprecationMessage":"","type":"ComponentRef<any> | any","optional":false,"description":"","line":28,"modifierKind":[121]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[121,146]},{"name":"renderer2","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121,146]},{"name":"viewContainerRef","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[121,146]}],"methodsClass":[{"name":"onMouseEnter","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseenter\', [\'$event\']"}],"modifierKind":[167],"jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseLeave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseleave\'"}],"modifierKind":[167]}]},{"name":"ScrollHintDirective","id":"directive-ScrollHintDirective-a00cbed762e1126c429559455ca5c7b0c432ed7973bcdd04007facdfbe401c8c14da380af64e2bd14684c8643522ee140f7d169a2b78a56e8cd086beb417baa1","file":"ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts","type":"directive","description":"<p>Directive to create a scroll hint effect with opacity on a scrollable element.</p>\\n","rawdescription":"\\n\\nDirective to create a scroll hint effect with opacity on a scrollable element.\\n","sourceCode":"import {\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  OnDestroy,\\n  Renderer2,\\n} from \'@angular/core\';\\nimport {\\n  distinctUntilChanged,\\n  fromEvent,\\n  map,\\n  Subject,\\n  takeUntil,\\n  tap,\\n} from \'rxjs\';\\n\\n/**\\n * Directive to create a scroll hint effect with opacity on a scrollable element.\\n */\\n@Directive({\\n  selector: \'[sivanScrollHint]\',\\n  standalone: true,\\n})\\nexport class ScrollHintDirective implements OnDestroy {\\n  /**\\n   * {ElementRef} elementRef - Reference to the host element.\\n   * @private\\n   */\\n  private readonly elementRef = inject(ElementRef);\\n  /**\\n   * {Renderer2} renderer - Renderer to manipulate the DOM.\\n   * @private\\n   */\\n  private readonly renderer2 = inject(Renderer2);\\n  private pseudoElement: HTMLElement | null = null;\\n  /**\\n   * {Subject} renderer - Renderer to manipulate the DOM.\\n   * @private\\n   */\\n  private destroyed$ = new Subject();\\n\\n  constructor() {\\n    this.pseudoElement = this.renderer2.createElement(\'div\');\\n    this.renderer2.addClass(this.pseudoElement, \'scroll-opacity-pseudo\');\\n    this.renderer2.appendChild(\\n      this.elementRef.nativeElement,\\n      this.pseudoElement\\n    );\\n  }\\n\\n  /**\\n   * Event handler for the \'scroll\' event.\\n   *\\n   * @param {Event} $event - The scroll event.\\n   */\\n  @HostListener(\'scroll\', [\'$event\']) //eslint-disable-next-line\\n  onWindow($event: any) {\\n    fromEvent<Event>($event.target, \'scroll\')\\n      .pipe(\\n        map((event: Event) => event.target as HTMLElement),\\n        distinctUntilChanged(),\\n        tap((contentElement) => {\\n          const contentScrollHeight =\\n            contentElement.scrollHeight - contentElement.offsetHeight;\\n          const currentScroll = contentElement.scrollTop / contentScrollHeight;\\n          // Calculate the opacity value for the bottom 40px\\n          let opacity = currentScroll;\\n          opacity = +Math.min(1, Math.max(0, opacity)).toFixed(2);\\n          // Calculate the height of the scrollable content\\n          const contentHeight = contentElement.scrollHeight;\\n          // Calculate the height of the bottom 40px\\n          const bottomHeight = 40;\\n          // Calculate the top position for the pseudo-element\\n          const topPosition = contentHeight - bottomHeight;\\n          // Apply styles to the pseudo-element\\n          this.renderer2.setStyle(this.pseudoElement, \'position\', \'absolute\');\\n          this.renderer2.setStyle(this.pseudoElement, \'z-index\', \'101\');\\n          this.renderer2.setStyle(\\n            this.pseudoElement,\\n            \'top\',\\n            `calc(100vh - 95px - 0.65rem)`\\n          );\\n          this.renderer2.setStyle(this.pseudoElement, \'left\', \'0\');\\n          this.renderer2.setStyle(this.pseudoElement, \'width\', \'100%\');\\n          this.renderer2.setStyle(\\n            this.pseudoElement,\\n            \'height\',\\n            `${bottomHeight}px`\\n          );\\n          this.renderer2.setStyle(\\n            this.pseudoElement,\\n            \'background\',\\n            `linear-gradient(rgb(0 0 0 / 0%), rgb(100 116 139/var(--tw-bg-opacity)))`\\n          );\\n          this.renderer2.setStyle(\\n            this.pseudoElement,\\n            \'opacity\',\\n            `${1 - opacity}`\\n          );\\n        }),\\n        takeUntil(this.destroyed$)\\n      )\\n      .subscribe();\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.destroyed$.next(true);\\n    this.destroyed$.complete();\\n  }\\n}\\n","selector":"[sivanScrollHint]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"scroll","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEvent handler for the \'scroll\' event.\\n\\n","description":"<p>Event handler for the &#39;scroll&#39; event.</p>\\n","jsdoctags":[{"pos":1197,"end":1242,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1198,"end":1203,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The scroll event.</li>\\n</ul>\\n","typeExpression":{"pos":1204,"end":1211,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":1205,"end":1210,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":1205,"end":1210,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Event"}}},"name":{"pos":1212,"end":1218,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"$event"},"isNameFirst":false,"isBracketed":false}],"line":58}],"propertiesClass":[{"name":"destroyed$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>{Subject} renderer - Renderer to manipulate the DOM.</p>\\n","line":41,"rawdescription":"\\n\\n{Subject} renderer - Renderer to manipulate the DOM.\\n","modifierKind":[121],"jsdoctags":[{"pos":824,"end":836,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":825,"end":832,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>{ElementRef} elementRef - Reference to the host element.</p>\\n","line":30,"rawdescription":"\\n\\n{ElementRef} elementRef - Reference to the host element.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":500,"end":512,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":501,"end":508,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]},{"name":"pseudoElement","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"HTMLElement | null","optional":false,"description":"","line":36,"modifierKind":[121]},{"name":"renderer2","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>{Renderer2} renderer - Renderer to manipulate the DOM.</p>\\n","line":35,"rawdescription":"\\n\\n{Renderer2} renderer - Renderer to manipulate the DOM.\\n","modifierKind":[121,146],"jsdoctags":[{"pos":638,"end":650,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":337,"tagName":{"pos":639,"end":646,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"private"},"comment":""}]}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":""},{"name":"onWindow","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEvent handler for the \'scroll\' event.\\n\\n","description":"<p>Event handler for the &#39;scroll&#39; event.</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'scroll\', [\'$event\']"}],"modifierKind":[167],"jsdoctags":[{"name":{"pos":1212,"end":1218,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"$event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1198,"end":1203,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The scroll event.</li>\\n</ul>\\n","typeExpression":{"pos":1204,"end":1211,"flags":8421376,"modifierFlagsCache":0,"transformFlags":0,"kind":312,"type":{"pos":1205,"end":1210,"flags":8388608,"modifierFlagsCache":0,"transformFlags":1,"kind":180,"typeName":{"pos":1205,"end":1210,"flags":8388608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Event"}}}}]}],"implements":["OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":41}}],"components":[{"name":"AppComponent","id":"component-AppComponent-798fc3a8a1b08eb5275476ec2a31f3c9615371a80d30953a8b2a1c730716946e91af9a9027df37870b603f1595a8e9fdf5a804350d75950f3495b529fb2f7912","file":"src/app/app.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"title","defaultValue":"\'coagulu\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"RouterModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n@Component({\\n  standalone: true,\\n  imports: [RouterModule],\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class AppComponent {\\n  title = \'coagulu\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","templateData":"<div class=\\"bg-slate-200\\">\\n  <router-outlet></router-outlet>\\n</div>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-1a36125b90a78e52e1f8d4cb1a0630e807e7c7b0483b3a438ba4945e87113a6284ade9ef8d715ca35bc62cbbc8e728b04f1bc3fce775020614a56cbd9cc8fc83","file":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngx-button-component","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disable","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean | undefined | null","decorators":[]},{"name":"roundedFull","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"typeButton","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]}],"outputsClass":[{"name":"marian","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":20,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatButtonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  Output,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\n\\n@Component({\\n  selector: \'ngx-button-component\',\\n  standalone: true,\\n  imports: [CommonModule, MatButtonModule],\\n  templateUrl: \'./button.component.html\',\\n  styleUrls: [\'./button.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ButtonComponent {\\n  @Output() marian = new EventEmitter();\\n  @Input() public disable: boolean | undefined | null;\\n  @Input() public roundedFull = \'\';\\n  @Input() public typeButton = \'\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./button.component.scss"}],"stylesData":"","templateData":"<button\\n  [type]=\\"typeButton\\"\\n  [disabled]=\\"disable\\"\\n  [ngClass]=\\"{ \'!bg-blue-700\': disable }\\"\\n  mat-button\\n  (click)=\\"marian.emit()\\"\\n  class=\\"mat-primary mat-raised-button !bg-blue-500 !text-white p-2\\"\\n  [className]=\\"roundedFull\\"\\n>\\n  <ng-content></ng-content>\\n</button>\\n<ng-template #element>tete</ng-template>\\n"},{"name":"FormBadgeComponent","id":"component-FormBadgeComponent-092552328ac19d37ce538b0d2f839fdcdca113be207169d491c43b585ceb364d4784f0219caa5d9a5b5d48c5543d72c1642c5f3590bee24a2579b17c8b123b36","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngx-form-badge","styleUrls":["./form-badge.component.scss"],"styles":[],"templateUrl":["./form-badge.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"actionBadge","defaultValue":"[\\n    { side: \'middle\', action: () => console.log(\'TEST\'), text: \'Nothig\' },\\n  ]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAction\\n","description":"<p>Action</p>\\n","line":39,"type":"ActionBadge[]","decorators":[]},{"name":"typeBadge","defaultValue":"\'error\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nType of badge\\n","description":"<p>Type of badge</p>\\n","line":33,"type":"TypeBadge","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_generativeService","defaultValue":"inject(GenerativeService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[122,146]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatIconModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  inject,\\n  Input,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TypeBadge, TypeSide } from \'../../utils\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { GenerativeService } from \'../../service\';\\n\\nexport interface ActionBadge {\\n  side: TypeSide;\\n  action: () => unknown;\\n  icon?: string;\\n  text: string;\\n}\\n@Component({\\n  selector: \'ngx-form-badge\',\\n  standalone: true,\\n  imports: [CommonModule, MatIconModule],\\n  templateUrl: \'./form-badge.component.html\',\\n  styleUrls: [\'./form-badge.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FormBadgeComponent {\\n  protected readonly _generativeService = inject(GenerativeService);\\n\\n  /**\\n   * Type of badge\\n   */\\n  @Input()\\n  typeBadge: TypeBadge = \'error\';\\n\\n  /**\\n   * Action\\n   */\\n  @Input()\\n  actionBadge: ActionBadge[] = [\\n    { side: \'middle\', action: () => console.log(\'TEST\'), text: \'Nothig\' },\\n  ];\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@mixin animation() {\\n  @apply hover:opacity-90 hover:scale-[1.08] transition-all duration-200 ease-in-out;\\n}\\n:host {\\n  .wrapper-badge {\\n    @apply flex gap-2 items-center px-4 w-max;\\n    @include animation();\\n  }\\n  ::ng-deep {\\n    mat-icon {\\n      @include animation();\\n    }\\n  }\\n}\\n","styleUrl":"./form-badge.component.scss"}],"stylesData":"","templateData":"<div\\n  class=\\"wrapper-badge rounded-xl border-solid border-1 drop-shadow-md text prose prose-zinc prose-lg border-2\\"\\n  [ngClass]=\\"{\\n    \'bg-green-300 border-green-300 text-green-700\': typeBadge === \'success\',\\n    \'bg-blue-300 border-blue-300 text-blue-700 \': typeBadge === \'done\',\\n    \'bg-red-300 border-red-300 text-red-700 \': typeBadge === \'error\',\\n    \'bg-yellow-400 border-yellow-300 text-yellow-700 \': typeBadge === \'warning\',\\n    \'bg-blue-100 border-blue-300 text-blue-700 \': typeBadge === \'open\',\\n    \'bg-white border-gray-300\': typeBadge === \'pfm\'\\n  }\\"\\n>\\n  <ng-container *ngFor=\\"let badge of actionBadge\\">\\n    <ng-container *ngIf=\\"badge.side === \'left\' && badge.icon\\">\\n      <mat-icon [svgIcon]=\\"badge.icon\\" (click)=\\"badge.action()\\" />\\n    </ng-container>\\n    <ng-container *ngIf=\\"badge.side === \'middle\' && !badge.icon\\">\\n      <div (click)=\\"badge.action()\\">\\n        {{ badge.text }}\\n      </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\"badge.side === \'right\' && badge.icon\\">\\n      <mat-icon [svgIcon]=\\"badge.icon\\" (click)=\\"badge.action()\\" />\\n    </ng-container>\\n  </ng-container>\\n</div>\\n"},{"name":"FormControlEntityComponent","id":"component-FormControlEntityComponent-b192b7a6effaa1801490e9baea2807c9d692bb8c51f5f7080160eda65ea69f504f34415d8f38dfe9317b9ecccd869730c459383d474fa0d80060cf9fb543adf9","file":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngx-form-control-entity","styleUrls":["./form-control-entity.component.scss"],"styles":[],"templateUrl":["./form-control-entity.component.html"],"viewProviders":[],"hostDirectives":[{"name":"PapControlDirective"}],"inputsClass":[{"name":"isFormArray","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for input\\n","description":"<p>Label for input</p>\\n","line":56,"type":"boolean","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":39,"type":"string | undefined","decorators":[]},{"name":"labelInput","defaultValue":"\'Complete label\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for input\\n","description":"<p>Label for input</p>\\n","line":51,"type":"string","decorators":[]},{"name":"placeholderInput","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPlaceholder for input\\n","description":"<p>Placeholder for input</p>\\n","line":47,"type":"string","decorators":[]},{"name":"toggleData","defaultValue":"[{ value: false, description: \'default\' }]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen input is radio button\\n","description":"<p>When input is radio button</p>\\n","line":60,"type":"{}","decorators":[]},{"name":"typeInput","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nType of Input checkbox text\\n","description":"<p>Type of Input checkbox text</p>\\n","line":43,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"ngControl","defaultValue":"injectNgControl()","deprecated":false,"deprecationMessage":"","type":"FormControlDirective | FormControlName | NgModel | NgControl","optional":false,"description":"","line":61}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"InputComponent","type":"component"},{"name":"ReactiveFormsModule","type":"module"},{"name":"MatInputModule","type":"module"},{"name":"FadeInOutDirective","type":"directive"},{"name":"FormLabelComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  inject,\\n  Input,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport {\\n  FormControlDirective,\\n  FormControlName,\\n  FormsModule,\\n  NgControl,\\n  NgModel,\\n  ReactiveFormsModule,\\n} from \'@angular/forms\';\\nimport { InputComponent, PapControlDirective } from \'../../shared\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { FadeInOutDirective } from \'../../directive/fade-in-out.directive\';\\nimport { FormLabelComponent } from \'../formLabel/form-label.component\';\\n\\n@Component({\\n  selector: \'ngx-form-control-entity\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    InputComponent,\\n    ReactiveFormsModule,\\n    MatInputModule,\\n    FadeInOutDirective,\\n    FormLabelComponent,\\n  ],\\n  templateUrl: \'./form-control-entity.component.html\',\\n  styleUrls: [\'./form-control-entity.component.scss\'],\\n  hostDirectives: [PapControlDirective],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FormControlEntityComponent {\\n  @Input() label: string | undefined = \'\';\\n  /**\\n   * Type of Input checkbox text\\n   */\\n  @Input() typeInput? = \'text\';\\n  /**\\n   * Placeholder for input\\n   */\\n  @Input() placeholderInput? = \'\';\\n  /**\\n   * Label for input\\n   */\\n  @Input() labelInput? = \'Complete label\';\\n\\n  /**\\n   * Label for input\\n   */\\n  @Input() isFormArray? = false;\\n  /**\\n   * When input is radio button\\n   */\\n  @Input() toggleData? = [{ value: false, description: \'default\' }];\\n  ngControl: FormControlDirective | FormControlName | NgModel | NgControl =\\n    injectNgControl();\\n}\\n\\nfunction injectNgControl() {\\n  const ngControl = inject(NgControl, { self: true, optional: true });\\n  if (!ngControl) {\\n    throw new Error(\'Not ng Controll\');\\n  }\\n  if (\\n    ngControl instanceof FormControlDirective ||\\n    ngControl instanceof FormControlName ||\\n    ngControl instanceof NgModel\\n  ) {\\n    return ngControl;\\n  }\\n  throw new Error(`Not of instance of Form Directive Name Model`);\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-control-entity.component.scss"}],"stylesData":"","templateData":"<div class=\\"flex justify-between items-center py-2 gap-1\\">\\n  <ngx-form-label\\n    [isFormArray]=\\"isFormArray\\"\\n    [label]=\\"label\\"\\n    [typeInput]=\\"typeInput\\"\\n    [labelInput]=\\"labelInput\\"\\n  />\\n  <div\\n    [ngClass]=\\"{\\n      \'col-span-1 gap-4 items-center\': typeInput === \'boolean\',\\n      \'flex-1 pr-2\': typeInput !== \'boolean\' && !isFormArray,\\n      \'w-full px-2\': isFormArray\\n    }\\"\\n  >\\n    <ngx-input-component\\n      [control]=\\"ngControl\\"\\n      [typeInput]=\\"typeInput\\"\\n      [placeholderInput]=\\"placeholderInput\\"\\n      [labelInput]=\\"labelInput\\"\\n      [toggleData]=\\"toggleData\\"\\n    />\\n    <p class=\\"!m-0\\" *ngIf=\\"labelInput && typeInput === \'boolean\'\\">\\n      {{ labelInput }}\\n    </p>\\n  </div>\\n</div>\\n"},{"name":"FormLabelComponent","id":"component-FormLabelComponent-e8405abaf28b5e5aeb5a11085b09004d5eccdea3894c2c5581d9424249b061dd3f0c17821ef4be55cc0d8ce4d4e46a867499db9e5af9834bb40d8cae9194892e","file":"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngx-form-label","styleUrls":["./form-label.component.scss"],"styles":[],"templateUrl":["./form-label.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"descriptionEntity","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDescription for input\\n","description":"<p>Description for input</p>\\n","line":51,"type":"DescriptionEntity","decorators":[]},{"name":"haveTooltip","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMessage for tooltip\\n","description":"<p>Message for tooltip</p>\\n","line":47,"type":"boolean","decorators":[]},{"name":"isFormArray","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs array form Input\\n","description":"<p>Is array form Input</p>\\n","line":28,"type":"boolean","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for input\\n","description":"<p>Label for input</p>\\n","line":33,"type":"string | undefined","decorators":[]},{"name":"labelInput","defaultValue":"\'Complete label\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for input\\n","description":"<p>Label for input</p>\\n","line":43,"type":"string","decorators":[]},{"name":"typeInput","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nType of Input checkbox text\\n","description":"<p>Type of Input checkbox text</p>\\n","line":38,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"actionBadge","defaultValue":"[\\n    {\\n      icon: \'fa_solid:RO\',\\n      side: \'left\',\\n      action: () => console.log(\'ivan\'),\\n    },\\n  ] as ActionBadge[]","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatIconModule","type":"module"},{"name":"FormBadgeComponent","type":"component"},{"name":"RenderYouDirective","type":"directive"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport {\\n  ActionBadge,\\n  FormBadgeComponent,\\n} from \'../formBadge/form-badge.component\';\\nimport { RenderYouDirective } from \'ngx-fts-tooltip\';\\nimport { DescriptionEntity } from \'../../interfaces\';\\n\\n@Component({\\n  selector: \'ngx-form-label\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    MatIconModule,\\n    FormBadgeComponent,\\n    RenderYouDirective,\\n  ],\\n  templateUrl: \'./form-label.component.html\',\\n  styleUrls: [\'./form-label.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FormLabelComponent {\\n  /**\\n   * Is array form Input\\n   */\\n  @Input() isFormArray? = false;\\n\\n  /**\\n   * Label for input\\n   */\\n  @Input() label: string | undefined = \'\';\\n\\n  /**\\n   * Type of Input checkbox text\\n   */\\n  @Input() typeInput? = \'text\';\\n\\n  /**\\n   * Label for input\\n   */\\n  @Input() labelInput? = \'Complete label\';\\n  /**\\n   * Message for tooltip\\n   */\\n  @Input() haveTooltip?: boolean;\\n  /**\\n   * Description for input\\n   */\\n  @Input() descriptionEntity?: DescriptionEntity;\\n  actionBadge = [\\n    {\\n      icon: \'fa_solid:RO\',\\n      side: \'left\',\\n      action: () => console.log(\'ivan\'),\\n    },\\n  ] as ActionBadge[];\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-label.component.scss"}],"stylesData":"","templateData":"<div class=\\"flex w-60 px-5\\" *ngIf=\\"(label || labelInput) && !isFormArray\\">\\n  <p\\n    [ngClass]=\\"{ invisible: typeInput === \'boolean\' }\\"\\n    class=\\"flex-1 text prose prose-zinc prose-xl !mx-4 !my-0\\"\\n    *ngIf=\\"(label || labelInput) && !isFormArray\\"\\n  >\\n    {{ label }}\\n  </p>\\n\\n  <div\\n    *ngIf=\\"(label || labelInput) && !isFormArray\\"\\n    class=\\"flex h-8 items-center\\"\\n  >\\n    <ngx-form-badge [actionBadge]=\\"actionBadge\\" renderYou [element]=\\"test\\" />\\n  </div>\\n</div>\\n\\n<ng-template #test>\\n  <div>\\n    sdasdasd\\n    <div>dadasdssssssssssssssssasd</div>\\n    <div>dasdasdasd</div>\\n    <p>sdasdasd</p>\\n    <p>sdasdasd</p>\\n  </div>\\n</ng-template>\\n"},{"name":"FtxFormsComponent","id":"component-FtxFormsComponent-8d352fe80a4acfd813cca20311ffbcf951af44bf8b59eee00ba0eec4511146a908f12406440edeb12446c7fc4b98a55a6b8604eae49bb12eb26e22b6a32c83f2","file":"ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngx-ftx-forms","styleUrls":["./ftx-forms.component.scss"],"styles":[],"templateUrl":["./ftx-forms.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dynamicForm","defaultValue":"{} as any","deprecated":false,"deprecationMessage":"","line":36,"type":"FormGroup | FormControl | FormArray | any","decorators":[]},{"name":"jsonData","deprecated":false,"deprecationMessage":"","line":50,"type":"DataFormBuilder","decorators":[]}],"outputsClass":[{"name":"submitEvent","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter"}],"propertiesClass":[{"name":"_jsonData","defaultValue":"{} as DataFormBuilder","deprecated":false,"deprecationMessage":"","type":"DataFormBuilder","optional":false,"description":"","line":44,"modifierKind":[121]},{"name":"controlMapping","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":42},{"name":"generateFormBuilderService","defaultValue":"inject(GenerateFormBuilderService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"generativeService","defaultValue":"inject(GenerativeService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"ReactiveFormsModule","type":"module"},{"name":"FormControlEntityComponent","type":"component"},{"name":"ButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  inject,\\n  Input,\\n  Output,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport {\\n  FormArray,\\n  FormControl,\\n  FormGroup,\\n  ReactiveFormsModule,\\n} from \'@angular/forms\';\\nimport { DataFormBuilder } from \'./interfaces\';\\nimport { FormControlEntityComponent } from \'./components\';\\nimport { ButtonComponent } from \'./shared\';\\nimport { GenerateFormBuilderService, GenerativeService } from \'./service\';\\n\\n@Component({\\n  selector: \'ngx-ftx-forms\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    ReactiveFormsModule,\\n    FormControlEntityComponent,\\n    ButtonComponent,\\n  ],\\n  templateUrl: \'./ftx-forms.component.html\',\\n  styleUrls: [\'./ftx-forms.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FtxFormsComponent {\\n  //eslint-disable-next-line\\n  @Input() dynamicForm: FormGroup | FormControl | FormArray | any = {} as any;\\n  @Output() submitEvent = new EventEmitter();\\n\\n  generativeService = inject(GenerativeService);\\n  generateFormBuilderService = inject(GenerateFormBuilderService);\\n\\n  controlMapping: any = []; // eslint-disable-line\\n\\n  private _jsonData: DataFormBuilder = {} as DataFormBuilder;\\n\\n  get jsonData(): DataFormBuilder {\\n    return this._jsonData;\\n  }\\n\\n  @Input() set jsonData(jsonData) {\\n    this._jsonData = jsonData;\\n    if (jsonData.values) {\\n      for (const item of jsonData.values) {\\n        const label = item.label?.toLowerCase();\\n\\n        if (item?.label) {\\n          this.controlMapping[label ?? \'\'] = item;\\n        }\\n\\n        // Check for values or bulkValues and iterate over them\\n        const itemsToMap = [...(item.values ?? []), ...(item.bulkValues ?? [])];\\n        itemsToMap.forEach((values) => {\\n          if (values.bulkValues) {\\n            values.bulkValues.forEach((c) => {\\n              this.controlMapping[c.label ?? \'\'] = c;\\n            });\\n          }\\n          const label = values.label?.toLowerCase();\\n          this.controlMapping[label ?? \'\'] = values;\\n        });\\n      }\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"form.ngx-forms-form-wrapper {\\n  > div:first-child {\\n    @apply rounded-tl-lg rounded-tr-lg;\\n  }\\n\\n  > :last-child {\\n    @apply rounded-bl-lg rounded-br-lg;\\n  }\\n}\\n","styleUrl":"./ftx-forms.component.scss"}],"stylesData":"","accessors":{"jsonData":{"name":"jsonData","setSignature":{"name":"jsonData","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"jsonData","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":50,"jsdoctags":[{"name":"jsonData","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"jsonData","type":"","returnType":"DataFormBuilder","line":46}}},"templateData":"<form\\n  [formGroup]=\\"dynamicForm\\"\\n  (ngSubmit)=\\"submitEvent.emit(true)\\"\\n  class=\\"p-3 flex flex-col gap-0.5 bg-slate-200 ngx-forms-form-wrapper rounded-br-lg rounded-bl-lg\\"\\n>\\n  <ng-container\\n    *ngTemplateOutlet=\\"\\n      renderControlRecursive;\\n      context: {\\n        control: dynamicForm,\\n        controlKey: null,\\n        is: false\\n      }\\n    \\"\\n  />\\n\\n  <ngx-button-component\\n    class=\\"bg-white p-2\\"\\n    [disable]=\\"dynamicForm.pristine || dynamicForm.invalid\\"\\n    roundedFull=\\"rounded-md\\"\\n    >Submit\\n  </ngx-button-component>\\n</form>\\n\\n<ng-template\\n  #renderControlRecursive\\n  let-control=\\"control\\"\\n  let-controlKey=\\"controlKey\\"\\n  let-isArray=\\"isArray\\"\\n>\\n  <ng-container\\n    [ngSwitch]=\\"generateFormBuilderService.getCustomFromControlType(control)\\"\\n  >\\n    \x3c!-- Render FormArray --\x3e\\n    <ng-container *ngSwitchCase=\\"\'FormArray\'\\">\\n      <div\\n        class=\\"flex\\"\\n        [ngClass]=\\"{ \'flex-col gap-0.5\': control.controls[1].length }\\"\\n      >\\n        <ng-container\\n          *ngFor=\\"\\n            let arrayControl of control.controls;\\n            trackBy: generativeService.trackBy;\\n            let index = index\\n          \\"\\n        >\\n          <ng-container\\n            *ngTemplateOutlet=\\"\\n              renderControlRecursive;\\n              context: {\\n                control: arrayControl,\\n                controlKey: controlKey,\\n                isArray: index\\n              }\\n            \\"\\n          />\\n        </ng-container>\\n      </div>\\n    </ng-container>\\n    \x3c!-- Render FormGroup --\x3e\\n    <ng-container *ngSwitchCase=\\"\'FormGroup\'\\">\\n      <ng-container\\n        *ngFor=\\"\\n          let groupControl of control.controls | keyvalue;\\n          trackBy: generativeService.trackBy\\n        \\"\\n      >\\n        <ng-container\\n          *ngTemplateOutlet=\\"\\n            renderControlRecursive;\\n            context: {\\n              control: groupControl.value,\\n              controlKey: groupControl.key,\\n            }\\n          \\"\\n        />\\n      </ng-container>\\n    </ng-container>\\n    \x3c!-- Render FormControl --\x3e\\n    <ng-container *ngSwitchDefault>\\n      <div class=\\"w-full bg-white\\">\\n        <ngx-form-control-entity\\n          [isFormArray]=\\"isArray\\"\\n          [formControl]=\\"control\\"\\n          [labelInput]=\\"controlMapping[controlKey]?.labelHint\\"\\n          [label]=\\"controlKey\\"\\n          [placeholderInput]=\\"controlMapping[controlKey]?.placeholder\\"\\n          [toggleData]=\\"controlMapping[controlKey]?.valueToggleShow\\"\\n          [typeInput]=\\"controlMapping[controlKey]?.typeInput\\"\\n        />\\n      </div>\\n    </ng-container>\\n  </ng-container>\\n</ng-template>\\n<ng-template #element>tete</ng-template>\\n"},{"name":"FtxSivanSharedComponent","id":"component-FtxSivanSharedComponent-69efe2fcecec3e4b1786b3b1dd58381273e222b52b5ec88cf9c0ed84c7695d5296e6f7696cc70cfe3608fd024b964b6251f5a3694d20815bd8c673078662d5b2","file":"ftx-sivan-shared/src/lib/ftx-sivan-shared/ftx-sivan-shared.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"coagulu-ftx-sivan-shared","styleUrls":["./ftx-sivan-shared.component.scss"],"styles":[],"templateUrl":["./ftx-sivan-shared.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'coagulu-ftx-sivan-shared\',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \'./ftx-sivan-shared.component.html\',\\n  styleUrls: [\'./ftx-sivan-shared.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FtxSivanSharedComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./ftx-sivan-shared.component.scss"}],"stylesData":"","templateData":"<p>ftx-sivan-shared works!</p>\\n"},{"name":"FtxTooltipComponent","id":"component-FtxTooltipComponent-215038250ea17b2246865716988826bfc5760f2d93f2313b42fec6121e2f217b099ce61ad7d967badedf4b6b99eed368ee943a8123e903b9dd126798692995b0","file":"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":["ViewEncapsulation.None"],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftx-tooltip","styleUrls":["./ftx-tooltip.component.scss"],"styles":[],"templateUrl":["./ftx-tooltip.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"rendererTemplate","deprecated":false,"deprecationMessage":"","line":20,"type":"any","decorators":[]},{"name":"text","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"content","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":22,"decorators":[{"name":"ContentChild","stringifiedArguments":"FtxTooltipComponent"}],"modifierKind":[167]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ContentChild,\\n  Input,\\n  ViewEncapsulation,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'ftx-tooltip\',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \'./ftx-tooltip.component.html\',\\n  styleUrls: [\'./ftx-tooltip.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class FtxTooltipComponent {\\n  @Input() rendererTemplate: any; //eslint-disable-line\\n\\n  @ContentChild(FtxTooltipComponent) content: any; //eslint-disable-line\\n\\n  @Input()\\n  public text = \'\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@mixin arrowPosition($position, $deg, $left, $translateX) {\\n  content: \'\';\\n  position: absolute;\\n  bottom: $position;\\n  left: $left;\\n  transform: translateX($translateX) rotate($deg);\\n  width: 1.25rem;\\n  height: 1.25rem;\\n  background-color: white;\\n  border-top: 0.0625rem solid rgba(0, 0, 0, 0.12);\\n  border-left: 0.0625rem solid rgba(0, 0, 0, 0.12);\\n}\\n\\nftx-tooltip {\\n  :host {\\n    margin: 0.4rem;\\n    width: max-content;\\n    position: relative;\\n  }\\n\\n  .tooltip-container {\\n    box-shadow: rgba(0, 0, 0, 0.12) 0rem 0.0625rem 0.1875rem,\\n      rgba(0, 0, 0, 0.24) 0rem 0.0625rem 0.125rem;\\n    padding: 1rem;\\n    margin: 0.5rem;\\n    background: white;\\n    width: max-content;\\n    display: flex;\\n    flex-direction: column;\\n    .top {\\n      @include arrowPosition(-2%, 225deg, 39%, 50%);\\n    }\\n\\n    .bottom {\\n      @include arrowPosition(89%, 45deg, 45%, 50%);\\n    }\\n\\n    .right {\\n      @include arrowPosition(41%, 315deg, -0.2rem, 0%);\\n    }\\n    .left {\\n      @include arrowPosition(41%, 135deg, 96%, 0%);\\n    }\\n  }\\n}\\n","styleUrl":"./ftx-tooltip.component.scss"}],"stylesData":"","templateData":"<script src=\\"service/zone-axe.service.spec.ts\\"><\/script>\\n<div class=\\"tooltip-container mat-elevation-z8 shadow-2xl\\">\\n  \x3c!--  arrow --\x3e\\n  <div></div>\\n  <ng-container *ngIf=\\"text\\">\\n    <div data-test=\\"text-tooltip\\" class=\\"tooltip-text\\">{{ text }}</div>\\n  </ng-container>\\n  <ng-container *ngTemplateOutlet=\\"rendererTemplate || default\\"></ng-container>\\n</div>\\n\\n<ng-template #default> TESADSDASD </ng-template>\\n"},{"name":"InfoUserComponent","id":"component-InfoUserComponent-8bb85e50e710e5fe859bdac0e94d3b4e6f972b627850a33a7dc51562e6aab3eb78e4d0e436563aa5e282af37b615b86b1d9319252399cb3652f25de5eb1c1ab9","file":"src/app/components/contentSteps/infoUser/info-user.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"info-user","styleUrls":["./info-user.component.scss"],"styles":[],"templateUrl":["./info-user.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_stepperService","defaultValue":"inject(StepperService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"form","defaultValue":"this._stepperService.stepperForm","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"vm$","defaultValue":"this._stepperService.formValues$","deprecated":false,"deprecationMessage":"","type":"Observable<Dictionary<any>>","optional":false,"description":"","line":30}],"methodsClass":[{"name":"addRole","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"ReactiveFormsModule","type":"module"},{"name":"PatchFormGroupValueDirective","type":"directive"},{"name":"ButtonComponent","type":"component"},{"name":"InputComponent","type":"component"},{"name":"FormControlEntityComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, inject } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { StepperService } from \'../../services/stepper.service\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { Observable } from \'rxjs\';\\nimport { Dictionary } from \'@ngrx/entity\';\\nimport {\\n  ButtonComponent,\\n  FormControlEntityComponent,\\n  InputComponent,\\n  PatchFormGroupValueDirective,\\n} from \'ngx-ftx-forms\';\\n\\n@Component({\\n  selector: \'info-user\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    ReactiveFormsModule,\\n    PatchFormGroupValueDirective,\\n    ButtonComponent,\\n    InputComponent,\\n    FormControlEntityComponent,\\n  ],\\n  templateUrl: \'./info-user.component.html\',\\n  styleUrls: [\'./info-user.component.scss\'],\\n})\\nexport class InfoUserComponent {\\n  private _stepperService = inject(StepperService);\\n  vm$: Observable<Dictionary<any>> = this._stepperService.formValues$; //eslint-disable-line\\n  form = this._stepperService.stepperForm;\\n\\n  public addRole() {\\n    this._stepperService.addRoleOfMember();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./info-user.component.scss"}],"stylesData":"","templateData":"<div *ngIf=\\"vm$ | async as vm\\" class=\\"p-4\\">\\n  <form\\n    [formGroup]=\\"form\\"\\n    [ngxFormGroupValues]=\\"vm\\"\\n    class=\\"w-80 items-stretch flex-col flex\\"\\n  >\\n    <div formGroupName=\\"infoUser\\">\\n      <ngx-form-control-entity\\n        [label]=\\"\'Check value\'\\"\\n        formControlName=\\"check\\"\\n        class=\\"col-span-4\\"\\n        [placeholderInput]=\\"\'Check\'\\"\\n        typeInput=\\"boolean\\"\\n      />\\n      <div formGroupName=\\"info\\">\\n        <ngx-form-control-entity\\n          [label]=\\"\'Family Number\'\\"\\n          formControlName=\\"familyNumber\\"\\n          class=\\"col-span-4\\"\\n          [placeholderInput]=\\"\'Check\'\\"\\n        />\\n        <div>\\n          <label class=\\"block text-sm font-medium leading-6 text-gray-900\\"\\n            >Role Of Member</label\\n          >\\n          <ng-container formArrayName=\\"roleOfMember\\">\\n            <ng-container\\n              *ngFor=\\"\\n                let role of form.controls.infoUser.controls.info.controls\\n                  .roleOfMember.controls | keyvalue;\\n                let index = index\\n              \\"\\n              [formGroupName]=\\"index\\"\\n            >\\n              <ngx-form-control-entity\\n                [label]=\\"role.key.toUpperCase()\\"\\n                formControlName=\\"value\\"\\n                class=\\"col-span-1\\"\\n              />\\n            </ng-container>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <ngx-button-component (marian)=\\"addRole()\\" roundedFull=\\"rounded-md mt-2\\">\\n    Add new Role\\n  </ngx-button-component>\\n</div>\\n"},{"name":"InputComponent","id":"component-InputComponent-7144dde9b1ec870b302c64a8a88bb7819399b6b8b74db86f4e515ade6e827e107f1fdad8edb0c39bcca100c37423db454a1036969508f17933dfc51976a29619","file":"ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: , subscriptSizing:  },\\n}"}],"selector":"ngx-input-component","styleUrls":["./input.component.scss"],"styles":[],"templateUrl":["./input.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"control","deprecated":false,"deprecationMessage":"","line":66,"type":"NgControl | any | ","decorators":[]},{"name":"labelInput","defaultValue":"\'Complete label\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for input\\n","description":"<p>Label for input</p>\\n","line":60,"type":"string","decorators":[]},{"name":"placeholderInput","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPlaceholder for input\\n","description":"<p>Placeholder for input</p>\\n","line":56,"type":"string","decorators":[]},{"name":"toggleData","defaultValue":"[{ value: false, description: \'default\' }]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen input is radio button\\n","description":"<p>When input is radio button</p>\\n","line":64,"type":"{}","decorators":[]},{"name":"typeInput","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nType of Input checkbox text\\n","description":"<p>Type of Input checkbox text</p>\\n","line":52,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"PapControlDirective","type":"directive"},{"name":"FormsModule","type":"module"},{"name":"ReactiveFormsModule","type":"module"},{"name":"MatInputModule","type":"module"},{"name":"MatCheckboxModule","type":"module"},{"name":"MatRadioModule","type":"module"},{"name":"FadeInOutDirective","type":"directive"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { PapControlDirective } from \'../../directive\';\\nimport { FormsModule, NgControl, ReactiveFormsModule } from \'@angular/forms\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatRadioModule } from \'@angular/material/radio\';\\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \'@angular/material/form-field\';\\nimport { FadeInOutDirective } from \'../../directive/fade-in-out.directive\';\\nimport {\\n  animate,\\n  state,\\n  style,\\n  transition,\\n  trigger,\\n} from \'@angular/animations\';\\n\\n@Component({\\n  selector: \'ngx-input-component\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    PapControlDirective,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    MatInputModule,\\n    MatCheckboxModule,\\n    MatRadioModule,\\n    FadeInOutDirective,\\n  ],\\n  templateUrl: \'./input.component.html\',\\n  styleUrls: [\'./input.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [\\n    {\\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\\n      useValue: { appearance: \'outline\', subscriptSizing: \'dynamic\' },\\n    },\\n  ],\\n  animations: [\\n    trigger(\'widthOpacityAnimation\', [\\n      state(\'void\', style({ transform: \'scaleY(0)\', height: 0, opacity: 0 })),\\n      state(\'*\', style({ transform: \'scaleY(1)\', opacity: 1 })),\\n      transition(\'void <=> *\', animate(\'300ms ease-in\')),\\n    ]),\\n  ],\\n})\\nexport class InputComponent {\\n  /**\\n   * Type of Input checkbox text\\n   */\\n  @Input() typeInput? = \'text\';\\n  /**\\n   * Placeholder for input\\n   */\\n  @Input() placeholderInput? = \'\';\\n  /**\\n   * Label for input\\n   */\\n  @Input() labelInput? = \'Complete label\';\\n  /**\\n   * When input is radio button\\n   */\\n  @Input() toggleData? = [{ value: false, description: \'default\' }];\\n  @Input()\\n  control?: NgControl | any | unknown; //eslint-disable-line\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./input.component.scss"}],"stylesData":"","templateData":"<div class=\\"flex flex-col\\">\\n  <ng-container [ngSwitch]=\\"typeInput\\">\\n    <mat-checkbox\\n      *ngSwitchCase=\\"\'boolean\'\\"\\n      [formControl]=\\"control.control\\"\\n      class=\\"border-0 flex placeholder:text-gray-400 py-1.5 ring-inset rounded-md shadow-sm sm:leading-6 sm:text-sm text-gray-900\\"\\n    />\\n    <ng-container *ngSwitchCase=\\"\'toggle\'\\">\\n      <mat-radio-group [formControl]=\\"control.control\\" class=\\"flex gap-5\\">\\n        <div *ngFor=\\"let radio of toggleData\\" class=\\"flex items-center gap-3\\">\\n          <mat-radio-button [value]=\\"radio.value\\" />\\n          <p class=\\"!m-0\\">{{ radio.description }}</p>\\n        </div>\\n      </mat-radio-group>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\"\'area\'\\">\\n      <mat-form-field>\\n        <mat-label class=\\"text prose prose-zinc\\">{{ labelInput }}</mat-label>\\n        <textarea\\n          matInput\\n          [placeholder]=\\"placeholderInput ?? \'\'\\"\\n          [formControl]=\\"control.control\\"\\n          class=\\"font-semibold !text-xl\\"\\n        ></textarea>\\n      </mat-form-field>\\n    </ng-container>\\n    <mat-form-field\\n      *ngSwitchDefault\\n      [color]=\\"control.control?.errors?.error ? \'warn\' : \'primary\'\\"\\n    >\\n      <mat-label class=\\"text prose prose-zinc\\">{{ labelInput }}</mat-label>\\n      <input\\n        matInput\\n        [placeholder]=\\"placeholderInput ?? \'\'\\"\\n        [formControl]=\\"control.control\\"\\n        class=\\"font-semibold !text-xl\\"\\n      />\\n    </mat-form-field>\\n    <div\\n      [ngxFadeInOut]=\\"control.statusChanges | async\\"\\n      @widthOpacityAnimation\\n      *ngIf=\\"control?.errors\\"\\n      class=\\"py-2 text-red-500 text prose prose-zinc prose-lg\\"\\n    >\\n      {{ control.errors?.[\'error\']  }}\\n    </div>\\n  </ng-container>\\n</div>\\n"},{"name":"IntroComponent","id":"component-IntroComponent-af879ca5a8845c0438c5b25c45bb83a0ff27d2f859f6905811d6c8dc93320058815ca0288d00e9e70dfa1bd1275636aa35936615b62fe2c0476a7e8ecfdcb5d5","file":"src/app/components/contentSteps/intro/intro.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"intro","styleUrls":["./intro.component.scss"],"styles":[],"templateUrl":["./intro.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'intro\',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \'./intro.component.html\',\\n  styleUrls: [\'./intro.component.scss\'],\\n})\\nexport class IntroComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./intro.component.scss"}],"stylesData":"","templateData":"<p>intro works!</p>\\n"},{"name":"ReserveBookComponent","id":"component-ReserveBookComponent-39f2397b5e19897947b281326ced442ecb08ff7ddf7903f640e1935b0e629b5d2c4ded6b904d071bd6f56d7a433cea18a9e21f51b4595bffa2469a386fca2fbe","file":"src/app/components/contentSteps/reserveBook/reserve-book.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"reserve-book","styleUrls":["./reserve-book.component.scss"],"styles":[],"templateUrl":["./reserve-book.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_stepperService","defaultValue":"inject(StepperService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":307,"modifierKind":[121]},{"name":"_stepperStore","defaultValue":"inject(Store)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[121,146]},{"name":"dynamicForm","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":40},{"name":"formValue$","defaultValue":"using(\\n    () =>\\n      this.dynamicForm.valueChanges\\n        .pipe(\\n          debounceTime(200),\\n          tap((values: DataFormBuilder) =>\\n            this._stepperStore.dispatch(formValueChangeReserve(values))\\n          ),\\n          tap(() => {\\n            this._stepperService.steppForm.controls.reserveBook.controls.check.patchValue(\\n              this.dynamicForm.valid\\n            );\\n          }),\\n          tap(() => {\\n            this._stepperService.flagUrl$.next(\'reserveBook\');\\n          })\\n        )\\n        .subscribe(),\\n    () => this._stepperStore.select(selectReserveEntities)\\n  ).pipe(shareReplay())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":308},{"name":"generateFormBuilderService","defaultValue":"inject(\\n    GenerateFormBuilderService\\n  )","deprecated":false,"deprecationMessage":"","type":"GenerateFormBuilderService","optional":false,"description":"","line":37,"modifierKind":[146]},{"name":"jsonData","defaultValue":"{\\n    values: [\\n      {\\n        label: \'name\',\\n        value: \'IVan\',\\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\\n        placeholder: \'Isvan Avramescu\',\\n        labelHint: \'Name for User\',\\n      },\\n      {\\n        label: \'email\',\\n        value: \'s@gm.co\',\\n        validators: [\\n          { type: TypeConstantEnum.REQUIRED },\\n          { type: TypeConstantEnum.EMAIL },\\n        ],\\n        labelHint: \'Email Address\',\\n      },\\n      {\\n        label: \'TESTa\',\\n        value: \'201\',\\n        validators: [\\n          { type: TypeConstantEnum.REQUIRED },\\n          {\\n            type: TypeConstantEnum.PATTERN,\\n            option: TypePattern.ONLY_NUMBER,\\n            errorMsg: \'Only Integer Number\',\\n          },\\n        ],\\n        labelHint: \'age\',\\n      },\\n      {\\n        label: \'summary\',\\n        value: true,\\n        labelHint: \'Summary Type\',\\n        typeInput: \'boolean\',\\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\\n      },\\n      {\\n        label: \'Adult\',\\n        value: true,\\n        labelHint: \'Is Adult\',\\n        typeInput: \'toggle\',\\n        valueToggleShow: [\\n          {\\n            value: false,\\n            description: \'No\',\\n          },\\n          {\\n            value: true,\\n            description: \'Yes\',\\n          },\\n        ],\\n      },\\n      {\\n        label: \'ARE\',\\n        value: \'dasdasd\',\\n        labelHint: \'Area Data\',\\n        typeInput: \'area\',\\n        description: {\\n          text:\\n            \'Lorem Ipsum Text description you are in the best form\' +\\n            \' builder create evere\',\\n        },\\n      },\\n\\n      {\\n        labelHint: \'Address street\',\\n        label: \'address\',\\n        values: [\\n          {\\n            label: \'street\',\\n            value: \'Ivan\',\\n            labelHint: \'Street Number 1\',\\n            placeholder: \'Street Number 1\',\\n            validators: [\\n              {\\n                type: TypeConstantEnum.REQUIRED,\\n                errorMsg: \'This field it is\' + \' must\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'streetIvan\',\\n            value: \'Ivan2\',\\n            validators: [\\n              {\\n                type: TypeConstantEnum.REQUIRED,\\n                errorMsg: \'This field it is\' + \' must\',\\n              },\\n            ],\\n            description: {\\n              text:\\n                \'Lorem Ipsum Text description you are in the best form\' +\\n                \' builder create evere\',\\n            },\\n          },\\n        ],\\n      },\\n      {\\n        label: \'personalData\',\\n        labelHint: \'Personal Data\',\\n        values: [\\n          {\\n            label: \'cnp\',\\n            labelHint: \'Personal Nested\',\\n            value: \'123141232311\',\\n            validators: [{ type: TypeConstantEnum.MIN, option: 20 }],\\n          },\\n          {\\n            label: \'ds\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'ds2\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'ds3\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n      {\\n        labelHint: \'Course what user take\',\\n        label: \'course\',\\n        bulkValues: [\\n          {\\n            value: \'ss\',\\n            label: \'angularPatterns\',\\n            labelHint: \'Summary TEST\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n              {\\n                type: TypeConstantEnum.MIN_CHAR,\\n                option: 2,\\n                errorMsg: \'Must filled with min 2 char\',\\n              },\\n            ],\\n          },\\n          {\\n            value: \'555\',\\n            label: \'reactPatterns\',\\n          },\\n        ],\\n      },\\n      {\\n        labelHint: \'Name for User\',\\n        label: \'age\',\\n        bulkValues: [\\n          {\\n            value: \'2312\',\\n            label: \'angularPatterns\',\\n          },\\n          {\\n            value: \'321\',\\n            label: \'reactPatterns\',\\n          },\\n        ],\\n      },\\n      {\\n        label: \'home\',\\n        labelHint: \'Name for Home\',\\n        bulkValues: [\\n          {\\n            value: \'444\',\\n            label: \'Miki\',\\n          },\\n          {\\n            label: \'Ivan\',\\n            bulkValues: [\\n              {\\n                value: 1231,\\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\\n                labelHint: \'Childrens\',\\n              },\\n              {\\n                label: \'train\',\\n                value: 232,\\n                placeholder: \'NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Barto\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Barto2\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Bartos\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n    ],\\n  }","deprecated":false,"deprecationMessage":"","type":"DataFormBuilder","optional":false,"description":"","line":41}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":329,"deprecated":false,"deprecationMessage":""},{"name":"onSubmit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":335,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"ReactiveFormsModule","type":"module"},{"name":"InputComponent","type":"component"},{"name":"ButtonComponent","type":"component"},{"name":"FormControlEntityComponent","type":"component"},{"name":"PatchFormGroupValueDirective","type":"directive"},{"name":"FtxFormsComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, inject, OnInit } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport {\\n  ButtonComponent,\\n  DataFormBuilder,\\n  FormControlEntityComponent,\\n  FtxFormsComponent,\\n  GenerateFormBuilderService,\\n  InputComponent,\\n  PatchFormGroupValueDirective,\\n  TypeConstantEnum,\\n  TypePattern,\\n} from \'ngx-ftx-forms\';\\nimport { debounceTime, shareReplay, tap, using } from \'rxjs\';\\nimport { Store } from \'@ngrx/store\';\\nimport { StepperService } from \'../../services/stepper.service\';\\nimport { formValueChangeReserve, selectReserveEntities } from \'../../../+state\';\\n\\n@Component({\\n  selector: \'reserve-book\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    ReactiveFormsModule,\\n    InputComponent,\\n    ButtonComponent,\\n    FormControlEntityComponent,\\n    PatchFormGroupValueDirective,\\n    FtxFormsComponent,\\n  ],\\n  templateUrl: \'./reserve-book.component.html\',\\n  styleUrls: [\'./reserve-book.component.scss\'],\\n})\\nexport class ReserveBookComponent implements OnInit {\\n  private readonly _stepperStore = inject(Store);\\n  readonly generateFormBuilderService: GenerateFormBuilderService = inject(\\n    GenerateFormBuilderService\\n  );\\n  dynamicForm: any; // eslint-disable-line\\n  jsonData: DataFormBuilder = {\\n    values: [\\n      {\\n        label: \'name\',\\n        value: \'IVan\',\\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\\n        placeholder: \'Isvan Avramescu\',\\n        labelHint: \'Name for User\',\\n      },\\n      {\\n        label: \'email\',\\n        value: \'s@gm.co\',\\n        validators: [\\n          { type: TypeConstantEnum.REQUIRED },\\n          { type: TypeConstantEnum.EMAIL },\\n        ],\\n        labelHint: \'Email Address\',\\n      },\\n      {\\n        label: \'TESTa\',\\n        value: \'201\',\\n        validators: [\\n          { type: TypeConstantEnum.REQUIRED },\\n          {\\n            type: TypeConstantEnum.PATTERN,\\n            option: TypePattern.ONLY_NUMBER,\\n            errorMsg: \'Only Integer Number\',\\n          },\\n        ],\\n        labelHint: \'age\',\\n      },\\n      {\\n        label: \'summary\',\\n        value: true,\\n        labelHint: \'Summary Type\',\\n        typeInput: \'boolean\',\\n        validators: [{ type: TypeConstantEnum.REQUIRED }],\\n      },\\n      {\\n        label: \'Adult\',\\n        value: true,\\n        labelHint: \'Is Adult\',\\n        typeInput: \'toggle\',\\n        valueToggleShow: [\\n          {\\n            value: false,\\n            description: \'No\',\\n          },\\n          {\\n            value: true,\\n            description: \'Yes\',\\n          },\\n        ],\\n      },\\n      {\\n        label: \'ARE\',\\n        value: \'dasdasd\',\\n        labelHint: \'Area Data\',\\n        typeInput: \'area\',\\n        description: {\\n          text:\\n            \'Lorem Ipsum Text description you are in the best form\' +\\n            \' builder create evere\',\\n        },\\n      },\\n\\n      {\\n        labelHint: \'Address street\',\\n        label: \'address\',\\n        values: [\\n          {\\n            label: \'street\',\\n            value: \'Ivan\',\\n            labelHint: \'Street Number 1\',\\n            placeholder: \'Street Number 1\',\\n            validators: [\\n              {\\n                type: TypeConstantEnum.REQUIRED,\\n                errorMsg: \'This field it is\' + \' must\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'streetIvan\',\\n            value: \'Ivan2\',\\n            validators: [\\n              {\\n                type: TypeConstantEnum.REQUIRED,\\n                errorMsg: \'This field it is\' + \' must\',\\n              },\\n            ],\\n            description: {\\n              text:\\n                \'Lorem Ipsum Text description you are in the best form\' +\\n                \' builder create evere\',\\n            },\\n          },\\n        ],\\n      },\\n      {\\n        label: \'personalData\',\\n        labelHint: \'Personal Data\',\\n        values: [\\n          {\\n            label: \'cnp\',\\n            labelHint: \'Personal Nested\',\\n            value: \'123141232311\',\\n            validators: [{ type: TypeConstantEnum.MIN, option: 20 }],\\n          },\\n          {\\n            label: \'ds\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'ds2\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'ds3\',\\n            value: \'TEST\',\\n            labelHint: \'Personal TEst\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n      {\\n        labelHint: \'Course what user take\',\\n        label: \'course\',\\n        bulkValues: [\\n          {\\n            value: \'ss\',\\n            label: \'angularPatterns\',\\n            labelHint: \'Summary TEST\',\\n            validators: [\\n              { type: TypeConstantEnum.REQUIRED },\\n              {\\n                type: TypeConstantEnum.PATTERN,\\n                option: TypePattern.ONLY_CHAR,\\n                errorMsg: \'Only\' + \' char\',\\n              },\\n              {\\n                type: TypeConstantEnum.MIN_CHAR,\\n                option: 2,\\n                errorMsg: \'Must filled with min 2 char\',\\n              },\\n            ],\\n          },\\n          {\\n            value: \'555\',\\n            label: \'reactPatterns\',\\n          },\\n        ],\\n      },\\n      {\\n        labelHint: \'Name for User\',\\n        label: \'age\',\\n        bulkValues: [\\n          {\\n            value: \'2312\',\\n            label: \'angularPatterns\',\\n          },\\n          {\\n            value: \'321\',\\n            label: \'reactPatterns\',\\n          },\\n        ],\\n      },\\n      {\\n        label: \'home\',\\n        labelHint: \'Name for Home\',\\n        bulkValues: [\\n          {\\n            value: \'444\',\\n            label: \'Miki\',\\n          },\\n          {\\n            label: \'Ivan\',\\n            bulkValues: [\\n              {\\n                value: 1231,\\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\\n                labelHint: \'Childrens\',\\n              },\\n              {\\n                label: \'train\',\\n                value: 232,\\n                placeholder: \'NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Barto\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Barto2\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n              },\\n            ],\\n          },\\n          {\\n            label: \'Bartos\',\\n            bulkValues: [\\n              {\\n                value: null,\\n                labelHint: \'barot Childrens\',\\n              },\\n              {\\n                label: \'barot Childrens train\',\\n                value: 23222,\\n                placeholder: \' barot NAMING\',\\n                labelHint: \'Number\',\\n                validators: [{ type: TypeConstantEnum.REQUIRED }],\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n    ],\\n  };\\n  private _stepperService = inject(StepperService);\\n  formValue$ = using(\\n    () =>\\n      this.dynamicForm.valueChanges\\n        .pipe(\\n          debounceTime(200),\\n          tap((values: DataFormBuilder) =>\\n            this._stepperStore.dispatch(formValueChangeReserve(values))\\n          ),\\n          tap(() => {\\n            this._stepperService.steppForm.controls.reserveBook.controls.check.patchValue(\\n              this.dynamicForm.valid\\n            );\\n          }),\\n          tap(() => {\\n            this._stepperService.flagUrl$.next(\'reserveBook\');\\n          })\\n        )\\n        .subscribe(),\\n    () => this._stepperStore.select(selectReserveEntities)\\n  ).pipe(shareReplay());\\n\\n  ngOnInit() {\\n    this.dynamicForm = this.generateFormBuilderService.buildFormFromJson(\\n      this.jsonData\\n    );\\n  }\\n\\n  onSubmit() {\\n    if (this.dynamicForm.valid) {\\n      console.log(this.dynamicForm.getRawValue());\\n      // Handle form submission\\n    } else {\\n      //\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./reserve-book.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ng-container *ngIf=\\"formValue$ | async\\">\\n  <ngx-ftx-forms\\n    (submitEvent)=\\"onSubmit()\\"\\n    [dynamicForm]=\\"dynamicForm\\"\\n    [jsonData]=\\"jsonData\\"\\n  />\\n</ng-container>\\n"},{"name":"SpendMoneyComponent","id":"component-SpendMoneyComponent-1ed5b47dcfc981de0070183e6efa9ec0b76a9744a851657452122e948e8847f7a991434e4214f1442ada27f9329bc9adbdc51144726c14033e4841c0aab532a1","file":"src/app/components/contentSteps/spendMoney/spend-money.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"spend-money","styleUrls":["./spend-money.component.scss"],"styles":[],"templateUrl":["./spend-money.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@Component({\\n  selector: \'spend-money\',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \'./spend-money.component.html\',\\n  styleUrls: [\'./spend-money.component.scss\'],\\n})\\nexport class SpendMoneyComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./spend-money.component.scss"}],"stylesData":"","templateData":"<p>spend-money works!</p>\\n"},{"name":"StepperComponent","id":"component-StepperComponent-98d200897db40892c8568481dc788a6d80ce1450099583904529c46d097c7a9cd7da53cbd46dbd5c0dbc33756743b7909e59a55b5004f51764cfe99e6b90539c","file":"src/app/components/stepper/stepper.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./stepper.component.scss"],"styles":[],"templateUrl":["./stepper.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_stepperService","defaultValue":"inject(StepperService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123,146]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"RouterOutlet"},{"name":"MatIconModule","type":"module"},{"name":"StepperStepsComponent","type":"component"},{"name":"PatchFormGroupValueDirective","type":"directive"},{"name":"ReactiveFormsModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"ScrollHintDirective","type":"directive"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, inject } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterOutlet } from \'@angular/router\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { StepperStepsComponent } from \'../stepper-steps/stepper-steps.component\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { PatchFormGroupValueDirective } from \'ngx-ftx-forms\';\\nimport { StepperService } from \'../services/stepper.service\';\\nimport { ScrollHintDirective } from \'ngx-ftx-shared\';\\n\\n@Component({\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    RouterOutlet,\\n    MatIconModule,\\n    StepperStepsComponent,\\n    PatchFormGroupValueDirective,\\n    ReactiveFormsModule,\\n    FormsModule,\\n    ScrollHintDirective,\\n  ],\\n  templateUrl: \'./stepper.component.html\',\\n  styleUrls: [\'./stepper.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class StepperComponent {\\n  public readonly _stepperService = inject(StepperService);\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stepper.component.scss"}],"stylesData":"","templateData":"<div\\n  class=\\"stepper-container-wrapper animate-fade transition-all animate-once animate-duration-1000 animate-ease-in-out\\"\\n>\\n  <div\\n    class=\\"stepper-container-wrapper-outlet h-[calc(100vh-65px-0.65rem)] overflow-x-auto\\"\\n    sivanScrollHint\\n  >\\n    <router-outlet></router-outlet>\\n  </div>\\n  <div\\n    class=\\"stepper-container-wrapper__content flex py-4 px-3 bottom-0 w-full mb-2 border-t-2 border-solid border-gray-200 bg-white rounded-tl-lg rounded-tr-lg\\"\\n  >\\n    <stepper-steps\\n      *ngIf=\\"_stepperService.formValues$ | async as vm\\"\\n      [vm]=\\"vm\\"\\n      [flagUrl$]=\\"_stepperService.flagUrl$\\"\\n      [buttonDisabled$]=\\"_stepperService.buttonDisable$\\"\\n    ></stepper-steps>\\n  </div>\\n</div>\\n"},{"name":"StepperStepsComponent","id":"component-StepperStepsComponent-0f56ef17b6b149e057a6162dc90834369c52d1bcbbbc0017d7da4c8b65b81555208c090d308a7e1ffec4db6445581a597f0e5ea78f042eadca938c0e2e51b29e","file":"src/app/components/stepper-steps/stepper-steps.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"stepper-steps","styleUrls":["./stepper-steps.component.scss"],"styles":[],"templateUrl":["./stepper-steps.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"buttonDisabled$","defaultValue":"new Observable<boolean>()","deprecated":false,"deprecationMessage":"","line":61,"type":"Observable<boolean>","decorators":[]},{"name":"flagUrl$","defaultValue":"new BehaviorSubject<string>(\'\')","deprecated":false,"deprecationMessage":"","line":60,"type":"BehaviorSubject<string>","decorators":[]},{"name":"vm","deprecated":false,"deprecationMessage":"","line":59,"type":"FormStepper | any","decorators":[]}],"outputsClass":[{"name":"ivan","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":58,"type":"EventEmitter"}],"propertiesClass":[{"name":"_destroyed$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[121,146]},{"name":"_router","defaultValue":"inject(Router)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[121,146]},{"name":"_store","defaultValue":"inject(Store)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[121,146]},{"name":"generativeService","defaultValue":"inject(GenerativeService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56,"modifierKind":[146]},{"name":"stepperService","defaultValue":"inject(StepperService)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[146]},{"name":"steps$","defaultValue":"this._store.select(selectStepsEntities)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57}],"methodsClass":[{"name":"nextTab","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatIconModule","type":"module"},{"name":"RouterLink"},{"name":"ButtonComponent","type":"component"},{"name":"RouterLinkActive"},{"name":"MatRippleModule","type":"module"},{"name":"FormBadgeComponent","type":"component"},{"name":"RenderYouDirective","type":"directive"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  inject,\\n  Input,\\n  OnDestroy,\\n  Output,\\n} from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { Router, RouterLink, RouterLinkActive } from \'@angular/router\';\\nimport { MatRippleModule } from \'@angular/material/core\';\\nimport { Store } from \'@ngrx/store\';\\nimport {\\n  BehaviorSubject,\\n  map,\\n  Observable,\\n  of,\\n  Subject,\\n  switchMap,\\n  takeUntil,\\n  tap,\\n} from \'rxjs\';\\nimport { StepperService } from \'../services/stepper.service\';\\nimport {\\n  ButtonComponent,\\n  FormBadgeComponent,\\n  GenerativeService,\\n} from \'ngx-ftx-forms\';\\nimport { FormStepper, selectStepsEntities, Step } from \'../../+state\';\\nimport { RenderYouDirective } from \'ngx-fts-tooltip\';\\n\\n@Component({\\n  selector: \'stepper-steps\',\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    MatIconModule,\\n    RouterLink,\\n    ButtonComponent,\\n    RouterLinkActive,\\n    MatRippleModule,\\n    FormBadgeComponent,\\n    RenderYouDirective,\\n  ],\\n  templateUrl: \'./stepper-steps.component.html\',\\n  styleUrls: [\'./stepper-steps.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class StepperStepsComponent implements OnDestroy {\\n  private readonly _router = inject(Router);\\n  private readonly _destroyed$ = new Subject();\\n  private readonly _store = inject(Store);\\n  readonly stepperService = inject(StepperService);\\n  readonly generativeService = inject(GenerativeService);\\n  steps$ = this._store.select(selectStepsEntities);\\n  @Output() ivan? = new EventEmitter();\\n  @Input() vm: FormStepper | any; //eslint-disable-line\\n  @Input() flagUrl$: BehaviorSubject<string> = new BehaviorSubject<string>(\'\');\\n  @Input() buttonDisabled$: Observable<boolean> = new Observable<boolean>();\\n  nextTab() {\\n    return this.steps$\\n      .pipe(\\n        switchMap((step: Step[]) =>\\n          of({\\n            index: step.findIndex((v) => v.value === this.flagUrl$.value),\\n            step,\\n          })\\n        ),\\n        map((v) => v.step[v.index >= v.step.length - 1 ? 0 : v.index + 1]),\\n        tap((value) => this._router.navigate([value.value])),\\n        takeUntil(this._destroyed$)\\n      )\\n      .subscribe();\\n  }\\n\\n  ngOnDestroy(): void {\\n    this._destroyed$.next(true);\\n    this._destroyed$.complete();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host{\\n  @apply w-full\\n}","styleUrl":"./stepper-steps.component.scss"}],"stylesData":"","implements":["OnDestroy"],"templateData":"<div\\n  class=\\"flex justify-between w-full animate-fade animate-once animate-duration-1000 animate-ease-in-out\\"\\n>\\n  <div class=\\"relative flex gap-5\\" *ngIf=\\"vm\\">\\n    <button\\n      *ngFor=\\"let elm of vm?.steps; trackBy: generativeService.trackBy\\"\\n      class=\\"bg-white\\"\\n      [routerLink]=\\"elm.value\\"\\n      [disabled]=\\"buttonDisabled$ | async\\"\\n    >\\n      <div *ngIf=\\"vm[elm.value] as element\\">\\n        <mat-icon\\n          mat-ripple\\n          [svgIcon]=\\"element.icon\\"\\n          class=\\"transition-all mx-1 border-2 border-solid border-gray-200 rounded-full p-2 !w-9 !h-9 hover:border-gray-300 hover:bg-slate-50animate-fade animate-once animate-duration-1000 animate-ease-in-out\\"\\n          routerLinkActive=\\"border-blue-500 bg-blue-50 text-blue-500\\"\\n        >\\n        </mat-icon>\\n      </div>\\n    </button>\\n    <div\\n      *ngIf=\\"vm?.steps.length > 1\\"\\n      class=\\"absolute bg-gray-200 w-full h-[1px] border-s bottom-1/2 border-solid border-gray-800 -z-10\\"\\n    ></div>\\n  </div>\\n  <div>\\n    <ngx-button-component\\n      [disable]=\\"buttonDisabled$ | async\\"\\n      roundedFull=\\"rounded-md\\"\\n      (marian)=\\"nextTab()\\"\\n      >Continue\\n    </ngx-button-component>\\n  </div>\\n</div>\\n"}],"modules":[],"miscellaneous":{"variables":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideEffects(ReserveEffects),\\n    provideState(fromReserve.RESERVE_FEATURE_KEY, fromReserve.reserveReducer),\\n    provideEffects(StepperEffects),\\n    provideStore(),\\n    provideState(fromStepper.STEPPER_FEATURE_KEY, fromStepper.stepperReducer),\\n    provideStoreDevtools({ maxAge: 25 }),\\n    provideRouter(appRoutes, withEnabledBlockingInitialNavigation()),\\n    importProvidersFrom(IconCoreModule),\\n    provideAnimations(),\\n  ],\\n}"},{"name":"appRoutes","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.routes.ts","deprecated":false,"deprecationMessage":"","type":"Route[]","defaultValue":"[\\n  {\\n    path: \'\',\\n    loadComponent: () =>\\n      import(\'./components/stepper/stepper.component\').then(\\n        (c) => c.StepperComponent\\n      ),\\n    resolve: [\\n      () => {\\n        const stepperService = inject(StepperService);\\n        const router = inject(Router);\\n        router.events\\n          .pipe(\\n            filter((event: any) => event instanceof NavigationEnd), //eslint-disable-line\\n            map((v: NavigationEnd) => v.url.split(\'/\')[1]),\\n            tap((url) => stepperService.flagUrl$.next(url)),\\n            catchError((err) => {\\n              console.warn(err);\\n              return of(false);\\n            })\\n          )\\n          .subscribe();\\n      },\\n    ],\\n    children: [\\n      {\\n        path: \'intro\',\\n        loadComponent: () =>\\n          import(\'./components/contentSteps/intro/intro.component\').then(\\n            (c) => c.IntroComponent\\n          ),\\n      },\\n      {\\n        path: \'infoUser\',\\n        loadComponent: () =>\\n          import(\'./components/contentSteps/infoUser/info-user.component\').then(\\n            (c) => c.InfoUserComponent\\n          ),\\n      },\\n      {\\n        path: \'spendMoney\',\\n        loadComponent: () =>\\n          import(\\n            \'./components/contentSteps/spendMoney/spend-money.component\'\\n          ).then((c) => c.SpendMoneyComponent),\\n      },\\n      {\\n        path: \'reserveBook\',\\n        loadComponent: () =>\\n          import(\\n            \'./components/contentSteps/reserveBook/reserve-book.component\'\\n          ).then((c) => c.ReserveBookComponent),\\n      },\\n      {\\n        path: \'**\',\\n        redirectTo: \'reserveBook\',\\n      },\\n    ],\\n  },\\n  {\\n    path: \'**\',\\n    redirectTo: \'\',\\n  },\\n]"},{"name":"formValueChange","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Form Value change`,\\n  props<StepperEntity>()\\n)"},{"name":"formValueChangeReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Form Value change`,\\n  props<DataFormBuilder>()\\n)"},{"name":"getSteps","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Get Steps`,\\n  props<{\\n    stepper: {\\n      entities: StepperEntity;\\n    };\\n  }>()\\n)"},{"name":"initialReserveState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"ReserveState","defaultValue":"reserveAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n  }\\n)"},{"name":"initialStepperState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"StepperState","defaultValue":"stepperAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n    entities: mockStepper(),\\n  }\\n)"},{"name":"initReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\'[Reserve Page] Init\')"},{"name":"initStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(`[${prefixStepper} Page] Init`)"},{"name":"loadReserveFailure","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  \'[Reserve/API] Load Reserve Failure\',\\n  //eslint-disable-next-line\\n  props<{ error: any }>()\\n)"},{"name":"loadReserveSuccess","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  \'[Reserve/API] Load Reserve Success\',\\n  props<{ reserve: ReserveEntity[] }>()\\n)"},{"name":"loadStepperFailure","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}/API] Load Stepper Failure`,\\n  props<{\\n    error: any; //eslint-disable-line\\n  }>()\\n)"},{"name":"loadStepperSuccess","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}/API] Load Stepper Success`,\\n  props<{\\n    stepper: StepperEntity[];\\n  }>()\\n)"},{"name":"mockStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"() =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper)"},{"name":"Open","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"prefixStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Stepper\'"},{"name":"prefixStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Reserve\'"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: AppComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/stepper-steps/stepper-steps.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: StepperStepsComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    vm: {\\n      intro: {\\n        icon: \'fa_brands:sitrox\',\\n      },\\n      retrieve: {\\n        icon: \'fa_brands:sitrox\',\\n      },\\n      steps: [\\n        {\\n          value: \'intro\',\\n          id: 1,\\n          label: \'intro\',\\n        },\\n        {\\n          value: \'retrieve\',\\n          id: 2,\\n          label: \'intro\',\\n        },\\n      ],\\n    },\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/stepper/stepper.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: StepperComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FtxFormsComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    dynamicForm: {} as FormGroup,\\n    jsonData: \'\',\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FtxTooltipComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/intro/intro.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: IntroComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/infoUser/info-user.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: InfoUserComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ReserveBookComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: SpendMoneyComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FormControlEntityComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    label: \'\',\\n    typeInput: \'text\',\\n    placeholderInput: \'\',\\n    labelInput: \'Complete label\',\\n    isFormArray: false,\\n    toggleData: [{ value: false, description: \'default\' }],\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FormLabelComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    isFormArray: false,\\n    typeInput: \'boolean\',\\n    actionBadge: [\\n      { side: \'middle\', action: () => console.log(\'TEST\'), text: \'sss\' },\\n    ],\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonComponent) => ({\\n    props: args,\\n    template: `\\n      <ngx-button-component [disable]=\'disable\' [roundedFull]=\'roundedFull\' >\\n        TEST\\n</ngx-button-component>\\n    `,\\n  }),\\n  args: {\\n    roundedFull: \'!rounded-md\',\\n    disable: true,\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: InputComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    typeInput: \'text\',\\n    placeholderInput: \'\',\\n    labelInput: \'Complete label\',\\n    toggleData: [{ value: false, description: \'default\' }],\\n  },\\n}"},{"name":"PrimaryEnable","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonComponent) => ({\\n    props: args,\\n    template: `\\n      <ngx-button-component  [disable]=\'disable\' [roundedFull]=\'roundedFull\' >\\n        TEST\\n</ngx-button-component >\\n    `,\\n  }),\\n  args: {\\n    roundedFull: \'!rounded-full\',\\n    disable: false,\\n  },\\n}"},{"name":"reducer","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createReducer(\\n  initialStepperState,\\n  on(StepperActions.initStepper, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\\n    stepperAdapter.setAll(stepper, {\\n      ...state,\\n      loaded: true,\\n    })\\n  ),\\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    formValueChange,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n)"},{"name":"reducer","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createReducer(\\n  initialReserveState,\\n  on(ReserveActions.initReserve, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\\n  ),\\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    ReserveActions.formValueChangeReserve,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n)"},{"name":"RESERVE_FEATURE_KEY","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'reserve\'"},{"name":"reserveAdapter","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"EntityAdapter<ReserveEntity>","defaultValue":"createEntityAdapter<ReserveEntity>()"},{"name":"selectAllReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => selectAll(state)\\n)"},{"name":"selectAllStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => selectAll(state)\\n)"},{"name":"selectEntity","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveEntities,\\n  selectSelectedId,\\n  (entities, selectedId) => (selectedId ? entities[selectedId] : undefined)\\n)"},{"name":"selectReserveEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => selectEntities(state)\\n)"},{"name":"selectReserveError","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.error\\n)"},{"name":"selectReserveLoaded","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.loaded\\n)"},{"name":"selectReserveState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createFeatureSelector<ReserveState>(RESERVE_FEATURE_KEY)"},{"name":"selectSelectedId","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.selectedId\\n)"},{"name":"selectStepperEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => selectEntities(state)\\n)"},{"name":"selectStepperError","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => state.error\\n)"},{"name":"selectStepperLoaded","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => state.loaded\\n)"},{"name":"selectStepperState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createFeatureSelector<StepperState>(STEPPER_FEATURE_KEY)"},{"name":"selectStepsEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  getSteps,\\n  (state: {\\n    stepper: {\\n      entities: StepperEntity;\\n    };\\n  }) => state.stepper.entities.steps\\n)"},{"name":"STEPPER_FEATURE_KEY","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'stepper\'"},{"name":"stepperAdapter","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"EntityAdapter<StepperEntity>","defaultValue":"createEntityAdapter<StepperEntity>()"},{"name":"Success","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<FormBadgeComponent>","defaultValue":"(args: FormBadgeComponent) => ({\\n  props: args,\\n})"},{"ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"stepperAdapter.getSelectors()"},{"ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"reserveAdapter.getSelectors()"},{"name":"WorkBack","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"functions":[{"name":"generateRandomId","file":"src/app/+state/mock.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"string"},{"name":"injectNgControl","file":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"reserveReducer","file":"src/app/+state/reserve/reserve.reducer.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"state","deprecated":false,"deprecationMessage":""},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"state","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"stepperReducer","file":"src/app/+state/stepper.reducer.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"state","type":"StepperState","deprecated":false,"deprecationMessage":""},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"state","type":"StepperState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"TypeBadge","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"open\\" | \\"done\\" | \\"error\\" | \\"warning\\" | \\"success\\" | \\"pfm\\"","file":"ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189},{"name":"TypeInput","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"boolean\\" | \\"toggle\\" | \\"area\\" | \\"currency\\" | \\"dropdown\\" | \\"date\\" | \\"date-interval\\"","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189},{"name":"TypeSide","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"left\\" | \\"right\\" | \\"top\\" | \\"bottom\\" | \\"middle\\"","file":"ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189},{"name":"ValidatorGenerator","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"ftx-forms/src/lib/ftx-forms/service/validator.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":181}],"enumerations":[{"name":"ConstantsEnum","childs":[{"name":"ZERO","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"},{"name":"TypeConstantEnum","childs":[{"name":"EMAIL","deprecated":false,"deprecationMessage":"","value":"email"},{"name":"MAX","deprecated":false,"deprecationMessage":"","value":"max"},{"name":"MIN","deprecated":false,"deprecationMessage":"","value":"min"},{"name":"NUMBER","deprecated":false,"deprecationMessage":"","value":"number"},{"name":"PATTERN","deprecated":false,"deprecationMessage":"","value":"pattern"},{"name":"REQUIRED","deprecated":false,"deprecationMessage":"","value":"required"},{"name":"STRING","deprecated":false,"deprecationMessage":"","value":"string"},{"name":"MIN_CHAR","deprecated":false,"deprecationMessage":"","value":"minChar"},{"name":"ONLY_CHAR","deprecated":false,"deprecationMessage":"","value":"only_char"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"},{"name":"TypePattern","childs":[{"name":"ONLY_NUMBER","deprecated":false,"deprecationMessage":"","value":"^[0-9]+$"},{"name":"ONLY_CHAR","deprecated":false,"deprecationMessage":"","value":"^[a-zA-Z\\\\s]*$"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"}],"groupedVariables":{"src/app/app.config.ts":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideEffects(ReserveEffects),\\n    provideState(fromReserve.RESERVE_FEATURE_KEY, fromReserve.reserveReducer),\\n    provideEffects(StepperEffects),\\n    provideStore(),\\n    provideState(fromStepper.STEPPER_FEATURE_KEY, fromStepper.stepperReducer),\\n    provideStoreDevtools({ maxAge: 25 }),\\n    provideRouter(appRoutes, withEnabledBlockingInitialNavigation()),\\n    importProvidersFrom(IconCoreModule),\\n    provideAnimations(),\\n  ],\\n}"}],"src/app/app.routes.ts":[{"name":"appRoutes","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.routes.ts","deprecated":false,"deprecationMessage":"","type":"Route[]","defaultValue":"[\\n  {\\n    path: \'\',\\n    loadComponent: () =>\\n      import(\'./components/stepper/stepper.component\').then(\\n        (c) => c.StepperComponent\\n      ),\\n    resolve: [\\n      () => {\\n        const stepperService = inject(StepperService);\\n        const router = inject(Router);\\n        router.events\\n          .pipe(\\n            filter((event: any) => event instanceof NavigationEnd), //eslint-disable-line\\n            map((v: NavigationEnd) => v.url.split(\'/\')[1]),\\n            tap((url) => stepperService.flagUrl$.next(url)),\\n            catchError((err) => {\\n              console.warn(err);\\n              return of(false);\\n            })\\n          )\\n          .subscribe();\\n      },\\n    ],\\n    children: [\\n      {\\n        path: \'intro\',\\n        loadComponent: () =>\\n          import(\'./components/contentSteps/intro/intro.component\').then(\\n            (c) => c.IntroComponent\\n          ),\\n      },\\n      {\\n        path: \'infoUser\',\\n        loadComponent: () =>\\n          import(\'./components/contentSteps/infoUser/info-user.component\').then(\\n            (c) => c.InfoUserComponent\\n          ),\\n      },\\n      {\\n        path: \'spendMoney\',\\n        loadComponent: () =>\\n          import(\\n            \'./components/contentSteps/spendMoney/spend-money.component\'\\n          ).then((c) => c.SpendMoneyComponent),\\n      },\\n      {\\n        path: \'reserveBook\',\\n        loadComponent: () =>\\n          import(\\n            \'./components/contentSteps/reserveBook/reserve-book.component\'\\n          ).then((c) => c.ReserveBookComponent),\\n      },\\n      {\\n        path: \'**\',\\n        redirectTo: \'reserveBook\',\\n      },\\n    ],\\n  },\\n  {\\n    path: \'**\',\\n    redirectTo: \'\',\\n  },\\n]"}],"src/app/+state/stepper.actions.ts":[{"name":"formValueChange","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Form Value change`,\\n  props<StepperEntity>()\\n)"},{"name":"getSteps","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Get Steps`,\\n  props<{\\n    stepper: {\\n      entities: StepperEntity;\\n    };\\n  }>()\\n)"},{"name":"initStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(`[${prefixStepper} Page] Init`)"},{"name":"loadStepperFailure","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}/API] Load Stepper Failure`,\\n  props<{\\n    error: any; //eslint-disable-line\\n  }>()\\n)"},{"name":"loadStepperSuccess","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}/API] Load Stepper Success`,\\n  props<{\\n    stepper: StepperEntity[];\\n  }>()\\n)"},{"name":"prefixStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.actions.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Stepper\'"}],"src/app/+state/reserve/reserve.actions.ts":[{"name":"formValueChangeReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  `[${prefixStepper}] Form Value change`,\\n  props<DataFormBuilder>()\\n)"},{"name":"initReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\'[Reserve Page] Init\')"},{"name":"loadReserveFailure","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  \'[Reserve/API] Load Reserve Failure\',\\n  //eslint-disable-next-line\\n  props<{ error: any }>()\\n)"},{"name":"loadReserveSuccess","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createAction(\\n  \'[Reserve/API] Load Reserve Success\',\\n  props<{ reserve: ReserveEntity[] }>()\\n)"},{"name":"prefixStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.actions.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'Reserve\'"}],"src/app/+state/reserve/reserve.reducer.ts":[{"name":"initialReserveState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"ReserveState","defaultValue":"reserveAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n  }\\n)"},{"name":"reducer","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createReducer(\\n  initialReserveState,\\n  on(ReserveActions.initReserve, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(ReserveActions.loadReserveSuccess, (state, { reserve }) =>\\n    reserveAdapter.setAll(reserve, { ...state, loaded: true })\\n  ),\\n  on(ReserveActions.loadReserveFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    ReserveActions.formValueChangeReserve,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n)"},{"name":"RESERVE_FEATURE_KEY","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'reserve\'"},{"name":"reserveAdapter","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.reducer.ts","deprecated":false,"deprecationMessage":"","type":"EntityAdapter<ReserveEntity>","defaultValue":"createEntityAdapter<ReserveEntity>()"}],"src/app/+state/stepper.reducer.ts":[{"name":"initialStepperState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"StepperState","defaultValue":"stepperAdapter.getInitialState(\\n  {\\n    // set initial required properties\\n    loaded: false,\\n    entities: mockStepper(),\\n  }\\n)"},{"name":"reducer","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createReducer(\\n  initialStepperState,\\n  on(StepperActions.initStepper, (state) => ({\\n    ...state,\\n    loaded: false,\\n    error: null,\\n  })),\\n  on(StepperActions.loadStepperSuccess, (state, { stepper }) =>\\n    stepperAdapter.setAll(stepper, {\\n      ...state,\\n      loaded: true,\\n    })\\n  ),\\n  on(StepperActions.loadStepperFailure, (state, { error }) => ({\\n    ...state,\\n    error,\\n  })),\\n  on(\\n    formValueChange,\\n    (\\n      state,\\n      {\\n        type, //eslint-disable-line\\n        ...update\\n      }\\n    ) => ({\\n      ...state,\\n      entities: { ...state.entities, ...update } as any, //eslint-disable-line\\n    })\\n  )\\n)"},{"name":"STEPPER_FEATURE_KEY","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'stepper\'"},{"name":"stepperAdapter","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.reducer.ts","deprecated":false,"deprecationMessage":"","type":"EntityAdapter<StepperEntity>","defaultValue":"createEntityAdapter<StepperEntity>()"}],"src/app/+state/mock.ts":[{"name":"mockStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/mock.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"() =>\\n  ({\\n    intro: {\\n      check: true,\\n      id: generateRandomId(),\\n      icon: \'fa_brands:sitrox\',\\n      values: null,\\n    } as InfoUser,\\n    infoUser: {\\n      check: true,\\n      id: generateRandomId(),\\n      info: {\\n        familyNumber: 4,\\n        roleOfMember: [\\n          {\\n            id: 0,\\n            value: \'Parent\',\\n            check: true,\\n          },\\n          {\\n            id: 1,\\n            value: \'Child\',\\n            check: false,\\n          },\\n        ],\\n        childrens: 2,\\n      },\\n      icon: \'fa_brands:twitter\',\\n    } as InfoUser,\\n    spendMoney: {\\n      id: generateRandomId(),\\n      check: true,\\n      values: {\\n        incoming: 5000,\\n        spendMoney: 3000,\\n        revenue: 2000,\\n        categorySpendMoney: [\\n          {\\n            id: generateRandomId(),\\n            value: 100,\\n            label: \'Groceries\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Food\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Drinks\',\\n                check: false,\\n              },\\n            ],\\n          },\\n          {\\n            id: generateRandomId(),\\n            value: 500,\\n            label: \'Entertainment\',\\n            scope: [\\n              {\\n                id: generateRandomId(),\\n                label: \'Movies\',\\n                check: true,\\n              },\\n              {\\n                id: generateRandomId(),\\n                label: \'Concerts\',\\n                check: false,\\n              },\\n            ],\\n          },\\n        ],\\n        recommendations: [\\n          {\\n            check: true,\\n            label: \'Cut down on eating out\',\\n          },\\n          {\\n            check: false,\\n            label: \'Cancel unused subscriptions\',\\n          },\\n        ],\\n      },\\n      icon: \'fa_solid:music\',\\n    } as InfoUser,\\n    reserveBook: {\\n      id: generateRandomId(),\\n      check: false,\\n      values: {\\n        id: generateRandomId(),\\n        graph: {\\n          id: generateRandomId(),\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              label: \'Jan\',\\n              start: 500,\\n              end: 800,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Feb\',\\n              start: 800,\\n              end: 1000,\\n            },\\n            {\\n              id: generateRandomId(),\\n              label: \'Mar\',\\n              start: 1000,\\n              end: 1200,\\n            },\\n          ],\\n          howMannyMonth: 3,\\n        },\\n        reserve: {\\n          id: generateRandomId(),\\n          currentReserve: {\\n            id: generateRandomId(),\\n            value: 1000,\\n            labelCurrency: \'USD\',\\n          },\\n          recommendationReserve: {\\n            id: generateRandomId(),\\n            value: 1200,\\n            labelCurrency: \'USD\',\\n          },\\n          howMannyMonth: 6,\\n        },\\n        details: {\\n          id: generateRandomId(),\\n          check: true,\\n          values: [\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 1\',\\n              author: \'Author A\',\\n              genre: \'Fiction\',\\n            },\\n            {\\n              id: generateRandomId(),\\n              name: \'Book 2\',\\n              author: \'Author B\',\\n              genre: \'Mystery\',\\n            },\\n          ],\\n        },\\n        modals: {\\n          setBookType: {\\n            id: generateRandomId(),\\n            value: 50,\\n            labelCurrency: \'USD\',\\n          },\\n          sumBook: {\\n            id: generateRandomId(),\\n            value: 30,\\n            labelCurrency: \'USD\',\\n          },\\n        },\\n      },\\n      icon: \'fa_brands:codepen\',\\n    } as InfoUser,\\n    steps: [\\n      {\\n        value: \'intro\',\\n        id: generateRandomId(),\\n        label: \'Intro\',\\n      },\\n      {\\n        value: \'infoUser\',\\n        id: generateRandomId(),\\n        label: \'Info User\',\\n      },\\n      {\\n        value: \'spendMoney\',\\n        id: generateRandomId(),\\n        label: \'Spend Money\',\\n      },\\n      {\\n        value: \'reserveBook\',\\n        id: generateRandomId(),\\n        label: \'ReserveBook\',\\n      },\\n    ] as Step[],\\n  } as FormStepper)"}],"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts":[{"name":"Open","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Success","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<FormBadgeComponent>","defaultValue":"(args: FormBadgeComponent) => ({\\n  props: args,\\n})"},{"name":"WorkBack","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"src/app/app.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: AppComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"src/app/components/stepper-steps/stepper-steps.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/stepper-steps/stepper-steps.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: StepperStepsComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    vm: {\\n      intro: {\\n        icon: \'fa_brands:sitrox\',\\n      },\\n      retrieve: {\\n        icon: \'fa_brands:sitrox\',\\n      },\\n      steps: [\\n        {\\n          value: \'intro\',\\n          id: 1,\\n          label: \'intro\',\\n        },\\n        {\\n          value: \'retrieve\',\\n          id: 2,\\n          label: \'intro\',\\n        },\\n      ],\\n    },\\n  },\\n}"}],"src/app/components/stepper/stepper.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/stepper/stepper.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: StepperComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FtxFormsComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    dynamicForm: {} as FormGroup,\\n    jsonData: \'\',\\n  },\\n}"}],"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FtxTooltipComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"src/app/components/contentSteps/intro/intro.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/intro/intro.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: IntroComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"src/app/components/contentSteps/infoUser/info-user.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/infoUser/info-user.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: InfoUserComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ReserveBookComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: SpendMoneyComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}],"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FormControlEntityComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    label: \'\',\\n    typeInput: \'text\',\\n    placeholderInput: \'\',\\n    labelInput: \'Complete label\',\\n    isFormArray: false,\\n    toggleData: [{ value: false, description: \'default\' }],\\n  },\\n}"}],"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: FormLabelComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    isFormArray: false,\\n    typeInput: \'boolean\',\\n    actionBadge: [\\n      { side: \'middle\', action: () => console.log(\'TEST\'), text: \'sss\' },\\n    ],\\n  },\\n}"}],"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonComponent) => ({\\n    props: args,\\n    template: `\\n      <ngx-button-component [disable]=\'disable\' [roundedFull]=\'roundedFull\' >\\n        TEST\\n</ngx-button-component>\\n    `,\\n  }),\\n  args: {\\n    roundedFull: \'!rounded-md\',\\n    disable: true,\\n  },\\n}"},{"name":"PrimaryEnable","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonComponent) => ({\\n    props: args,\\n    template: `\\n      <ngx-button-component  [disable]=\'disable\' [roundedFull]=\'roundedFull\' >\\n        TEST\\n</ngx-button-component >\\n    `,\\n  }),\\n  args: {\\n    roundedFull: \'!rounded-full\',\\n    disable: false,\\n  },\\n}"}],"ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: InputComponent) => ({\\n    props: args,\\n  }),\\n  args: {\\n    typeInput: \'text\',\\n    placeholderInput: \'\',\\n    labelInput: \'Complete label\',\\n    toggleData: [{ value: false, description: \'default\' }],\\n  },\\n}"}],"src/app/+state/reserve/reserve.selectors.ts":[{"name":"selectAllReserve","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => selectAll(state)\\n)"},{"name":"selectEntity","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveEntities,\\n  selectSelectedId,\\n  (entities, selectedId) => (selectedId ? entities[selectedId] : undefined)\\n)"},{"name":"selectReserveEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => selectEntities(state)\\n)"},{"name":"selectReserveError","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.error\\n)"},{"name":"selectReserveLoaded","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.loaded\\n)"},{"name":"selectReserveState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createFeatureSelector<ReserveState>(RESERVE_FEATURE_KEY)"},{"name":"selectSelectedId","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectReserveState,\\n  (state: ReserveState) => state.selectedId\\n)"},{"ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/reserve/reserve.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"reserveAdapter.getSelectors()"}],"src/app/+state/stepper.selectors.ts":[{"name":"selectAllStepper","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => selectAll(state)\\n)"},{"name":"selectStepperEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => selectEntities(state)\\n)"},{"name":"selectStepperError","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => state.error\\n)"},{"name":"selectStepperLoaded","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  selectStepperState,\\n  (state: StepperState) => state.loaded\\n)"},{"name":"selectStepperState","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createFeatureSelector<StepperState>(STEPPER_FEATURE_KEY)"},{"name":"selectStepsEntities","ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"createSelector(\\n  getSteps,\\n  (state: {\\n    stepper: {\\n      entities: StepperEntity;\\n    };\\n  }) => state.stepper.entities.steps\\n)"},{"ctype":"miscellaneous","subtype":"variable","file":"src/app/+state/stepper.selectors.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"stepperAdapter.getSelectors()"}]},"groupedFunctions":{"src/app/+state/mock.ts":[{"name":"generateRandomId","file":"src/app/+state/mock.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"string"}],"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts":[{"name":"injectNgControl","file":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}],"src/app/+state/reserve/reserve.reducer.ts":[{"name":"reserveReducer","file":"src/app/+state/reserve/reserve.reducer.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"state","deprecated":false,"deprecationMessage":""},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"state","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/+state/stepper.reducer.ts":[{"name":"stepperReducer","file":"src/app/+state/stepper.reducer.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"state","type":"StepperState","deprecated":false,"deprecationMessage":""},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"state","type":"StepperState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"action","type":"Action","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts":[{"name":"ConstantsEnum","childs":[{"name":"ZERO","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"},{"name":"TypeConstantEnum","childs":[{"name":"EMAIL","deprecated":false,"deprecationMessage":"","value":"email"},{"name":"MAX","deprecated":false,"deprecationMessage":"","value":"max"},{"name":"MIN","deprecated":false,"deprecationMessage":"","value":"min"},{"name":"NUMBER","deprecated":false,"deprecationMessage":"","value":"number"},{"name":"PATTERN","deprecated":false,"deprecationMessage":"","value":"pattern"},{"name":"REQUIRED","deprecated":false,"deprecationMessage":"","value":"required"},{"name":"STRING","deprecated":false,"deprecationMessage":"","value":"string"},{"name":"MIN_CHAR","deprecated":false,"deprecationMessage":"","value":"minChar"},{"name":"ONLY_CHAR","deprecated":false,"deprecationMessage":"","value":"only_char"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"},{"name":"TypePattern","childs":[{"name":"ONLY_NUMBER","deprecated":false,"deprecationMessage":"","value":"^[0-9]+$"},{"name":"ONLY_CHAR","deprecated":false,"deprecationMessage":"","value":"^[a-zA-Z\\\\s]*$"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"ftx-forms/src/lib/ftx-forms/utils/constants.enum.ts"}]},"groupedTypeAliases":{"ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts":[{"name":"TypeBadge","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"open\\" | \\"done\\" | \\"error\\" | \\"warning\\" | \\"success\\" | \\"pfm\\"","file":"ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189},{"name":"TypeSide","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"left\\" | \\"right\\" | \\"top\\" | \\"bottom\\" | \\"middle\\"","file":"ftx-forms/src/lib/ftx-forms/utils/type-form.type.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189}],"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts":[{"name":"TypeInput","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"boolean\\" | \\"toggle\\" | \\"area\\" | \\"currency\\" | \\"dropdown\\" | \\"date\\" | \\"date-interval\\"","file":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","deprecated":false,"deprecationMessage":"","description":"","kind":189}],"ftx-forms/src/lib/ftx-forms/service/validator.service.ts":[{"name":"ValidatorGenerator","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"ftx-forms/src/lib/ftx-forms/service/validator.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":181}]}},"routes":[],"coverage":{"count":4,"status":"low","files":[{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Open","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Success","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WorkBack","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts","type":"component","linktype":"component","name":"FormBadgeComponent","coveragePercent":50,"coverageCount":"2/4","status":"medium"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formBadge/form-badge.component.ts","type":"interface","linktype":"interface","name":"ActionBadge","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts","type":"component","linktype":"component","name":"FormControlEntityComponent","coveragePercent":62,"coverageCount":"5/8","status":"good"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formControlEntity/form-control-entity.component.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"injectNgControl","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/components/formLabel/form-label.component.ts","type":"component","linktype":"component","name":"FormLabelComponent","coveragePercent":75,"coverageCount":"6/8","status":"good"},{"filePath":"ftx-forms/src/lib/ftx-forms/directive/fade-in-out.directive.ts","type":"directive","linktype":"directive","name":"FadeInOutDirective","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"ftx-forms/src/lib/ftx-forms/directive/pap-control.directive.ts","type":"directive","linktype":"directive","name":"PapControlDirective","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/directive/patch-form-group-value.directive.ts","type":"directive","linktype":"directive","name":"PatchFormGroupValueDirective","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/ftx-forms.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/ftx-forms.component.ts","type":"component","linktype":"component","name":"FtxFormsComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","type":"interface","linktype":"interface","name":"DataFormBuilder","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","type":"interface","linktype":"interface","name":"DescriptionEntity","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","type":"interface","linktype":"interface","name":"ValidatorConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/interfaces/data-form-builder.ts","type":"interface","linktype":"interface","name":"ValueToggle","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/service/generative.service.ts","type":"injectable","linktype":"injectable","name":"GenerativeService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/service/service-generate-form-builder.service.ts","type":"injectable","linktype":"injectable","name":"GenerateFormBuilderService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/service/validator.service.ts","type":"injectable","linktype":"injectable","name":"ValidatorService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PrimaryEnable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/shared/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/shared/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-forms/src/lib/ftx-forms/shared/input/input.component.ts","type":"component","linktype":"component","name":"InputComponent","coveragePercent":66,"coverageCount":"4/6","status":"good"},{"filePath":"ftx-sivan-shared/src/lib/directive/scroll-hint.directive.ts","type":"directive","linktype":"directive","name":"ScrollHintDirective","coveragePercent":66,"coverageCount":"6/9","status":"good"},{"filePath":"ftx-sivan-shared/src/lib/ftx-sivan-shared/ftx-sivan-shared.component.ts","type":"component","linktype":"component","name":"FtxSivanSharedComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-tooltip/src/lib/ftx-tooltip/directive/render-you.directive.ts","type":"directive","linktype":"directive","name":"RenderYouDirective","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"ftx-tooltip/src/lib/ftx-tooltip/ftx-tooltip.component.ts","type":"component","linktype":"component","name":"FtxTooltipComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"ftx-tooltip/src/lib/ftx-tooltip/service/zone-axe.service.ts","type":"injectable","linktype":"injectable","name":"ZoneAxeService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"CategorySpendMoney","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"FormStepper","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Graph","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"GraphValue","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Info","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"InfoUser","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Modals","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Recommendation","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Reserve","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"RoleOfMember","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Scope","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"SetBookType","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"Step","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"ValuesClass","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"interface","linktype":"interface","name":"ValuesValue","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateRandomId","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/mock.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockStepper","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formValueChangeReserve","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initReserve","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loadReserveFailure","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loadReserveSuccess","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"prefixStepper","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.effects.ts","type":"injectable","linktype":"injectable","name":"ReserveEffects","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/+state/reserve/reserve.models.ts","type":"interface","linktype":"interface","name":"ReserveEntity","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"interface","linktype":"interface","name":"ReservePartialState","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"interface","linktype":"interface","name":"ReserveState","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"reserveReducer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initialReserveState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"reducer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RESERVE_FEATURE_KEY","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"reserveAdapter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectAllReserve","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectEntity","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectReserveEntities","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectReserveError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectReserveLoaded","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectReserveState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectSelectedId","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/reserve/reserve.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"formValueChange","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getSteps","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initStepper","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loadStepperFailure","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loadStepperSuccess","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.actions.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"prefixStepper","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.effects.ts","type":"injectable","linktype":"injectable","name":"StepperEffects","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/+state/stepper.models.ts","type":"interface","linktype":"interface","name":"BookDetail","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/stepper.models.ts","type":"interface","linktype":"interface","name":"Label","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/stepper.models.ts","type":"interface","linktype":"interface","name":"StepperEntity","coveragePercent":16,"coverageCount":"1/6","status":"low"},{"filePath":"src/app/+state/stepper.models.ts","type":"interface","linktype":"interface","name":"StepperValues","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"interface","linktype":"interface","name":"StepperPartialState","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"interface","linktype":"interface","name":"StepperState","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"stepperReducer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initialStepperState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"reducer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"STEPPER_FEATURE_KEY","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.reducer.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"stepperAdapter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectAllStepper","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectStepperEntities","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectStepperError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectStepperLoaded","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectStepperState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"selectStepsEntities","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/+state/stepper.selectors.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/app.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/app.config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"appConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/app.routes.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"appRoutes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/infoUser/info-user.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/infoUser/info-user.component.ts","type":"component","linktype":"component","name":"InfoUserComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/components/contentSteps/intro/intro.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/intro/intro.component.ts","type":"component","linktype":"component","name":"IntroComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/reserveBook/reserve-book.component.ts","type":"component","linktype":"component","name":"ReserveBookComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/contentSteps/spendMoney/spend-money.component.ts","type":"component","linktype":"component","name":"SpendMoneyComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/services/stepper.service.ts","type":"injectable","linktype":"injectable","name":"StepperService","coveragePercent":75,"coverageCount":"6/8","status":"good"},{"filePath":"src/app/components/stepper-steps/stepper-steps.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/stepper-steps/stepper-steps.component.ts","type":"component","linktype":"component","name":"StepperStepsComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/components/stepper/stepper.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/stepper/stepper.component.ts","type":"component","linktype":"component","name":"StepperComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"}]}}'),decorators=[];(0,angular.P)(documentation_namespaceObject);const __namedExportsOrder=["decorators"]},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var dist=__webpack_require__("./node_modules/@storybook/global/dist/index.mjs"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:src\/app(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(10);return __webpack_require__("./src/app lazy recursive ^\\.\\/.*$ include: (?:\\/src\\/app(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:ftx-tooltip(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(14);return __webpack_require__("./ftx-tooltip lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-tooltip(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}(),function(){var _ref3=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:ftx-forms(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(12);return __webpack_require__("./ftx-forms lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-forms(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x3){return _ref3.apply(this,arguments)}}(),function(){var _ref4=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:ftx-sivan-shared(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(19);return __webpack_require__("./ftx-sivan-shared lazy recursive ^\\.\\/.*$ include: (?:\\/ftx-sivan-shared(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x4){return _ref4.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.Z)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===dist.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new external_STORYBOOK_MODULE_PREVIEW_API_.ClientApi({storyStore:preview.storyStore}),preview.initialize({importFn:function importFn(_x5){return _importFn.apply(this,arguments)},getProjectAnnotations:()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-styling/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-styling/dist/preview.mjs"),__webpack_require__("./.storybook/preview.js")])})},"./src/app lazy recursive ^\\.\\/.*$ include: (?:\\/src\\/app(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./app.component.stories":["./src/app/app.component.stories.ts",67,886],"./app.component.stories.ts":["./src/app/app.component.stories.ts",67,886],"./components/contentSteps/infoUser/info-user.component.stories":["./src/app/components/contentSteps/infoUser/info-user.component.stories.ts",943,640,21,149,193,888,24,800,62],"./components/contentSteps/infoUser/info-user.component.stories.ts":["./src/app/components/contentSteps/infoUser/info-user.component.stories.ts",943,640,21,149,193,888,24,800,62],"./components/contentSteps/intro/intro.component.stories":["./src/app/components/contentSteps/intro/intro.component.stories.ts",565],"./components/contentSteps/intro/intro.component.stories.ts":["./src/app/components/contentSteps/intro/intro.component.stories.ts",565],"./components/contentSteps/reserveBook/reserve-book.component.stories":["./src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts",943,640,21,149,193,888,399,24,962,158],"./components/contentSteps/reserveBook/reserve-book.component.stories.ts":["./src/app/components/contentSteps/reserveBook/reserve-book.component.stories.ts",943,640,21,149,193,888,399,24,962,158],"./components/contentSteps/spendMoney/spend-money.component.stories":["./src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts",943,640,21,149,193,858,24,697],"./components/contentSteps/spendMoney/spend-money.component.stories.ts":["./src/app/components/contentSteps/spendMoney/spend-money.component.stories.ts",943,640,21,149,193,858,24,697],"./components/stepper-steps/stepper-steps.component.stories":["./src/app/components/stepper-steps/stepper-steps.component.stories.ts",943,640,21,193,67,399,995,962,300],"./components/stepper-steps/stepper-steps.component.stories.ts":["./src/app/components/stepper-steps/stepper-steps.component.stories.ts",943,640,21,193,67,399,995,962,300],"./components/stepper/stepper.component.stories":["./src/app/components/stepper/stepper.component.stories.ts",943,640,21,193,67,399,962,473],"./components/stepper/stepper.component.stories.ts":["./src/app/components/stepper/stepper.component.stories.ts",943,640,21,193,67,399,962,473]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./src/app lazy recursive ^\\.\\/.*$ include: (?:\\/src\\/app(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%28244, 67, 54, 0.25%29%27/%3E%3C/svg%3E":module=>{"use strict";module.exports="data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%28244, 67, 54, 0.25%29%27/%3E%3C/svg%3E"},"data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%28255, 64, 129, 0.25%29%27/%3E%3C/svg%3E":module=>{"use strict";module.exports="data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%28255, 64, 129, 0.25%29%27/%3E%3C/svg%3E"},"data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%2863, 81, 181, 0.25%29%27/%3E%3C/svg%3E":module=>{"use strict";module.exports="data:image/svg+xml,%3Csvg version=%271.1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 enable-background=%27new 0 0 5 2%27 xml:space=%27preserve%27 viewBox=%270 0 5 2%27 preserveAspectRatio=%27none slice%27%3E%3Ccircle cx=%271%27 cy=%271%27 r=%271%27 fill=%27rgba%2863, 81, 181, 0.25%29%27/%3E%3C/svg%3E"},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[373],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/indigo-pink.css?ngGlobalStyle"),__webpack_exec__("./src/styles.scss?ngGlobalStyle"))));__webpack_require__.O()}]);